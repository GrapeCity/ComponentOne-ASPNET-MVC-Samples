//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Excel {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Excel() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Excel", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate Excel.
        /// </summary>
        internal static string Index_GenerateExcel {
            get {
                return ResourceManager.GetString("Index_GenerateExcel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With ComponentOne Excel for .NET you can create Microsoft Excel files directly from your application&apos;s code. 
        ///       The possibilities are endless with an easy-to-manipulate Excel object model exposed in your code. Create Excel files 
        ///       from data that does not directly support Excel exportation like any grid, schedule or chart. Excel for .NET supports formulas, 
        ///       cell styles and Excel formatting. This sample creates a workbook with NorthWind product information using the C1XLBook control. 
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel for .NET makes it easy to read Excel files in your applications, and you don&apos;t even need to have MicrosoftÂ® Excel installed. 
        ///       You can use the data from your Excel files in any number of ways. In this demo we use the C1XLBook component to load and extract the data 
        ///       into arrays which are used as the data source for our C1Chart control..
        /// </summary>
        internal static string LoadingWorkSheets_Text0 {
            get {
                return ResourceManager.GetString("LoadingWorkSheets_Text0", resourceCulture);
            }
        }
    }
}
