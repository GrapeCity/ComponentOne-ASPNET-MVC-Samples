//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcExplorer.Localization {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SunburstRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal SunburstRes() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MvcExplorer.Localization.SunburstRes", typeof(SunburstRes).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This view shows the Sunburst&apos;s basic features. It binds the chart to a data model..
        /// </summary>
        public static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to If you move the mouse over a chart element, a tooltip will appear showing details about the data point..
        /// </summary>
        public static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &lt;b&gt;legend-position&lt;/b&gt; attribute can be used to customize the appearance of the chart&apos;s legend.
        ///        &lt;br /&gt; The &lt;b&gt;header&lt;/b&gt; and &lt;b&gt;footer&lt;/b&gt; attributes can be used to add titles to the Sunburst chart control.
        ///        &lt;br /&gt;&lt;b&gt;c1-flex-chart-title-style&lt;/b&gt; tag can be used to apply the style to header and footer..
        /// </summary>
        public static string LegendAndTitles_Text0 {
            get {
                return ResourceManager.GetString("LegendAndTitles_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The following example allows you to change the Sunburst&apos;s &lt;b&gt;legend postion&lt;/b&gt;, and
        ///        &lt;b&gt;the appearance of the header and footer&lt;/b&gt;..
        /// </summary>
        public static string LegendAndTitles_Text1 {
            get {
                return ResourceManager.GetString("LegendAndTitles_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;b&gt;selected-item-position&lt;/b&gt;:  Specifies the position of the selected sunburst slice.  The available options are Top, Bottom,
        ///            Left, Right, and None (default)..
        /// </summary>
        public static string Selection_Li1 {
            get {
                return ResourceManager.GetString("Selection_Li1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;b&gt;is-animated&lt;/b&gt;:  Determines whether or not to animate the selection..
        /// </summary>
        public static string Selection_Li2 {
            get {
                return ResourceManager.GetString("Selection_Li2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;b&gt;selected-item-offset&lt;/b&gt;:  Specifies the offset of the selected sunburst slice from the center of the control..
        /// </summary>
        public static string Selection_Li3 {
            get {
                return ResourceManager.GetString("Selection_Li3", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Sunburst chart control allows you to select data points by clicking or touching a sunburst slice. Use the &lt;b&gt;selection-mode&lt;/b&gt;
        ///        attribute to specify whether you want to allow selection by data point or no selection at all (default)..
        /// </summary>
        public static string Selection_Text0 {
            get {
                return ResourceManager.GetString("Selection_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Setting the &lt;b&gt;selection-mode&lt;/b&gt; attribute to &lt;b&gt;Point&lt;/b&gt; causes the Sunburst to update the &lt;b&gt;selection&lt;/b&gt; attribute when
        ///        the user clicks on a sunburst slice, and to apply the &quot;wj-state-selected&quot; class to the selected element. Setting the Sunburst&apos;s
        ///        &lt;b&gt;selection-mode&lt;/b&gt; property to &lt;b&gt;Series&lt;/b&gt; or &lt;b&gt;None&lt;/b&gt; will disable selections within the control..
        /// </summary>
        public static string Selection_Text1 {
            get {
                return ResourceManager.GetString("Selection_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Sunburst chart offers three additional properties to customize the selection:.
        /// </summary>
        public static string Selection_Text2 {
            get {
                return ResourceManager.GetString("Selection_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The appearance of the Sunburst chart control is largely defined in CSS. In addition to the default theme, we
        ///        include several professionally designed themes that customize the appearance of all MVC controls to
        ///        achieve a consistent and attractive look..
        /// </summary>
        public static string Theming_Text0 {
            get {
                return ResourceManager.GetString("Theming_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You can customize the appearance of the Sunburst chart control using CSS. To do this, copy the CSS rules from the
        ///        default theme to a new CSS file and modify the properties as needed..
        /// </summary>
        public static string Theming_Text1 {
            get {
                return ResourceManager.GetString("Theming_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to In this example, we added the &quot;custom-sunburst-chart&quot; CSS class to the control and defined some CSS rules to
        ///        change the fill, font family, and font weight of the header and fill color of the slices..
        /// </summary>
        public static string Theming_Text2 {
            get {
                return ResourceManager.GetString("Theming_Text2", resourceCulture);
            }
        }
    }
}
