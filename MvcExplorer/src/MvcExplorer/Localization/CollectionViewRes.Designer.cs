//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcExplorer.Localization {
    using System;
    using System.Reflection;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CollectionViewRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CollectionViewRes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MvcExplorer.Localization.CollectionViewRes", typeof(CollectionViewRes).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample show how to add calculated fields to CollectionView..
        /// </summary>
        public static string CalculatedFields_Text0 {
            get {
                return ResourceManager.GetString("CalculatedFields_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can add calculated fields to CollectionView using &lt;b&gt;CalculatedFields&lt;/b&gt; property. Each calculated field setting contains name and expression. The expression is regular with variable &apos;$&apos; that represents the current data item which allows referring to original and calculated fields of it..
        /// </summary>
        public static string CalculatedFields_Text1 {
            get {
                return ResourceManager.GetString("CalculatedFields_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculated fields are read-only and are automatically updated their dependent fields change..
        /// </summary>
        public static string CalculatedFields_Text2 {
            get {
                return ResourceManager.GetString("CalculatedFields_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;&lt;b&gt;Note&lt;/b&gt;: To use calculated fields in IE11, you must include a proxy polyfill such as https://www.npmjs.com/package/proxy-polyfill. &lt;/i&gt;.
        /// </summary>
        public static string CalculatedFields_Text3 {
            get {
                return ResourceManager.GetString("CalculatedFields_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CollectionViewNavigator is used for navigating records of data in CollectionView. &lt;br&gt;This demo uses two CollectionViewNavigator controls, the first for navigating by item, the second for navigating by page. It uses following properties: &lt;br&gt; The &lt;b&gt;ItemSourceId&lt;/b&gt; refers the Id of CollectionViewService or Control that binds to data for navigating. &lt;br&gt; The &lt;b&gt;ByPage&lt;/b&gt; property for determining navigating by item or by page.&lt;br&gt; The &lt;b&gt;RepeatButtons&lt;/b&gt; property for enabling whether the next/previous  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CollectionViewNavigator_Text0 {
            get {
                return ResourceManager.GetString("CollectionViewNavigator_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows basic features of CollectionView ASP.NET MVC..
        /// </summary>
        public static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;refreshOnEdit&lt;/b&gt; property determines whether the CollectionView should automatically refresh its results (by applying the sort, filter, and grouping operations) after items are edited. This property is set to &lt;b&gt;true&lt;/b&gt; by default, which ensures the collection is always sorted, filtered, and grouped correctly after any edit operations..
        /// </summary>
        public static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows how sorting work on CollectionView..
        /// </summary>
        public static string Sorting_Text0 {
            get {
                return ResourceManager.GetString("Sorting_Text0", resourceCulture);
            }
        }
    }
}
