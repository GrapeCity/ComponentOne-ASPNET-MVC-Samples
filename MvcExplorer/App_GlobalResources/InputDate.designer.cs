//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InputDate {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InputDate() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.InputDate", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandleWheel.
        /// </summary>
        internal static string HandleWheel_Text0 {
            get {
                return ResourceManager.GetString("HandleWheel_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;HandleWheel&lt;/i&gt;: Determines whether the user can edit the current value using the mouse wheel..
        /// </summary>
        internal static string HandleWheel_Text1 {
            get {
                return ResourceManager.GetString("HandleWheel_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows the basic usage of the InputDate control..
        /// </summary>
        internal static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MonthCount.
        /// </summary>
        internal static string MonthCount_Text0 {
            get {
                return ResourceManager.GetString("MonthCount_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RangeMin.
        /// </summary>
        internal static string Range_Text0 {
            get {
                return ResourceManager.GetString("Range_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RangeMax.
        /// </summary>
        internal static string Range_Text1 {
            get {
                return ResourceManager.GetString("Range_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected range of days:.
        /// </summary>
        internal static string Range_Text2 {
            get {
                return ResourceManager.GetString("Range_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows how to use InputDate with SelectionMode.Range.
        /// </summary>
        internal static string Range_Text3 {
            get {
                return ResourceManager.GetString("Range_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ranges are defined by the &lt;b&gt;Value&lt;/b&gt; and &lt;b&gt;RangeEnd&lt;/b&gt; properties..
        /// </summary>
        internal static string Range_Text4 {
            get {
                return ResourceManager.GetString("Range_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To select a date range with the mouse, the user should click the starting date &lt;b&gt;Value&lt;/b&gt; and then the ending date &lt;b&gt;RangeEnd&lt;/b&gt;..
        /// </summary>
        internal static string Range_Text5 {
            get {
                return ResourceManager.GetString("Range_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To select a date range with the keyboard, the user should use the cursor keys to select the starting date, then press the shift key and extend the selection to select the ending date..
        /// </summary>
        internal static string Range_Text6 {
            get {
                return ResourceManager.GetString("Range_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this &lt;b&gt;InputDate&lt;/b&gt; control to select a date. 
        ///    Notice that you won&apos;t be able to select or type weekends..
        /// </summary>
        internal static string Validation_Text0 {
            get {
                return ResourceManager.GetString("Validation_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows how to use &lt;b&gt;ItemValidator&lt;/b&gt; function to determine whether dates
        ///    are valid for selection and typing..
        /// </summary>
        internal static string Validation_Text1 {
            get {
                return ResourceManager.GetString("Validation_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It also show how to use InvalidInput event to check invalid date and keep focus for correcting it..
        /// </summary>
        internal static string Validation_Text2 {
            get {
                return ResourceManager.GetString("Validation_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following sample checks invalid date using InvalidInput event..
        /// </summary>
        internal static string Validation_Text3 {
            get {
                return ResourceManager.GetString("Validation_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input, the value must be date in the current year..
        /// </summary>
        internal static string Validation_Text4 {
            get {
                return ResourceManager.GetString("Validation_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeekAfter.
        /// </summary>
        internal static string WeekAfter_Text0 {
            get {
                return ResourceManager.GetString("WeekAfter_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set value of WeekBefore and WeekAfter for InputDate.
        /// </summary>
        internal static string WeekBeforeAfterHeader_Text0 {
            get {
                return ResourceManager.GetString("WeekBeforeAfterHeader_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeekBefore.
        /// </summary>
        internal static string WeekBefore_Text0 {
            get {
                return ResourceManager.GetString("WeekBefore_Text0", resourceCulture);
            }
        }
    }
}
