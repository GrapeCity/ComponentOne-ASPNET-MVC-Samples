//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class C1Input {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal C1Input() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.C1Input", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Popup control can be used to implement static
        ///    methods for showing alert and prompt dialogs:.
        /// </summary>
        internal static string AlertsPrompts_Text1 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog Class.
        /// </summary>
        internal static string AlertsPrompts_Text10 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header Class.
        /// </summary>
        internal static string AlertsPrompts_Text11 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body Class.
        /// </summary>
        internal static string AlertsPrompts_Text12 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Class.
        /// </summary>
        internal static string AlertsPrompts_Text13 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body Class.
        /// </summary>
        internal static string AlertsPrompts_Text14 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK Class.
        /// </summary>
        internal static string AlertsPrompts_Text15 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel Class.
        /// </summary>
        internal static string AlertsPrompts_Text16 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show.
        /// </summary>
        internal static string AlertsPrompts_Text2 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string AlertsPrompts_Text3 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header.
        /// </summary>
        internal static string AlertsPrompts_Text4 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body.
        /// </summary>
        internal static string AlertsPrompts_Text5 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Value.
        /// </summary>
        internal static string AlertsPrompts_Text6 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Small.
        /// </summary>
        internal static string AlertsPrompts_Text7 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK Text.
        /// </summary>
        internal static string AlertsPrompts_Text8 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel Text.
        /// </summary>
        internal static string AlertsPrompts_Text9 {
            get {
                return ResourceManager.GetString("AlertsPrompts_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alerts and Prompts.
        /// </summary>
        internal static string AlertsPrompts_Title {
            get {
                return ResourceManager.GetString("AlertsPrompts_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ComboBox control is one of the most powerful and flexible in C1 MVC&apos;s input module.
        ///    It can be used to edit strings and to select items from lists. It is used as a base class
        ///    for several other controls including AutoComplete, MultiSelect, InputTime, and Menu..
        /// </summary>
        internal static string ArchitectureComboBox_Text1 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;isRequired&lt;/b&gt;
        ///        Gets or sets a value that determines whether users should be
        ///        allowed clear the text in the control..
        /// </summary>
        internal static string ArchitectureComboBox_Text10 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This example illustrates the use of these properties:.
        /// </summary>
        internal static string ArchitectureComboBox_Text11 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to displayMemberPath:.
        /// </summary>
        internal static string ArchitectureComboBox_Text12 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selectedValuePath:.
        /// </summary>
        internal static string ArchitectureComboBox_Text13 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selectedItem:.
        /// </summary>
        internal static string ArchitectureComboBox_Text14 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selectedIndex:.
        /// </summary>
        internal static string ArchitectureComboBox_Text15 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selectedValue:.
        /// </summary>
        internal static string ArchitectureComboBox_Text16 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to text:.
        /// </summary>
        internal static string ArchitectureComboBox_Text17 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The main properties in the ComboBox control are:.
        /// </summary>
        internal static string ArchitectureComboBox_Text2 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;itemsSource&lt;/b&gt;
        ///        Gets or sets an array (or CollectionView) containing the items
        ///        (values or objects) to choose from..
        /// </summary>
        internal static string ArchitectureComboBox_Text3 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;displayMemberPath&lt;/b&gt;
        ///        Gets or sets the name of the property of the items to display
        ///        in the input element and in the drop-down list..
        /// </summary>
        internal static string ArchitectureComboBox_Text4 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;selectedValuePath&lt;/b&gt;
        ///        Gets or sets the name of the property of the items to use
        ///        when getting or setting the value of the &lt;b&gt;selectedValue&lt;/b&gt;
        ///        property..
        /// </summary>
        internal static string ArchitectureComboBox_Text5 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;selectedItem&lt;/b&gt;
        ///        Gets or sets the currently selected item in the
        ///        &lt;b&gt;itemsSource&lt;/b&gt; collection..
        /// </summary>
        internal static string ArchitectureComboBox_Text6 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;selectedIndex&lt;/b&gt;
        ///        Gets or sets the index of the currently selected item..
        /// </summary>
        internal static string ArchitectureComboBox_Text7 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;selectedValue&lt;/b&gt;
        ///        Gets or sets the value of the &lt;b&gt;selectedValuePath&lt;/b&gt;
        ///        property in the currently selected item..
        /// </summary>
        internal static string ArchitectureComboBox_Text8 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;isEditable&lt;/b&gt;
        ///        Gets or sets a value that determines whether users should
        ///        be allowed to enter values not present in the &lt;b&gt;itemsSource&lt;/b&gt;..
        /// </summary>
        internal static string ArchitectureComboBox_Text9 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox.
        /// </summary>
        internal static string ArchitectureComboBox_Title {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data.
        /// </summary>
        internal static string ArchitectureComboBox_Title1 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox.
        /// </summary>
        internal static string ArchitectureComboBox_Title2 {
            get {
                return ResourceManager.GetString("ArchitectureComboBox_Title2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC&apos;s input controls are composed of standard HTML elements.
        ///    Many have an inner input element where the user can type,
        ///    buttons used to show drop-down editors, or clickable/seletable
        ///    areas..
        /// </summary>
        internal static string Architecture_Text1 {
            get {
                return ResourceManager.GetString("Architecture_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to text &lt;span class=&quot;detail&quot;&gt;formatted value&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text10 {
            get {
                return ResourceManager.GetString("Architecture_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to value &lt;span class=&quot;detail&quot;&gt;parsed text&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text11 {
            get {
                return ResourceManager.GetString("Architecture_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to format &lt;span class=&quot;detail&quot;&gt;format used to convert between text and value&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text12 {
            get {
                return ResourceManager.GetString("Architecture_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to And controls used to input numbers, dates, and times have the
        ///    folowing properties in common:.
        /// </summary>
        internal static string Architecture_Text13 {
            get {
                return ResourceManager.GetString("Architecture_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min &lt;span class=&quot;detail&quot;&gt;minimum value&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text14 {
            get {
                return ResourceManager.GetString("Architecture_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max &lt;span class=&quot;detail&quot;&gt;maximum value&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text15 {
            get {
                return ResourceManager.GetString("Architecture_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to step &lt;span class=&quot;detail&quot;&gt;increment applied with mouse wheel or spinner buttons&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text16 {
            get {
                return ResourceManager.GetString("Architecture_Text16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All C1 MVC input controls were designed to make data-entry easy
        ///    and effective by providing early validation whenever possible.
        ///    Users cannot, for example, clear the content of any controls if
        ///    the &lt;b&gt;isRequired&lt;/b&gt; property is set to true, or type
        ///    alphabetical characters in numeric input controls..
        /// </summary>
        internal static string Architecture_Text2 {
            get {
                return ResourceManager.GetString("Architecture_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Most of C1 MVC&apos;s input controls have a set of common properties
        ///    that reflect basic HTML attributes:.
        /// </summary>
        internal static string Architecture_Text3 {
            get {
                return ResourceManager.GetString("Architecture_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isRequired &lt;span class=&quot;detail&quot;&gt;&quot;required&quot; attribute&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text4 {
            get {
                return ResourceManager.GetString("Architecture_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isDisabled &lt;span class=&quot;detail&quot;&gt;&quot;disabled&quot; attribute&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text5 {
            get {
                return ResourceManager.GetString("Architecture_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;is&quot; prefix prevents conflicts in markup between the names
        ///    of control properties and HTML attributes..
        /// </summary>
        internal static string Architecture_Text6 {
            get {
                return ResourceManager.GetString("Architecture_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input controls based on HTML input elements have more properties
        ///    in common:.
        /// </summary>
        internal static string Architecture_Text7 {
            get {
                return ResourceManager.GetString("Architecture_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to inputElement &lt;span class=&quot;detail&quot;&gt;reference to the inner input element&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text8 {
            get {
                return ResourceManager.GetString("Architecture_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isReadOnly &lt;span class=&quot;detail&quot;&gt;&quot;readonly&quot; attribute&lt;/span&gt;.
        /// </summary>
        internal static string Architecture_Text9 {
            get {
                return ResourceManager.GetString("Architecture_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Control Arquitecture.
        /// </summary>
        internal static string Architecture_Title {
            get {
                return ResourceManager.GetString("Architecture_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AutoComplete below populates the drop-down list
        ///    asynchronously using the &lt;b&gt;itemsSourceFunction&lt;/b&gt;
        ///    property..
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Text1 {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try typing &quot;ch&quot; or &quot;chi&quot; and waiting a second to see
        ///    the drop-down..
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Text2 {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete:.
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Text3 {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product Name.
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Text4 {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected product: &lt;b id=&quot;msg&quot;&gt;None&lt;/b&gt;.
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Text5 {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is especially useful when the number
        ///    of items is large (thousands or millions of items)
        ///    and the data is stored in a server database capable
        ///    of fast searches..
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Text6 {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete Async Loading.
        /// </summary>
        internal static string AutoCompleteAsyncLoading_Title {
            get {
                return ResourceManager.GetString("AutoCompleteAsyncLoading_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first AutoComplete controls below uses the default
        ///    search algorithm. The second uses the &lt;b&gt;itemsSourceFunction&lt;/b&gt;
        ///    property to customize the search algorithm.
        ///    Instead of looking for items that &lt;b&gt;contain&lt;/b&gt; the user input,
        ///    it looks for items that &lt;b&gt;start&lt;/b&gt; with it (like the ComboBox):.
        /// </summary>
        internal static string AutoCompleteCustomSearch_Text1 {
            get {
                return ResourceManager.GetString("AutoCompleteCustomSearch_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compare the two by typing a string such as &quot;no&quot; or &quot;un&quot;..
        /// </summary>
        internal static string AutoCompleteCustomSearch_Text2 {
            get {
                return ResourceManager.GetString("AutoCompleteCustomSearch_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default:.
        /// </summary>
        internal static string AutoCompleteCustomSearch_Text3 {
            get {
                return ResourceManager.GetString("AutoCompleteCustomSearch_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom:.
        /// </summary>
        internal static string AutoCompleteCustomSearch_Text4 {
            get {
                return ResourceManager.GetString("AutoCompleteCustomSearch_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Search.
        /// </summary>
        internal static string AutoCompleteCustomSearch_Title {
            get {
                return ResourceManager.GetString("AutoCompleteCustomSearch_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the AutoComplete control highlights matches by
        ///    applying the &lt;b&gt;wj-autocomplete-match&lt;/b&gt; class to matching
        ///    spans in the drop-down list. C1 MVC&apos;s css defines a rule
        ///    that makes those elements bold..
        /// </summary>
        internal static string AutoCompleteSearching_Text1 {
            get {
                return ResourceManager.GetString("AutoCompleteSearching_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to use a different style to highlight matches,
        ///    use CSS to customize the rules applied to the
        ///    &lt;b&gt;wj-autocomplete-match&lt;/b&gt; class:.
        /// </summary>
        internal static string AutoCompleteSearching_Text2 {
            get {
                return ResourceManager.GetString("AutoCompleteSearching_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete:.
        /// </summary>
        internal static string AutoCompleteSearching_Text3 {
            get {
                return ResourceManager.GetString("AutoCompleteSearching_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete Match Style.
        /// </summary>
        internal static string AutoCompleteSearching_Title {
            get {
                return ResourceManager.GetString("AutoCompleteSearching_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the AutoComplete control starts searching
        ///    for matches 500ms after the user types at least two
        ///    characters into the control, and stops searching after
        ///    finding six matches..
        /// </summary>
        internal static string AutoCompleteSearchParameters_Text1 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change these defaults by changing the values
        ///    of the &lt;b&gt;delay&lt;/b&gt;, &lt;b&gt;minLength&lt;/b&gt;, and
        ///    &lt;b&gt;maxItems&lt;/b&gt; properties:.
        /// </summary>
        internal static string AutoCompleteSearchParameters_Text2 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to delay:.
        /// </summary>
        internal static string AutoCompleteSearchParameters_Text3 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to minLength:.
        /// </summary>
        internal static string AutoCompleteSearchParameters_Text4 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to maxItems:.
        /// </summary>
        internal static string AutoCompleteSearchParameters_Text5 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete:.
        /// </summary>
        internal static string AutoCompleteSearchParameters_Text6 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete delay, minLength, and maxItems.
        /// </summary>
        internal static string AutoCompleteSearchParameters_Title {
            get {
                return ResourceManager.GetString("AutoCompleteSearchParameters_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the AutoComplete control searches for matches against the
        ///    property specified by the &lt;b&gt;displayMemberPath&lt;/b&gt; property.
        ///    You can extend the search to other properties by setting the
        ///    &lt;b&gt;searchMemberPath&lt;/b&gt; property to a comma-delimited list
        ///    of properties to search on..
        /// </summary>
        internal static string AutoCompleteSearchPath_Text1 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchPath_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the AutoComplete below is configured to search for
        ///    country and continent names. Try typing &quot;asia&quot;, &quot;america&quot;, or
        ///    &quot;euro or&quot; for example:.
        /// </summary>
        internal static string AutoCompleteSearchPath_Text2 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchPath_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete:.
        /// </summary>
        internal static string AutoCompleteSearchPath_Text3 {
            get {
                return ResourceManager.GetString("AutoCompleteSearchPath_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete Searching.
        /// </summary>
        internal static string AutoCompleteSearchPath_Title {
            get {
                return ResourceManager.GetString("AutoCompleteSearchPath_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AutoComplete control extends the ComboBox to provide
        ///    two additional features:.
        /// </summary>
        internal static string AutoComplete_Text1 {
            get {
                return ResourceManager.GetString("AutoComplete_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It automatically filters the items in the drop-down list
        ///        to include only those that match the current user input, and.
        /// </summary>
        internal static string AutoComplete_Text2 {
            get {
                return ResourceManager.GetString("AutoComplete_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It supports populating the drop-down asynchromously based
        ///        on the current user input and changing the search logic
        ///        (by default, the ComboBox looks for items that &lt;b&gt;start&lt;/b&gt;
        ///        with the user input, while AutoComplete looks for items that
        ///        &lt;b&gt;contain&lt;/b&gt; the user input)..
        /// </summary>
        internal static string AutoComplete_Text3 {
            get {
                return ResourceManager.GetString("AutoComplete_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AutoComplete and ComboBox controls below are bound to the
        ///    same &lt;b&gt;itemsSource&lt;/b&gt;. Try typing &quot;un&quot; into either control
        ///    to see the difference:.
        /// </summary>
        internal static string AutoComplete_Text4 {
            get {
                return ResourceManager.GetString("AutoComplete_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete:.
        /// </summary>
        internal static string AutoComplete_Text5 {
            get {
                return ResourceManager.GetString("AutoComplete_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox:.
        /// </summary>
        internal static string AutoComplete_Text6 {
            get {
                return ResourceManager.GetString("AutoComplete_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete.
        /// </summary>
        internal static string AutoComplete_Title {
            get {
                return ResourceManager.GetString("AutoComplete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can customize the appearance of the whole calendar using
        ///    CSS, and you can use the calendar&apos;s &lt;b&gt;formatItem&lt;/b&gt; event
        ///    to customize the appearance of specific dates..
        /// </summary>
        internal static string CalendarCustomization_Text1 {
            get {
                return ResourceManager.GetString("CalendarCustomization_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the calendar below uses a custom style to show
        ///    weekends and holidays:.
        /// </summary>
        internal static string CalendarCustomization_Text2 {
            get {
                return ResourceManager.GetString("CalendarCustomization_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date is &lt;b&gt;&lt;span id=&quot;theCalendarOutput&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string CalendarCustomization_Text3 {
            get {
                return ResourceManager.GetString("CalendarCustomization_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar Customization.
        /// </summary>
        internal static string CalendarCustomization_Title {
            get {
                return ResourceManager.GetString("CalendarCustomization_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Calendar&apos;s &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt; properties
        ///    to restrict the range of dates that can be entered..
        /// </summary>
        internal static string CalendarRanges_Text1 {
            get {
                return ResourceManager.GetString("CalendarRanges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the calendar below only accepts dates
        ///    within the current week:.
        /// </summary>
        internal static string CalendarRanges_Text2 {
            get {
                return ResourceManager.GetString("CalendarRanges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar Ranges.
        /// </summary>
        internal static string CalendarRanges_Title {
            get {
                return ResourceManager.GetString("CalendarRanges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Calendar control prevents users from selecting values
        ///    outside the range determined by the &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt;
        ///    properties..
        /// </summary>
        internal static string CalendarValidation_Text1 {
            get {
                return ResourceManager.GetString("CalendarValidation_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In many cases, however, not all dates in the range are valid.
        ///    To handle these situations, the Calendar control has an
        ///    &lt;b&gt;itemValidator&lt;/b&gt; property. This property represents a
        ///    function that takes a date as a parameter and returns true
        ///    if the date is valid for selection, or false otherwise..
        /// </summary>
        internal static string CalendarValidation_Text2 {
            get {
                return ResourceManager.GetString("CalendarValidation_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calendar below demonstrates this. It prevents users
        ///    from selecting dates on weekends and holidays:.
        /// </summary>
        internal static string CalendarValidation_Text3 {
            get {
                return ResourceManager.GetString("CalendarValidation_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date is &lt;b&gt;&lt;span id=&quot;theCalendarOutput&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string CalendarValidation_Text4 {
            get {
                return ResourceManager.GetString("CalendarValidation_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar Validation.
        /// </summary>
        internal static string CalendarValidation_Title {
            get {
                return ResourceManager.GetString("CalendarValidation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Calendar control displays a one-month calendar and allows users
        ///    to select a date..
        /// </summary>
        internal static string Calendar_Text1 {
            get {
                return ResourceManager.GetString("Calendar_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the &lt;b&gt;value&lt;/b&gt; property to get or set the currently selected date.
        ///    Use the &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt; properties to restrict the range of
        ///    dates that the user can select.
        ///    Use the &lt;b&gt;selectionMode&lt;/b&gt; property to determine whether users should
        ///    be allowed to select days, months, or no values at all..
        /// </summary>
        internal static string Calendar_Text2 {
            get {
                return ResourceManager.GetString("Calendar_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date is &lt;b&gt;&lt;span id=&quot;theCalendarOutput&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string Calendar_Text3 {
            get {
                return ResourceManager.GetString("Calendar_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar.
        /// </summary>
        internal static string Calendar_Title {
            get {
                return ResourceManager.GetString("Calendar_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows how you can add a &quot;Clear&quot; button to the
        ///    input elements in C1 MVC input controls..
        /// </summary>
        internal static string ClearButtons_Text1 {
            get {
                return ResourceManager.GetString("ClearButtons_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Clear&quot; button allows users to clear the control using
        ///    the mouse, which may be more convenient than pressing the
        ///    Ctrl+A/Delete keys..
        /// </summary>
        internal static string ClearButtons_Text2 {
            get {
                return ResourceManager.GetString("ClearButtons_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Buttons.
        /// </summary>
        internal static string ClearButtons_Title {
            get {
                return ResourceManager.GetString("ClearButtons_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a background for me!.
        /// </summary>
        internal static string ColorPicker_Text1 {
            get {
                return ResourceManager.GetString("ColorPicker_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ColorPicker control is a panel that allows users to pick
        ///    colors. It is uses as a drop-down by the InputColor control:.
        /// </summary>
        internal static string ColorPicker_Text2 {
            get {
                return ResourceManager.GetString("ColorPicker_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can customize the ColorPicker by changing the value of the
        ///    &lt;b&gt;showAlphaChannel&lt;/b&gt;, &lt;b&gt;showColorString&lt;/b&gt;, and &lt;b&gt;palette&lt;/b&gt;
        ///    properties:.
        /// </summary>
        internal static string ColorPicker_Text3 {
            get {
                return ResourceManager.GetString("ColorPicker_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to showAlphaChannel:.
        /// </summary>
        internal static string ColorPicker_Text4 {
            get {
                return ResourceManager.GetString("ColorPicker_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to showColorString:.
        /// </summary>
        internal static string ColorPicker_Text5 {
            get {
                return ResourceManager.GetString("ColorPicker_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to palette:.
        /// </summary>
        internal static string ColorPicker_Text6 {
            get {
                return ResourceManager.GetString("ColorPicker_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ColorPicker
        ///.
        /// </summary>
        internal static string ColorPicker_Title {
            get {
                return ResourceManager.GetString("ColorPicker_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a background for me!.
        /// </summary>
        internal static string Colors_Text1 {
            get {
                return ResourceManager.GetString("Colors_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the InputColor control to edit color values
        ///    when you have only a little room:.
        /// </summary>
        internal static string Colors_Text2 {
            get {
                return ResourceManager.GetString("Colors_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the color.
        /// </summary>
        internal static string Colors_Text3 {
            get {
                return ResourceManager.GetString("Colors_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the ColorPicker control to edit color values
        ///    when you have enough room:.
        /// </summary>
        internal static string Colors_Text4 {
            get {
                return ResourceManager.GetString("Colors_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color Input
        ///.
        /// </summary>
        internal static string Colors_Title {
            get {
                return ResourceManager.GetString("Colors_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox controls automatically create CollectionView
        ///    objects based on their &lt;b&gt;itemsSource&lt;/b&gt;, and expose
        ///    this view through the &lt;b&gt;collectionView&lt;/b&gt; property..
        /// </summary>
        internal static string ComboBoxChainingCombos_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxChainingCombos_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use this feature to apply filters to the combo
        ///    items. For example, when you select a country from the
        ///    first combo below, the second will be filtered to show
        ///    only cities in that country:.
        /// </summary>
        internal static string ComboBoxChainingCombos_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxChainingCombos_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chaining Combos.
        /// </summary>
        internal static string ComboBoxChainingCombos_Title {
            get {
                return ResourceManager.GetString("ComboBoxChainingCombos_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want users to select from a short set of well-known
        ///    colors, the ComboBox may be a better choice than an
        ///    InputColor control..
        /// </summary>
        internal static string ComboBoxColors_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxColors_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can set the &lt;b&gt;itemsSource&lt;/b&gt; property to an array
        ///    containing the colors, and use the &lt;b&gt;formatItem&lt;/b&gt;
        ///    to show a preview of the colors on the drop-down list:.
        /// </summary>
        internal static string ComboBoxColors_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxColors_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox as Color Input.
        /// </summary>
        internal static string ComboBoxColors_Title {
            get {
                return ResourceManager.GetString("ComboBoxColors_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Most ComboBox controls display items in the drop-down list
        ///    as plain text. You can override this using the
        ///    &lt;b&gt;isContentHTML&lt;/b&gt; property or by assigning HTML directly
        ///    to the items using the &lt;b&gt;formatItem&lt;/b&gt; event..
        /// </summary>
        internal static string ComboBoxHtmlContent_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxHtmlContent_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;formatItem&lt;/b&gt; event provides more flexibility because
        ///    it can be used to apply arbitrary templates to raw Javascript
        ///    objects. If you do this, remember to set the combo&apos;s
        ///    &lt;b&gt;headerPath&lt;/b&gt; property to the name of a property to display
        ///    in the combo&apos;s input element (which can only show plain text):.
        /// </summary>
        internal static string ComboBoxHtmlContent_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxHtmlContent_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox with HTML Content.
        /// </summary>
        internal static string ComboBoxHtmlContent_Title {
            get {
                return ResourceManager.GetString("ComboBoxHtmlContent_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the ComboBox as an item selector, and bind
        ///    other controls to the combo&apos;s &lt;b&gt;selectedItem&lt;/b&gt;
        ///    property:.
        /// </summary>
        internal static string ComboBoxMasterDetail_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxMasterDetail_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an item:.
        /// </summary>
        internal static string ComboBoxMasterDetail_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxMasterDetail_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox Master/Detail.
        /// </summary>
        internal static string ComboBoxMasterDetail_Title {
            get {
                return ResourceManager.GetString("ComboBoxMasterDetail_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the ComboBox displays one item per line in
        ///    its drop-down list:.
        /// </summary>
        internal static string ComboBoxMultiColumn_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default:.
        /// </summary>
        internal static string ComboBoxMultiColumn_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have many short items, it may be interesting to
        ///    use multiple columns in the drop-down.
        ///    You can accomplish this with a little CSS and the
        ///    &lt;b&gt;dropDownCssClass&lt;/b&gt; property:.
        /// </summary>
        internal static string ComboBoxMultiColumn_Text3 {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Three Columns:.
        /// </summary>
        internal static string ComboBoxMultiColumn_Text4 {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the items are complex objects, you may want to render
        ///    a single item per line, but with additional detail,
        ///    as in a table or grid.
        ///    You can accomplish this with the &lt;b&gt;formatItem&lt;/b&gt;
        ///    event and &lt;b&gt;headerPath&lt;/b&gt; property::.
        /// </summary>
        internal static string ComboBoxMultiColumn_Text5 {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table-Style:.
        /// </summary>
        internal static string ComboBoxMultiColumn_Text6 {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-Column Combos.
        /// </summary>
        internal static string ComboBoxMultiColumn_Title {
            get {
                return ResourceManager.GetString("ComboBoxMultiColumn_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use ComboBoxes to select from lists of numbers:.
        /// </summary>
        internal static string ComboBoxNumbersDates_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a number:.
        /// </summary>
        internal static string ComboBoxNumbersDates_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected this value: &lt;b id=&quot;theComboNumberValue&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxNumbersDates_Text3 {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use ComboBoxes to select from lists of dates.
        ///    In this case, we use the &lt;b&gt;formatItem&lt;/b&gt; event to
        ///    format the date objects using C1 MVC&apos;s &lt;b&gt;Globalize&lt;/b&gt;
        ///    class:.
        /// </summary>
        internal static string ComboBoxNumbersDates_Text4 {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a date:.
        /// </summary>
        internal static string ComboBoxNumbersDates_Text5 {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected this date: &lt;b id=&quot;theComboDateValue&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxNumbersDates_Text6 {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox with Numbers and Dates.
        /// </summary>
        internal static string ComboBoxNumbersDates_Title {
            get {
                return ResourceManager.GetString("ComboBoxNumbersDates_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use ComboBoxes to select arbitrary Javascript
        ///    objects from arrays:.
        /// </summary>
        internal static string ComboBoxObjects_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the &lt;b&gt;itemsSource&lt;/b&gt; property to the object array,.
        /// </summary>
        internal static string ComboBoxObjects_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the &lt;b&gt;displayMemberPath&lt;/b&gt; property to the name of
        ///        the property that should be displayed in the Combo,.
        /// </summary>
        internal static string ComboBoxObjects_Text3 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optionally set the &lt;b&gt;selectedValuePath&lt;/b&gt; property to the
        ///        name of the property that should be used to calculate the
        ///        combo&apos;s &lt;b&gt;selectedValue&lt;/b&gt; property,.
        /// </summary>
        internal static string ComboBoxObjects_Text4 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the combo&apos;s &lt;b&gt;selectedIndex&lt;/b&gt;, &lt;b&gt;selectedValue&lt;/b&gt;,
        ///        or &lt;b&gt;text&lt;/b&gt; to retrieve the current selection..
        /// </summary>
        internal static string ComboBoxObjects_Text5 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an item:.
        /// </summary>
        internal static string ComboBoxObjects_Text6 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current text is: &lt;b id=&quot;theComboText&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxObjects_Text7 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selectedIndex is: &lt;b id=&quot;theComboIndex&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxObjects_Text8 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selectedValue is: &lt;b id=&quot;theComboValue&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxObjects_Text9 {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox with Objects.
        /// </summary>
        internal static string ComboBoxObjects_Title {
            get {
                return ResourceManager.GetString("ComboBoxObjects_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you set the &lt;b&gt;itemsSource&lt;/b&gt; property to an array
        ///    of objects, the ComboBox automatically creates a
        ///    &lt;b&gt;CollectionView&lt;/b&gt; and exposes that through its
        ///    &lt;b&gt;collectionView&lt;/b&gt; property..
        /// </summary>
        internal static string ComboBoxSortingFiltering_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxSortingFiltering_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the collection view to filter and sort
        ///    the data, and you can use the view&apos;s &lt;b&gt;currentItem&lt;/b&gt;
        ///    instead of the combo&apos;s &lt;b&gt;selectedItem&lt;/b&gt;:.
        /// </summary>
        internal static string ComboBoxSortingFiltering_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxSortingFiltering_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an item:.
        /// </summary>
        internal static string ComboBoxSortingFiltering_Text3 {
            get {
                return ResourceManager.GetString("ComboBoxSortingFiltering_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting and Filtering Items.
        /// </summary>
        internal static string ComboBoxSortingFiltering_Title {
            get {
                return ResourceManager.GetString("ComboBoxSortingFiltering_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the ComboBox acts as a regular HTML input element,
        ///    with the additional styling and object model associated with
        ///    all Wijmo controls. The &lt;b&gt;text&lt;/b&gt; property gets or sets the
        ///    user&apos;s input:.
        /// </summary>
        internal static string ComboBoxStrings_Text1 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isEditable.
        /// </summary>
        internal static string ComboBoxStrings_Text10 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Country:.
        /// </summary>
        internal static string ComboBoxStrings_Text11 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Country Selected.
        /// </summary>
        internal static string ComboBoxStrings_Text12 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected this country:.
        /// </summary>
        internal static string ComboBoxStrings_Text13 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any string:.
        /// </summary>
        internal static string ComboBoxStrings_Text2 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have typed this: &lt;b id=&quot;theComboText&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxStrings_Text3 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to provide a list of strings for users to choose
        ///    from, set the &lt;b&gt;itemsSource&lt;/b&gt; property to an array containing
        ///    those items and users will be able to select one of them:.
        /// </summary>
        internal static string ComboBoxStrings_Text4 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Country:.
        /// </summary>
        internal static string ComboBoxStrings_Text5 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected this country: &lt;b id=&quot;theComboValue&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBoxStrings_Text6 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the ComboBox will force users to select one of the
        ///    items on the list. Users will not be able to leave the combo
        ///    empty or to enter values that are not on the list..
        /// </summary>
        internal static string ComboBoxStrings_Text7 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change these behaviors by setting the &lt;b&gt;isRequired&lt;/b&gt;
        ///    and &lt;b&gt;isEditable&lt;/b&gt; properties:.
        /// </summary>
        internal static string ComboBoxStrings_Text8 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isRequired.
        /// </summary>
        internal static string ComboBoxStrings_Text9 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox with Strings.
        /// </summary>
        internal static string ComboBoxStrings_Title {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choosing from Lists.
        /// </summary>
        internal static string ComboBoxStrings_Title1 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Customizations.
        /// </summary>
        internal static string ComboBoxStrings_Title2 {
            get {
                return ResourceManager.GetString("ComboBoxStrings_Title2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ComboBox combines an input element with a drop-down
        ///    list. You can use it to select and/or edit strings or
        ///    objects from lists..
        /// </summary>
        internal static string ComboBox_Text1 {
            get {
                return ResourceManager.GetString("ComboBox_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ComboBox provides as-you-type auto-completion,
        ///    making it easy to find items in long lists..
        /// </summary>
        internal static string ComboBox_Text2 {
            get {
                return ResourceManager.GetString("ComboBox_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the combo boxes below allow you to
        ///    select from lists of strings and objects:.
        /// </summary>
        internal static string ComboBox_Text3 {
            get {
                return ResourceManager.GetString("ComboBox_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strings:.
        /// </summary>
        internal static string ComboBox_Text4 {
            get {
                return ResourceManager.GetString("ComboBox_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current value is: &lt;b id=&quot;theComboStringCurrent&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBox_Text5 {
            get {
                return ResourceManager.GetString("ComboBox_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Objects:.
        /// </summary>
        internal static string ComboBox_Text6 {
            get {
                return ResourceManager.GetString("ComboBox_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current value is: &lt;b id=&quot;theComboObjectCurrent&quot;&gt;&lt;/b&gt;..
        /// </summary>
        internal static string ComboBox_Text7 {
            get {
                return ResourceManager.GetString("ComboBox_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox.
        /// </summary>
        internal static string ComboBox_Title {
            get {
                return ResourceManager.GetString("ComboBox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Javascript Date objects contain date and time information..
        /// </summary>
        internal static string DatesTimes_Text1 {
            get {
                return ResourceManager.GetString("DatesTimes_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because in many cases only the date or time are relevant to
        ///    the application, Wijmo offers separate controls for editing
        ///    dates, times, or both..
        /// </summary>
        internal static string DatesTimes_Text2 {
            get {
                return ResourceManager.GetString("DatesTimes_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;InputDate&lt;/b&gt; and &lt;b&gt;InputTime&lt;/b&gt; controls can be
        ///    used separately or together, to edit the date and time
        ///    information in a Javascript &lt;b&gt;Date&lt;/b&gt; object..
        /// </summary>
        internal static string DatesTimes_Text3 {
            get {
                return ResourceManager.GetString("DatesTimes_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate:.
        /// </summary>
        internal static string DatesTimes_Text4 {
            get {
                return ResourceManager.GetString("DatesTimes_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputTime:.
        /// </summary>
        internal static string DatesTimes_Text5 {
            get {
                return ResourceManager.GetString("DatesTimes_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you prefer to edit the date and time parts of a &lt;b&gt;Date&lt;/b&gt;
        ///    object using a single control, use the &lt;b&gt;InputDateTime&lt;/b&gt;:.
        /// </summary>
        internal static string DatesTimes_Text6 {
            get {
                return ResourceManager.GetString("DatesTimes_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDateTime:.
        /// </summary>
        internal static string DatesTimes_Text7 {
            get {
                return ResourceManager.GetString("DatesTimes_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date/time is: &lt;b&gt;&lt;span id=&quot;dateTime&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string DatesTimes_Text8 {
            get {
                return ResourceManager.GetString("DatesTimes_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Dates and Times.
        /// </summary>
        internal static string DatesTimes_Title {
            get {
                return ResourceManager.GetString("DatesTimes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialogs are Popup controls without owner elements. They allow
        ///    users to enter or edit information without switching to a new
        ///    page or view. They can be modal or modeless, and are usually
        ///    centered on the screen..
        /// </summary>
        internal static string Dialogs_Text1 {
            get {
                return ResourceManager.GetString("Dialogs_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember Me.
        /// </summary>
        internal static string Dialogs_Text10 {
            get {
                return ResourceManager.GetString("Dialogs_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t have an account yet?.
        /// </summary>
        internal static string Dialogs_Text11 {
            get {
                return ResourceManager.GetString("Dialogs_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name:.
        /// </summary>
        internal static string Dialogs_Text12 {
            get {
                return ResourceManager.GetString("Dialogs_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Password:.
        /// </summary>
        internal static string Dialogs_Text13 {
            get {
                return ResourceManager.GetString("Dialogs_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Password:.
        /// </summary>
        internal static string Dialogs_Text14 {
            get {
                return ResourceManager.GetString("Dialogs_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Name:.
        /// </summary>
        internal static string Dialogs_Text15 {
            get {
                return ResourceManager.GetString("Dialogs_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Password:.
        /// </summary>
        internal static string Dialogs_Text16 {
            get {
                return ResourceManager.GetString("Dialogs_Text16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm New Password:.
        /// </summary>
        internal static string Dialogs_Text17 {
            get {
                return ResourceManager.GetString("Dialogs_Text17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Account.
        /// </summary>
        internal static string Dialogs_Text18 {
            get {
                return ResourceManager.GetString("Dialogs_Text18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter {0} characters or more..
        /// </summary>
        internal static string Dialogs_Text19 {
            get {
                return ResourceManager.GetString("Dialogs_Text19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialogs are displayed using the &lt;b&gt;show&lt;/b&gt; method, which has
        ///    optional arguments to define whether the dialog should be
        ///    modal or modeless, and a callback function invoked when the
        ///    dialog is closed..
        /// </summary>
        internal static string Dialogs_Text2 {
            get {
                return ResourceManager.GetString("Dialogs_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialogs are dismissed when the user presses the Escape key
        ///    oe when the dialog loses focus. They are also dismissed when
        ///    the user clicks an element with a class that starts with
        ///    &quot;wj-hide&quot; (e.g. &quot;wj-hide&quot;, &quot;wj-hide-ok&quot;, or &quot;wj-hide-cancel&quot;).
        ///    In the latter case, the class name is assigned to the dialog&apos;s
        ///    &lt;b&gt;dialogResult&lt;/b&gt; property, and can be used by the callback
        ///    function or by the &lt;b&gt;hidden&lt;/b&gt; event handler to decide how
        ///    to process the dialog&apos;s content..
        /// </summary>
        internal static string Dialogs_Text3 {
            get {
                return ResourceManager.GetString("Dialogs_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This demo demonstrates this by defining three dialogs that
        ///    simulate a user authorization UI. Notice how the dialogs provide
        ///    HTML5-style validation and the ability to invoke a dialog from
        ///    another (you can invoke the create account dialog from within
        ///    the log-in dialog):.
        /// </summary>
        internal static string Dialogs_Text4 {
            get {
                return ResourceManager.GetString("Dialogs_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log In.
        /// </summary>
        internal static string Dialogs_Text5 {
            get {
                return ResourceManager.GetString("Dialogs_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Account.
        /// </summary>
        internal static string Dialogs_Text6 {
            get {
                return ResourceManager.GetString("Dialogs_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Account.
        /// </summary>
        internal static string Dialogs_Text7 {
            get {
                return ResourceManager.GetString("Dialogs_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email:.
        /// </summary>
        internal static string Dialogs_Text8 {
            get {
                return ResourceManager.GetString("Dialogs_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password:.
        /// </summary>
        internal static string Dialogs_Text9 {
            get {
                return ResourceManager.GetString("Dialogs_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialogs.
        /// </summary>
        internal static string Dialogs_Title {
            get {
                return ResourceManager.GetString("Dialogs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DropDown control is an abstract class, used as a base
        ///    for several controls. It is composed of the following elements:.
        /// </summary>
        internal static string DropDown_Text1 {
            get {
                return ResourceManager.GetString("DropDown_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;isAnimated&lt;/b&gt;
        ///        Property that determines whether the control should use
        ///        animations when showing the drop-down..
        /// </summary>
        internal static string DropDown_Text10 {
            get {
                return ResourceManager.GetString("DropDown_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;dropDownCssClass&lt;/b&gt;
        ///        Class added to the drop-down element in order to allow CSS
        ///        styling of the drop-down.&lt;br /&gt;
        ///        This property is useful because when the drop-down is displayed,
        ///        it is usually re-parented to become a direct child of the
        ///        document&apos;s body, which prevents it from inheriting the styles
        ///        of the control&apos;s host element..
        /// </summary>
        internal static string DropDown_Text11 {
            get {
                return ResourceManager.GetString("DropDown_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here is a simple example that demonstrates some of these
        ///    properties:.
        /// </summary>
        internal static string DropDown_Text12 {
            get {
                return ResourceManager.GetString("DropDown_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isAnimated:.
        /// </summary>
        internal static string DropDown_Text13 {
            get {
                return ResourceManager.GetString("DropDown_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isDroppedDown:.
        /// </summary>
        internal static string DropDown_Text14 {
            get {
                return ResourceManager.GetString("DropDown_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dropDownCssClass:.
        /// </summary>
        internal static string DropDown_Text15 {
            get {
                return ResourceManager.GetString("DropDown_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;input element&lt;/b&gt; (exposed by the &lt;b&gt;inputElement&lt;/b&gt; property):&lt;br /&gt;
        ///        An HTML input element used to display and edit the current value.
        ///        In a few cases, this element may be replaced with a non-editable
        ///        element (e.g. Menu and MultiSelect controls)..
        /// </summary>
        internal static string DropDown_Text2 {
            get {
                return ResourceManager.GetString("DropDown_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;drop-down button&lt;/b&gt;
        ///        A button used to show or hide the drop-down element..
        /// </summary>
        internal static string DropDown_Text3 {
            get {
                return ResourceManager.GetString("DropDown_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;drop-down element (exposed by the &lt;b&gt;dropDown&lt;/b&gt; property)&lt;/b&gt;:
        ///        An HTML element shown when the user presses the drop-down
        ///        button or the F4 key. The user interacts with the drop-down
        ///        element to update the value of the input element and of the
        ///        control..
        /// </summary>
        internal static string DropDown_Text4 {
            get {
                return ResourceManager.GetString("DropDown_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All DropDown controls have the following properties and events:.
        /// </summary>
        internal static string DropDown_Text5 {
            get {
                return ResourceManager.GetString("DropDown_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;text&lt;/b&gt;
        ///        Gets or sets the current value of the &lt;b&gt;inputElement&lt;/b&gt;..
        /// </summary>
        internal static string DropDown_Text6 {
            get {
                return ResourceManager.GetString("DropDown_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;textChanged&lt;/b&gt;
        ///        Event that fires when the value of the &lt;b&gt;text&lt;/b&gt; property changes...
        /// </summary>
        internal static string DropDown_Text7 {
            get {
                return ResourceManager.GetString("DropDown_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;isDroppedDown&lt;/b&gt;
        ///        Gets or sets a value that determines whether the drop-down is
        ///        currently visible..
        /// </summary>
        internal static string DropDown_Text8 {
            get {
                return ResourceManager.GetString("DropDown_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;isDroppedDownChanging, isDroppedDownChanged&lt;/b&gt;
        ///        Events that fire when the value of the &lt;b&gt;isDroppedDown&lt;/b&gt;
        ///        property changes..
        /// </summary>
        internal static string DropDown_Text9 {
            get {
                return ResourceManager.GetString("DropDown_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DropDown.
        /// </summary>
        internal static string DropDown_Title {
            get {
                return ResourceManager.GetString("DropDown_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample uses the &lt;b&gt;wj-focused-state&lt;/b&gt; pseudo-class
        ///    to change the pointer of some Gauge controls when they
        ///    have the focus:.
        /// </summary>
        internal static string FocusedState_Text1 {
            get {
                return ResourceManager.GetString("FocusedState_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focused State.
        /// </summary>
        internal static string FocusedState_Title {
            get {
                return ResourceManager.GetString("FocusedState_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to the InputNumber control, you can use
        ///    gauges to display and edit numbers..
        /// </summary>
        internal static string Gauges_Text1 {
            get {
                return ResourceManager.GetString("Gauges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Although they are normally used in dashboard-style
        ///    applications to display numeric data, C1 MVC gauges have
        ///    an &lt;b&gt;isReadOnly&lt;/b&gt; property that allows you to use
        ///    them as input controls, much like the HTML input range
        ///    element..
        /// </summary>
        internal static string Gauges_Text2 {
            get {
                return ResourceManager.GetString("Gauges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge controls are similar to HTML input range elements,
        ///    but with some advantages:.
        /// </summary>
        internal static string Gauges_Text3 {
            get {
                return ResourceManager.GetString("Gauges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauges have a consistent look among browsers.
        ///        Input range elements look different depending on the browser..
        /// </summary>
        internal static string Gauges_Text4 {
            get {
                return ResourceManager.GetString("Gauges_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauges can be styled using CSS, and customized with a rich
        ///        set of properties..
        /// </summary>
        internal static string Gauges_Text5 {
            get {
                return ResourceManager.GetString("Gauges_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauges (Sliders).
        /// </summary>
        internal static string Gauges_Title {
            get {
                return ResourceManager.GetString("Gauges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC&apos;s input module contains input controls designed to make
        ///    data entry easy and efficient, using mouse or touch..
        /// </summary>
        internal static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputTime &lt;span class=&quot;detail&quot;&gt;times&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text10 {
            get {
                return ResourceManager.GetString("Index_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu &lt;span class=&quot;detail&quot;&gt;commands&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text11 {
            get {
                return ResourceManager.GetString("Index_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiSelect &lt;span class=&quot;detail&quot;&gt;multiple items/strings&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text12 {
            get {
                return ResourceManager.GetString("Index_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputColor &lt;span class=&quot;detail&quot;&gt;colors&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text13 {
            get {
                return ResourceManager.GetString("Index_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate &lt;span class=&quot;detail&quot;&gt;dates&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text14 {
            get {
                return ResourceManager.GetString("Index_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDateTime &lt;span class=&quot;detail&quot;&gt;dates and times&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text15 {
            get {
                return ResourceManager.GetString("Index_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputMask &lt;span class=&quot;detail&quot;&gt;strings&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text16 {
            get {
                return ResourceManager.GetString("Index_Text16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputNumber &lt;span class=&quot;detail&quot;&gt;numbers&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text17 {
            get {
                return ResourceManager.GetString("Index_Text17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListBox &lt;span class=&quot;detail&quot;&gt;items/strings&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text18 {
            get {
                return ResourceManager.GetString("Index_Text18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popup &lt;span class=&quot;detail&quot;&gt;container&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text19 {
            get {
                return ResourceManager.GetString("Index_Text19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC&apos;s input controls are specialized and optimized for each
        ///    data type. The input module currently contains 16 controls
        ///    with the following class hierarchy:.
        /// </summary>
        internal static string Index_Text2 {
            get {
                return ResourceManager.GetString("Index_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control &lt;span class=&quot;detail&quot;&gt;abstract&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text3 {
            get {
                return ResourceManager.GetString("Index_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calendar &lt;span class=&quot;detail&quot;&gt;dates&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text4 {
            get {
                return ResourceManager.GetString("Index_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ColorPicker &lt;span class=&quot;detail&quot;&gt;colors&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text5 {
            get {
                return ResourceManager.GetString("Index_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DropDown &lt;span class=&quot;detail&quot;&gt;abstract&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text6 {
            get {
                return ResourceManager.GetString("Index_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComboBox &lt;span class=&quot;detail&quot;&gt;items/strings&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text7 {
            get {
                return ResourceManager.GetString("Index_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoComplete &lt;span class=&quot;detail&quot;&gt;items/strings&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text8 {
            get {
                return ResourceManager.GetString("Index_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiAutoComplete &lt;span class=&quot;detail&quot;&gt;multiple items/strings&lt;/span&gt;.
        /// </summary>
        internal static string Index_Text9 {
            get {
                return ResourceManager.GetString("Index_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        internal static string Index_Title {
            get {
                return ResourceManager.GetString("Index_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a background for me!.
        /// </summary>
        internal static string InputColor_OutputText {
            get {
                return ResourceManager.GetString("InputColor_OutputText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputColor control is a drop-down that allows you
        ///    to type a color using the HTML color specification or
        ///    select one from a ColorPicker dropdown:.
        /// </summary>
        internal static string InputColor_Text1 {
            get {
                return ResourceManager.GetString("InputColor_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default:.
        /// </summary>
        internal static string InputColor_Text2 {
            get {
                return ResourceManager.GetString("InputColor_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can customize the InputColor using the
        ///    &lt;b&gt;colorPicker&lt;/b&gt; property, which exposes
        ///    the color picker drop-down:.
        /// </summary>
        internal static string InputColor_Text3 {
            get {
                return ResourceManager.GetString("InputColor_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to showAlphaChannel:.
        /// </summary>
        internal static string InputColor_Text4 {
            get {
                return ResourceManager.GetString("InputColor_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to palette:.
        /// </summary>
        internal static string InputColor_Text5 {
            get {
                return ResourceManager.GetString("InputColor_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom:.
        /// </summary>
        internal static string InputColor_Text6 {
            get {
                return ResourceManager.GetString("InputColor_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputColor.
        /// </summary>
        internal static string InputColor_Title {
            get {
                return ResourceManager.GetString("InputColor_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can customize the appearance of the InputDate and
        ///    its drop-down calendar using CSS. You can also use the
        ///    calendar&apos;s &lt;b&gt;formatItem&lt;/b&gt; event to customize the
        ///    appearance of specific dates in the drop-down
        ///    calendar..
        /// </summary>
        internal static string InputDateCustomization_Text1 {
            get {
                return ResourceManager.GetString("InputDateCustomization_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the InputDate below applies custom styles to
        ///    weekends and holidays:.
        /// </summary>
        internal static string InputDateCustomization_Text2 {
            get {
                return ResourceManager.GetString("InputDateCustomization_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date is &lt;b&gt;&lt;span id=&quot;theInputDateOutput&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string InputDateCustomization_Text3 {
            get {
                return ResourceManager.GetString("InputDateCustomization_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate Customization.
        /// </summary>
        internal static string InputDateCustomization_Title {
            get {
                return ResourceManager.GetString("InputDateCustomization_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the InputDate&apos;s &lt;b&gt;format&lt;/b&gt; property to format
        ///    and parse date values to suit your app..
        /// </summary>
        internal static string InputDateFormatting_Text1 {
            get {
                return ResourceManager.GetString("InputDateFormatting_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The syntax of the &lt;b&gt;format&lt;/b&gt; parameter is similar to
        ///    the one used in .NET and is
        ///    &lt;a href=&quot;http://help.grapecity.com/componentone/NetHelp/c1mvchelpers/wijmo.Globalize.Class.html#formatDate&quot; target=&quot;_blank&quot;&gt;documented here&lt;/a&gt;..
        /// </summary>
        internal static string InputDateFormatting_Text2 {
            get {
                return ResourceManager.GetString("InputDateFormatting_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate Formatting.
        /// </summary>
        internal static string InputDateFormatting_Title {
            get {
                return ResourceManager.GetString("InputDateFormatting_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can customize the icon shown in the drop-down button
        ///    by changing the InputDate&apos;s controlTemplate property,
        ///    or by using code to change the control content. The
        ///    first option would affect all InputDate controls in the
        ///    application; the second would affect only a single
        ///    control..
        /// </summary>
        internal static string InputDateMoreCustomization_Text1 {
            get {
                return ResourceManager.GetString("InputDateMoreCustomization_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can also customize the format used to display the
        ///    current month/year in the drop-down Calendar by changing
        ///    the Globalization&apos;s standard &apos;y&apos; format, or by using
        ///    code to change the control content. Again, the first
        ///    option would affect all InputDate and Calendar controls
        ///    in the application; the second would affect only a single
        ///    control..
        /// </summary>
        internal static string InputDateMoreCustomization_Text2 {
            get {
                return ResourceManager.GetString("InputDateMoreCustomization_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More InputDate Customization.
        /// </summary>
        internal static string InputDateMoreCustomization_Title {
            get {
                return ResourceManager.GetString("InputDateMoreCustomization_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the InputDate&apos;s &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt; properties
        ///    to restrict the range of dates that can be entered..
        /// </summary>
        internal static string InputDateRanges_Text1 {
            get {
                return ResourceManager.GetString("InputDateRanges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the InputDate below only accepts dates
        ///    within the current week:.
        /// </summary>
        internal static string InputDateRanges_Text2 {
            get {
                return ResourceManager.GetString("InputDateRanges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Date.
        /// </summary>
        internal static string InputDateRanges_Text3 {
            get {
                return ResourceManager.GetString("InputDateRanges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate Ranges.
        /// </summary>
        internal static string InputDateRanges_Title {
            get {
                return ResourceManager.GetString("InputDateRanges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDateTime control unifies InputDate and InputTime
        ///    into a single control, saving some screen real-estate in
        ///    scenarios where you do want to edit the date and time
        ///    parts of a Date object..
        /// </summary>
        internal static string InputDateTime_Text1 {
            get {
                return ResourceManager.GetString("InputDateTime_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date/time is: &lt;b&gt;&lt;span id=&quot;dateTime&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string InputDateTime_Text10 {
            get {
                return ResourceManager.GetString("InputDateTime_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDateTime control &lt;b&gt;format&lt;/b&gt; property should be
        ///    set to a format such as &quot;g&quot;, which displays both date and time.
        ///    It has two drop-down buttons, one for showing a calendar and
        ///    one for a list of times..
        /// </summary>
        internal static string InputDateTime_Text2 {
            get {
                return ResourceManager.GetString("InputDateTime_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDateTime control extends the InputDate, so all
        ///    properties and events are available as usual. It adds a
        ///    group of properties to control the time-specific parameters
        ///    of the control:.
        /// </summary>
        internal static string InputDateTime_Text3 {
            get {
                return ResourceManager.GetString("InputDateTime_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;inputTime&lt;/b&gt;: Gets a reference to the inner
        ///        InputTime control..
        /// </summary>
        internal static string InputDateTime_Text4 {
            get {
                return ResourceManager.GetString("InputDateTime_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;timeMin&lt;/b&gt;, &lt;b&gt;timeMax&lt;/b&gt;, &lt;b&gt;timeStep&lt;/b&gt;:
        ///        Get or set the parameters used to populate the list
        ///        of times shown in the time drop-down..
        /// </summary>
        internal static string InputDateTime_Text5 {
            get {
                return ResourceManager.GetString("InputDateTime_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;timeFormat&lt;/b&gt;: Gets or sets the format used to
        ///        show time values in the InputTime drop-down..
        /// </summary>
        internal static string InputDateTime_Text6 {
            get {
                return ResourceManager.GetString("InputDateTime_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;InputDate&lt;/b&gt; and &lt;b&gt;InputTime&lt;/b&gt; controls can be
        ///    used separately or together, to edit the date and time
        ///    information in a Javascript &lt;b&gt;Date&lt;/b&gt; object..
        /// </summary>
        internal static string InputDateTime_Text7 {
            get {
                return ResourceManager.GetString("InputDateTime_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example:.
        /// </summary>
        internal static string InputDateTime_Text8 {
            get {
                return ResourceManager.GetString("InputDateTime_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDateTime:.
        /// </summary>
        internal static string InputDateTime_Text9 {
            get {
                return ResourceManager.GetString("InputDateTime_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDateTime.
        /// </summary>
        internal static string InputDateTime_Title {
            get {
                return ResourceManager.GetString("InputDateTime_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDate control prevents users from selecting values
        ///    outside the range determined by the &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt;
        ///    properties..
        /// </summary>
        internal static string InputDateValidation_Text1 {
            get {
                return ResourceManager.GetString("InputDateValidation_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In many cases, however, not all dates in the range are valid.
        ///    To handle these situations, the control has an &lt;b&gt;itemValidator&lt;/b&gt;
        ///    property. This property represents a function that takes a date
        ///    as a parameter and returns true if the date is valid for selection,
        ///    or false otherwise..
        /// </summary>
        internal static string InputDateValidation_Text2 {
            get {
                return ResourceManager.GetString("InputDateValidation_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDate below demonstrates this. It prevents users from
        ///    selecting dates on weekends and holidays:.
        /// </summary>
        internal static string InputDateValidation_Text3 {
            get {
                return ResourceManager.GetString("InputDateValidation_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date is &lt;b&gt;&lt;span id=&quot;theInputDateOutput&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string InputDateValidation_Text4 {
            get {
                return ResourceManager.GetString("InputDateValidation_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate Validation.
        /// </summary>
        internal static string InputDateValidation_Title {
            get {
                return ResourceManager.GetString("InputDateValidation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDate control allows users to enter and edit dates.
        ///    It has the following advantages over regular input elements:.
        /// </summary>
        internal static string InputDate_Text1 {
            get {
                return ResourceManager.GetString("InputDate_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Required.
        /// </summary>
        internal static string InputDate_Text10 {
            get {
                return ResourceManager.GetString("InputDate_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your birth date (optional).
        /// </summary>
        internal static string InputDate_Text11 {
            get {
                return ResourceManager.GetString("InputDate_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users cannot enter non-numeric values at all..
        /// </summary>
        internal static string InputDate_Text2 {
            get {
                return ResourceManager.GetString("InputDate_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;format&lt;/b&gt; property to format the number
        ///        as it is edited, making it easy to read..
        /// </summary>
        internal static string InputDate_Text3 {
            get {
                return ResourceManager.GetString("InputDate_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt; properties to
        ///        specify the valid range of values (users will not be
        ///        able to enter values outside this range)..
        /// </summary>
        internal static string InputDate_Text4 {
            get {
                return ResourceManager.GetString("InputDate_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;step&lt;/b&gt; property to specify an
        ///        increment that is added to the value when the user
        ///        clicks the increment/decrement buttons on the control..
        /// </summary>
        internal static string InputDate_Text5 {
            get {
                return ResourceManager.GetString("InputDate_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, here is an InputDate with default
        ///    settings:.
        /// </summary>
        internal static string InputDate_Text6 {
            get {
                return ResourceManager.GetString("InputDate_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate.
        /// </summary>
        internal static string InputDate_Text7 {
            get {
                return ResourceManager.GetString("InputDate_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date is &lt;b&gt;&lt;span id=&quot;theDateOutput&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string InputDate_Text8 {
            get {
                return ResourceManager.GetString("InputDate_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, InputDate values are required, so you can&apos;t
        ///    delete the entire content of the control. If you want to
        ///    enter dates that are optional, set the &lt;b&gt;isRequired&lt;/b&gt;
        ///    property to false:.
        /// </summary>
        internal static string InputDate_Text9 {
            get {
                return ResourceManager.GetString("InputDate_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate.
        /// </summary>
        internal static string InputDate_Title {
            get {
                return ResourceManager.GetString("InputDate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputMask control exposes a &lt;b&gt;maskFull&lt;/b&gt; property that
        ///    indicates whether the mask has been completely filled..
        /// </summary>
        internal static string InputMaskMaskFull_Text1 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, these controls will show their content in
        ///    red until the masks are completely filled out, and
        ///    optionally clears their content when the control loses
        ///    focus and the mask is not full:.
        /// </summary>
        internal static string InputMaskMaskFull_Text2 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Incomplete:.
        /// </summary>
        internal static string InputMaskMaskFull_Text3 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSN.
        /// </summary>
        internal static string InputMaskMaskFull_Text4 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Code.
        /// </summary>
        internal static string InputMaskMaskFull_Text5 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Code + 4.
        /// </summary>
        internal static string InputMaskMaskFull_Text6 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone Number.
        /// </summary>
        internal static string InputMaskMaskFull_Text7 {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputMask maskFull.
        /// </summary>
        internal static string InputMaskMaskFull_Title {
            get {
                return ResourceManager.GetString("InputMaskMaskFull_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the InputMask control uses an underscore character
        ///    to indicate positions where input is expected..
        /// </summary>
        internal static string InputMaskPromptChar_Text1 {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change this by assigning a new string to the &lt;b&gt;promptChar&lt;/b&gt;
        ///    property:.
        /// </summary>
        internal static string InputMaskPromptChar_Text2 {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Social Security Number.
        /// </summary>
        internal static string InputMaskPromptChar_Text3 {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Code.
        /// </summary>
        internal static string InputMaskPromptChar_Text4 {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip+4 Code.
        /// </summary>
        internal static string InputMaskPromptChar_Text5 {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone Number.
        /// </summary>
        internal static string InputMaskPromptChar_Text6 {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputMask promptChar.
        /// </summary>
        internal static string InputMaskPromptChar_Title {
            get {
                return ResourceManager.GetString("InputMaskPromptChar_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputMask&apos;s &lt;b&gt;value&lt;/b&gt; property returns the full text
        ///    content of the control, including the user&apos;s input and
        ///    any template characters..
        /// </summary>
        internal static string InputMaskRawValue_Text1 {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;rawValue&lt;/b&gt; property to get or set the
        ///    control value including only the input characters and excluding
        ///    any template characters:.
        /// </summary>
        internal static string InputMaskRawValue_Text2 {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Social Security Number.
        /// </summary>
        internal static string InputMaskRawValue_Text3 {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Code.
        /// </summary>
        internal static string InputMaskRawValue_Text4 {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Code + 4.
        /// </summary>
        internal static string InputMaskRawValue_Text5 {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone Number.
        /// </summary>
        internal static string InputMaskRawValue_Text6 {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputMask rawValue.
        /// </summary>
        internal static string InputMaskRawValue_Title {
            get {
                return ResourceManager.GetString("InputMaskRawValue_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputMask control allows you to validate and format user input
        ///    as it is entered, preventing invalid data..
        /// </summary>
        internal static string InputMask_Text1 {
            get {
                return ResourceManager.GetString("InputMask_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use the InputMask control, set the &lt;b&gt;mask&lt;/b&gt; property to a
        ///    string that specifies the valid character classes for each input\
        ///    position, as described in the
        ///    &lt;a href=&quot;http://help.grapecity.com/componentone/NetHelp/c1mvchelpers/webframe.html#wijmo.input.InputMask.Class.html&quot; target=&quot;_blank&quot;&gt;InputMask documentation&lt;/a&gt;..
        /// </summary>
        internal static string InputMask_Text2 {
            get {
                return ResourceManager.GetString("InputMask_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are a few examples to demonstrate:.
        /// </summary>
        internal static string InputMask_Text3 {
            get {
                return ResourceManager.GetString("InputMask_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Social Security Number.
        /// </summary>
        internal static string InputMask_Text4 {
            get {
                return ResourceManager.GetString("InputMask_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip Code.
        /// </summary>
        internal static string InputMask_Text5 {
            get {
                return ResourceManager.GetString("InputMask_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip+4 Code.
        /// </summary>
        internal static string InputMask_Text6 {
            get {
                return ResourceManager.GetString("InputMask_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone Number.
        /// </summary>
        internal static string InputMask_Text7 {
            get {
                return ResourceManager.GetString("InputMask_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputMask.
        /// </summary>
        internal static string InputMask_Title {
            get {
                return ResourceManager.GetString("InputMask_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the InputNumber&apos;s &lt;b&gt;format&lt;/b&gt; property to format numbers
        ///    as they are edited, making them easy to read..
        /// </summary>
        internal static string InputNumberFormatting_Text1 {
            get {
                return ResourceManager.GetString("InputNumberFormatting_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The syntax of the &lt;b&gt;format&lt;/b&gt; parameter is similar to
        ///    the one used in .NET and is
        ///    &lt;a href=&quot;http://help.grapecity.com/componentone/NetHelp/c1mvchelpers/wijmo.Globalize.Class.html#formatNumber&quot; target=&quot;_blank&quot;&gt;documented here&lt;/a&gt;..
        /// </summary>
        internal static string InputNumberFormatting_Text2 {
            get {
                return ResourceManager.GetString("InputNumberFormatting_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format {0}: .
        /// </summary>
        internal static string InputNumberFormatting_Text3 {
            get {
                return ResourceManager.GetString("InputNumberFormatting_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputNumber Formatting.
        /// </summary>
        internal static string InputNumberFormatting_Title {
            get {
                return ResourceManager.GetString("InputNumberFormatting_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the InputNumber&apos;s &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt; properties
        ///    to restrict the range of values that can be entered..
        /// </summary>
        internal static string InputNumberRanges_Text1 {
            get {
                return ResourceManager.GetString("InputNumberRanges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the InputNumber below only accepts values
        ///    between one and five:.
        /// </summary>
        internal static string InputNumberRanges_Text2 {
            get {
                return ResourceManager.GetString("InputNumberRanges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guests.
        /// </summary>
        internal static string InputNumberRanges_Text3 {
            get {
                return ResourceManager.GetString("InputNumberRanges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that the control will not validate the range
        ///    as the value is being edited, but will clamp the
        ///    value to the valid range when the control loses focus..
        /// </summary>
        internal static string InputNumberRanges_Text4 {
            get {
                return ResourceManager.GetString("InputNumberRanges_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, you can type &quot;123&quot; in the control above,
        ///    but as soon as you move the focus to another element
        ///    the control will apply the constraints and change the
        ///    value to five, the value of the &lt;b&gt;max&lt;/b&gt; property:.
        /// </summary>
        internal static string InputNumberRanges_Text5 {
            get {
                return ResourceManager.GetString("InputNumberRanges_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputNumber Ranges.
        /// </summary>
        internal static string InputNumberRanges_Title {
            get {
                return ResourceManager.GetString("InputNumberRanges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the InputNumber&apos;s &lt;b&gt;step&lt;/b&gt; property to enable
        ///    spinner buttons, used to increment or decrement the
        ///    current value..
        /// </summary>
        internal static string InputNumberStep_Text1 {
            get {
                return ResourceManager.GetString("InputNumberStep_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step {0}:.
        /// </summary>
        internal static string InputNumberStep_Text2 {
            get {
                return ResourceManager.GetString("InputNumberStep_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputNumber Step.
        /// </summary>
        internal static string InputNumberStep_Title {
            get {
                return ResourceManager.GetString("InputNumberStep_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputNumber control allows users to enter and edit numbers.
        ///    It has the following advantages over regular input elements:.
        /// </summary>
        internal static string InputNumber_Text1 {
            get {
                return ResourceManager.GetString("InputNumber_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Required.
        /// </summary>
        internal static string InputNumber_Text10 {
            get {
                return ResourceManager.GetString("InputNumber_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your age (optional).
        /// </summary>
        internal static string InputNumber_Text11 {
            get {
                return ResourceManager.GetString("InputNumber_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users cannot enter non-numeric values at all..
        /// </summary>
        internal static string InputNumber_Text2 {
            get {
                return ResourceManager.GetString("InputNumber_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;format&lt;/b&gt; property to format the number
        ///        as it is edited, making it easy to read..
        /// </summary>
        internal static string InputNumber_Text3 {
            get {
                return ResourceManager.GetString("InputNumber_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt; properties to
        ///        specify the valid range of values (users will not be
        ///        able to enter values outside this range)..
        /// </summary>
        internal static string InputNumber_Text4 {
            get {
                return ResourceManager.GetString("InputNumber_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;step&lt;/b&gt; property to specify an
        ///        increment that is added to the value when the user
        ///        clicks the increment/decrement buttons on the control..
        /// </summary>
        internal static string InputNumber_Text5 {
            get {
                return ResourceManager.GetString("InputNumber_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, here is an InputNumber with default
        ///    settings:.
        /// </summary>
        internal static string InputNumber_Text6 {
            get {
                return ResourceManager.GetString("InputNumber_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputNumber.
        /// </summary>
        internal static string InputNumber_Text7 {
            get {
                return ResourceManager.GetString("InputNumber_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current value is &lt;b&gt;&lt;span id=&quot;theNumberOutput&quot;&gt;0&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string InputNumber_Text8 {
            get {
                return ResourceManager.GetString("InputNumber_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, InputNumber values are required, so you can&apos;t
        ///    delete the entire content of the control. If you want to
        ///    enter a number that is optional, set the &lt;b&gt;isRequired&lt;/b&gt;
        ///    property to false:.
        /// </summary>
        internal static string InputNumber_Text9 {
            get {
                return ResourceManager.GetString("InputNumber_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputNumber.
        /// </summary>
        internal static string InputNumber_Title {
            get {
                return ResourceManager.GetString("InputNumber_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputTime control extends the ComboBox class to allow
        ///    easy entry and editing of time values..
        /// </summary>
        internal static string InputTime_Text1 {
            get {
                return ResourceManager.GetString("InputTime_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;value&lt;/b&gt;: Gets or sets the currently selected time..
        /// </summary>
        internal static string InputTime_Text2 {
            get {
                return ResourceManager.GetString("InputTime_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;min, max, step&lt;/b&gt;: Determine the times shown in the
        ///            control&apos;s drop-down list..
        /// </summary>
        internal static string InputTime_Text3 {
            get {
                return ResourceManager.GetString("InputTime_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;format&lt;/b&gt;: Gets or sets the format string used to
        ///            display and parse time values..
        /// </summary>
        internal static string InputTime_Text4 {
            get {
                return ResourceManager.GetString("InputTime_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;isEditable&lt;/b&gt;: Determines whether users should be
        ///            allowed to enter time values not shown on the drop-down list..
        /// </summary>
        internal static string InputTime_Text5 {
            get {
                return ResourceManager.GetString("InputTime_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;InputDate&lt;/b&gt; and &lt;b&gt;InputTime&lt;/b&gt; controls can be
        ///    used separately or together, to edit the date and time
        ///    information in Javascript &lt;b&gt;Date&lt;/b&gt; objects..
        /// </summary>
        internal static string InputTime_Text6 {
            get {
                return ResourceManager.GetString("InputTime_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate:.
        /// </summary>
        internal static string InputTime_Text7 {
            get {
                return ResourceManager.GetString("InputTime_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputTime:.
        /// </summary>
        internal static string InputTime_Text8 {
            get {
                return ResourceManager.GetString("InputTime_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current date/time is: &lt;b&gt;&lt;span id=&quot;dateTime&quot;&gt;&lt;/span&gt;&lt;/b&gt;..
        /// </summary>
        internal static string InputTime_Text9 {
            get {
                return ResourceManager.GetString("InputTime_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputTime.
        /// </summary>
        internal static string InputTime_Title {
            get {
                return ResourceManager.GetString("InputTime_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to the InputNumber control, you can use the
        ///    LinearGauge to input numbers. The LinearGauge is similar
        ///    to an HTML input range control, but with some improvements:.
        /// </summary>
        internal static string LinearGauge_Text1 {
            get {
                return ResourceManager.GetString("LinearGauge_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LinearGauge has a consistent look among browsers.
        ///        Input range elements look different depending on the browser..
        /// </summary>
        internal static string LinearGauge_Text2 {
            get {
                return ResourceManager.GetString("LinearGauge_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LinearGauge can be styled using CSS, and customized
        ///        with a rich set of properties..
        /// </summary>
        internal static string LinearGauge_Text3 {
            get {
                return ResourceManager.GetString("LinearGauge_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, here is an input range element that can be used
        ///    to enter values between zero and 255:.
        /// </summary>
        internal static string LinearGauge_Text4 {
            get {
                return ResourceManager.GetString("LinearGauge_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here is a LinearGauge control set for the same range.
        ///    The &lt;b&gt;isReadOnly&lt;/b&gt; property is set to false, so you
        ///    can change the gauge value using the mouse or keyboard:.
        /// </summary>
        internal static string LinearGauge_Text5 {
            get {
                return ResourceManager.GetString("LinearGauge_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to And here is another LinearGauge control with some styling
        ///    applied:.
        /// </summary>
        internal static string LinearGauge_Text6 {
            get {
                return ResourceManager.GetString("LinearGauge_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to And here is an equalizer-style group of vertical gauges used
        ///    to edit several numbers:.
        /// </summary>
        internal static string LinearGauge_Text7 {
            get {
                return ResourceManager.GetString("LinearGauge_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LinearGauge as NumberInput.
        /// </summary>
        internal static string LinearGauge_Title {
            get {
                return ResourceManager.GetString("LinearGauge_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ListBox control has a &lt;b&gt;checkedMemberPath&lt;/b&gt; property
        ///    that allows you to add checkboxes to items on the list.
        ///    It has a &lt;b&gt;checkedItems&lt;/b&gt; property that gets or sets
        ///    the list of checked items..
        /// </summary>
        internal static string ListBoxCheckBoxes_Text1 {
            get {
                return ResourceManager.GetString("ListBoxCheckBoxes_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Checked Items:&lt;/b&gt;.
        /// </summary>
        internal static string ListBoxCheckBoxes_Text2 {
            get {
                return ResourceManager.GetString("ListBoxCheckBoxes_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListBox and checkboxes.
        /// </summary>
        internal static string ListBoxCheckBoxes_Title {
            get {
                return ResourceManager.GetString("ListBoxCheckBoxes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ListBox has a &lt;b&gt;formatItem&lt;/b&gt; event you can use to
        ///    customize the display of the items in the list:.
        /// </summary>
        internal static string ListBoxFormatItem_Text1 {
            get {
                return ResourceManager.GetString("ListBoxFormatItem_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListBox formatItem.
        /// </summary>
        internal static string ListBoxFormatItem_Title {
            get {
                return ResourceManager.GetString("ListBoxFormatItem_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ListBox control is used as a drop-down for the ComboBox.
        ///    It shows a list and allows users to select items with
        ///    the mouse or keyboard (it has a nice search as-you-type
        ///    feature):.
        /// </summary>
        internal static string ListBox_Text1 {
            get {
                return ResourceManager.GetString("ListBox_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListBox.
        /// </summary>
        internal static string ListBox_Title {
            get {
                return ResourceManager.GetString("ListBox_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample uses C1 MVC&apos;s pseudo-classes to implement
        ///    a form with dynamic labels, validation, and focus
        ///    indicators similar to those in Google&apos;s Material Design
        ///    spec..
        /// </summary>
        internal static string MaterialDesign_Text1 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;D&lt;/span&gt;ate.
        /// </summary>
        internal static string MaterialDesign_Text10 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;T&lt;/span&gt;ime.
        /// </summary>
        internal static string MaterialDesign_Text11 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;Q&lt;/span&gt;uantity.
        /// </summary>
        internal static string MaterialDesign_Text12 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D&lt;span class=&quot;accesskey&quot;&gt;i&lt;/span&gt;scount.
        /// </summary>
        internal static string MaterialDesign_Text13 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;F&lt;/span&gt;avorite Colors.
        /// </summary>
        internal static string MaterialDesign_Text14 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {count:n0} favorite colors.
        /// </summary>
        internal static string MaterialDesign_Text15 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Item.
        /// </summary>
        internal static string MaterialDesign_Text2 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;N&lt;/span&gt;ame.
        /// </summary>
        internal static string MaterialDesign_Text3 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We do need your name....
        /// </summary>
        internal static string MaterialDesign_Text4 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;E&lt;/span&gt;-mail.
        /// </summary>
        internal static string MaterialDesign_Text5 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We need a valid e-mail....
        /// </summary>
        internal static string MaterialDesign_Text6 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;accesskey&quot;&gt;C&lt;/span&gt;ountry.
        /// </summary>
        internal static string MaterialDesign_Text7 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C&lt;span class=&quot;accesskey&quot;&gt;r&lt;/span&gt;edit Card #.
        /// </summary>
        internal static string MaterialDesign_Text8 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Four groups of four digits....
        /// </summary>
        internal static string MaterialDesign_Text9 {
            get {
                return ResourceManager.GetString("MaterialDesign_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Material Design.
        /// </summary>
        internal static string MaterialDesign_Title {
            get {
                return ResourceManager.GetString("MaterialDesign_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Menu control also supports MVVM-style commanding, which
        ///    requires no event handlers at all..
        /// </summary>
        internal static string MenusCommands_Text1 {
            get {
                return ResourceManager.GetString("MenusCommands_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increment by 25%.
        /// </summary>
        internal static string MenusCommands_Text10 {
            get {
                return ResourceManager.GetString("MenusCommands_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increment by 5%.
        /// </summary>
        internal static string MenusCommands_Text11 {
            get {
                return ResourceManager.GetString("MenusCommands_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrement by 5%.
        /// </summary>
        internal static string MenusCommands_Text12 {
            get {
                return ResourceManager.GetString("MenusCommands_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrement by 25%.
        /// </summary>
        internal static string MenusCommands_Text13 {
            get {
                return ResourceManager.GetString("MenusCommands_Text13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrement by 50%.
        /// </summary>
        internal static string MenusCommands_Text14 {
            get {
                return ResourceManager.GetString("MenusCommands_Text14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use the Menu control with commands, set the Menu&apos;s
        ///    &lt;b&gt;command&lt;/b&gt; property to an object with two methods:.
        /// </summary>
        internal static string MenusCommands_Text2 {
            get {
                return ResourceManager.GetString("MenusCommands_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;canExecuteCommand&lt;/b&gt;: This method takes an argument that
        ///        represents a parameter and returns a Boolean value indicating
        ///        whether the command can be executed in the current application
        ///        state..
        /// </summary>
        internal static string MenusCommands_Text3 {
            get {
                return ResourceManager.GetString("MenusCommands_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;executeCommand&lt;/b&gt;: This method takes an argument that
        ///        represents a parameter and executes the command..
        /// </summary>
        internal static string MenusCommands_Text4 {
            get {
                return ResourceManager.GetString("MenusCommands_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the InputNumber below shows a tax value that
        ///    can be edited directly or by using menu commands. Notice
        ///    how some commands are automatically disabled depending
        ///    on the current tax value:.
        /// </summary>
        internal static string MenusCommands_Text5 {
            get {
                return ResourceManager.GetString("MenusCommands_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Tax.
        /// </summary>
        internal static string MenusCommands_Text6 {
            get {
                return ResourceManager.GetString("MenusCommands_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Tax.
        /// </summary>
        internal static string MenusCommands_Text7 {
            get {
                return ResourceManager.GetString("MenusCommands_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tax Commands.
        /// </summary>
        internal static string MenusCommands_Text8 {
            get {
                return ResourceManager.GetString("MenusCommands_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increment by 50%.
        /// </summary>
        internal static string MenusCommands_Text9 {
            get {
                return ResourceManager.GetString("MenusCommands_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Commands.
        /// </summary>
        internal static string MenusCommands_Title {
            get {
                return ResourceManager.GetString("MenusCommands_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the Menu control to create context menus..
        /// </summary>
        internal static string MenusContextMenus_Text1 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        internal static string MenusContextMenus_Text10 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, this fiddle creates a single context menu and
        ///    handles the &apos;contextmenu&apos; event on several elements to show
        ///    the menu when the user requests it:.
        /// </summary>
        internal static string MenusContextMenus_Text2 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I have a Context Menu..
        /// </summary>
        internal static string MenusContextMenus_Text3 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I have the same Context Menu..
        /// </summary>
        internal static string MenusContextMenus_Text4 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You guessed it, me too..
        /// </summary>
        internal static string MenusContextMenus_Text5 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The same approach works with all Wijmo controls:.
        /// </summary>
        internal static string MenusContextMenus_Text6 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        internal static string MenusContextMenus_Text7 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        internal static string MenusContextMenus_Text8 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        internal static string MenusContextMenus_Text9 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Context Menus.
        /// </summary>
        internal static string MenusContextMenus_Title {
            get {
                return ResourceManager.GetString("MenusContextMenus_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlexChart with ContextMenu.
        /// </summary>
        internal static string MenusContextMenus_Title1 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FlexGrid with ContextMenu.
        /// </summary>
        internal static string MenusContextMenus_Title2 {
            get {
                return ResourceManager.GetString("MenusContextMenus_Title2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split Buttons allow users to select a value by clicking a
        ///    primary button, or select from a list of mutually exclusive
        ///    values displayed in a drop-down list..
        /// </summary>
        internal static string MenusSplitButtons_Text1 {
            get {
                return ResourceManager.GetString("MenusSplitButtons_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use C1 MVC Menu controls as split buttons, all you have to
        ///    do is set the &lt;b&gt;isButton&lt;/b&gt; property to true. Once you do
        ///    that, clicking the menu header will raise the &lt;b&gt;itemClicked&lt;/b&gt;
        ///    event instead of showing the drop-down list..
        /// </summary>
        internal static string MenusSplitButtons_Text2 {
            get {
                return ResourceManager.GetString("MenusSplitButtons_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split Buttons.
        /// </summary>
        internal static string MenusSplitButtons_Title {
            get {
                return ResourceManager.GetString("MenusSplitButtons_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Menu control can be used as a simple value picker.
        ///    It extends the ComboBox control, which allows you to bind
        ///    variables to the control&apos;s &lt;b&gt;selectedValue&lt;/b&gt; property
        ///    as you would with a ComboBox..
        /// </summary>
        internal static string MenusValuePickers_Text1 {
            get {
                return ResourceManager.GetString("MenusValuePickers_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This example ises the &lt;b&gt;selectedIndexChanged&lt;/b&gt; event
        ///    to update the Menu&apos;s &lt;b&gt;header&lt;/b&gt; and show the current
        ///    value:.
        /// </summary>
        internal static string MenusValuePickers_Text2 {
            get {
                return ResourceManager.GetString("MenusValuePickers_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Pickers.
        /// </summary>
        internal static string MenusValuePickers_Title {
            get {
                return ResourceManager.GetString("MenusValuePickers_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Menu control extends the ComboBox to add features
        ///    like a non-editable header, an &lt;b&gt;itemClicked&lt;/b&gt; event,
        ///    and commands..
        /// </summary>
        internal static string Menus_Text1 {
            get {
                return ResourceManager.GetString("Menus_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-copy&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;Copy&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;copy the current selection to the clipboard&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text10 {
            get {
                return ResourceManager.GetString("Menus_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-paste&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;Paste&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;insert clipboard content at the cursor position&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text11 {
            get {
                return ResourceManager.GetString("Menus_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The simplest way to use the Menu control is by populating
        ///    the Menu via its &lt;b&gt;itemsSource&lt;/b&gt; property and handling
        ///    the &lt;b&gt;itemClicked&lt;/b&gt; event. The event handler can inspect
        ///    the menu&apos;s &lt;b&gt;selectedItem&lt;/b&gt; property to determine which
        ///    item was clicked and take the appropriate action..
        /// </summary>
        internal static string Menus_Text2 {
            get {
                return ResourceManager.GetString("Menus_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        internal static string Menus_Text3 {
            get {
                return ResourceManager.GetString("Menus_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-asterisk&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;New&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;create a new file&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text4 {
            get {
                return ResourceManager.GetString("Menus_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-folder-open&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;Open&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;open an existing file or folder&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text5 {
            get {
                return ResourceManager.GetString("Menus_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-floppy-disk&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;Save&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;save the current file&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text6 {
            get {
                return ResourceManager.GetString("Menus_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;Exit&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;exit the application&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text7 {
            get {
                return ResourceManager.GetString("Menus_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        internal static string Menus_Text8 {
            get {
                return ResourceManager.GetString("Menus_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class=&quot;glyphicon glyphicon-scissors&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
        ///        &lt;b&gt;Cut&lt;/b&gt;
        ///        &lt;br&gt;
        ///        &lt;small&gt;&lt;i&gt;move the current selection to the clipboard&lt;/i&gt;&lt;/small&gt;.
        /// </summary>
        internal static string Menus_Text9 {
            get {
                return ResourceManager.GetString("Menus_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu.
        /// </summary>
        internal static string Menus_Title {
            get {
                return ResourceManager.GetString("Menus_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MultiAutoComplete control is similar to the MultiSelect.
        ///        Both controls allow users to select multiple items from lists.
        ///        The main differences between the two are:.
        /// </summary>
        internal static string MultiAutoComplete_Text1 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MultiAutoComplete shows a drop-down that includes only
        ///            items that match the current input (like the AutoComplete)..
        /// </summary>
        internal static string MultiAutoComplete_Text2 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MultiAutoComplete shows all the items that are currently
        ///            selected, and allows users to remove items by clicking them on
        ///            the list..
        /// </summary>
        internal static string MultiAutoComplete_Text3 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MultiAutoComplete exposes the list of selected items through
        ///            the &lt;b&gt;selectedItems&lt;/b&gt; property (the MultiSelect uses
        ///            &lt;b&gt;checkedItems&lt;/b&gt; instead)..
        /// </summary>
        internal static string MultiAutoComplete_Text4 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, try typing &quot;land&quot; or &quot;uni&quot;:.
        /// </summary>
        internal static string MultiAutoComplete_Text5 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select some countries.
        /// </summary>
        internal static string MultiAutoComplete_Text6 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Selected Items:&lt;/b&gt;.
        /// </summary>
        internal static string MultiAutoComplete_Text7 {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiAutoComplete.
        /// </summary>
        internal static string MultiAutoComplete_Title {
            get {
                return ResourceManager.GetString("MultiAutoComplete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC has several controls you can use to select multiple
        ///    items from a list:.
        /// </summary>
        internal static string MultiItem_Text1 {
            get {
                return ResourceManager.GetString("MultiItem_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;MultiSelect&lt;/b&gt;:
        ///        This is a drop-down control that extends ComboBox and adds
        ///        checkboxes next to each item in the drop-down list.
        ///        Currently checked items are exposed through the
        ///        &lt;b&gt;checkedItems&lt;/b&gt; property..
        /// </summary>
        internal static string MultiItem_Text2 {
            get {
                return ResourceManager.GetString("MultiItem_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;MultiAutoComplete&lt;/b&gt;:
        ///        This is a drop-down control that extends AutoComplete so
        ///        selected items are shown as &apos;tokens&apos; next to the control
        ///        header, where they can be removed with the mouse or keyboard.
        ///        Currently selected items are exposed through the
        ///        &lt;b&gt;selectedItems&lt;/b&gt; property..
        /// </summary>
        internal static string MultiItem_Text3 {
            get {
                return ResourceManager.GetString("MultiItem_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;ListBox&lt;/b&gt;:
        ///        The ListBox control has a &lt;b&gt;checkedMemberPath&lt;/b&gt; property
        ///        that allows you to add checkboxes to items on the list.
        ///        It has a &lt;b&gt;checkedItems&lt;/b&gt; property that gets or sets
        ///        the list of checked items..
        /// </summary>
        internal static string MultiItem_Text4 {
            get {
                return ResourceManager.GetString("MultiItem_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-Item Input.
        /// </summary>
        internal static string MultiItem_Title {
            get {
                return ResourceManager.GetString("MultiItem_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MultiSelect control extends the ComboBox and adds
        ///    checkboxes to each item in the drop-down list..
        /// </summary>
        internal static string MultiSelect_Text1 {
            get {
                return ResourceManager.GetString("MultiSelect_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The control exposes the list of checked items through
        ///    the &lt;b&gt;checkedItems&lt;/b&gt; property:.
        /// </summary>
        internal static string MultiSelect_Text2 {
            get {
                return ResourceManager.GetString("MultiSelect_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to countries.
        /// </summary>
        internal static string MultiSelect_Text3 {
            get {
                return ResourceManager.GetString("MultiSelect_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Checked Items:&lt;/b&gt;.
        /// </summary>
        internal static string MultiSelect_Text4 {
            get {
                return ResourceManager.GetString("MultiSelect_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiSelect.
        /// </summary>
        internal static string MultiSelect_Title {
            get {
                return ResourceManager.GetString("MultiSelect_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can handle keyboard events in the FlexGrid by adding
        ///    HTML event listeners to &lt;b&gt;hostElement&lt;/b&gt; of the grid..
        /// </summary>
        internal static string PopupDialogs_Text1 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, the grid below listens to the &apos;keydown&apos; event.
        ///    If you press Ctrl+Delete, it shows a prompt and deletes the
        ///    current row. Note that:.
        /// </summary>
        internal static string PopupDialogs_Text2 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event listener is added with the &lt;b&gt;capture&lt;/b&gt;
        ///        parameter set to true, so that it is called before the
        ///        grid gets it..
        /// </summary>
        internal static string PopupDialogs_Text3 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event handler calls the event&apos;s &lt;b&gt;preventDefault&lt;/b&gt;
        ///        method, so that the grid does not handle the Delete key as
        ///        it normally would..
        /// </summary>
        internal static string PopupDialogs_Text4 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Ctrl+Delete to remove the current row:.
        /// </summary>
        internal static string PopupDialogs_Text5 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting Row.
        /// </summary>
        internal static string PopupDialogs_Text6 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really want to delete this row?.
        /// </summary>
        internal static string PopupDialogs_Text7 {
            get {
                return ResourceManager.GetString("PopupDialogs_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Rows with Ctrl+Delete.
        /// </summary>
        internal static string PopupDialogs_Title {
            get {
                return ResourceManager.GetString("PopupDialogs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Although FlexGrid provides efficient, Excel-style
        ///    editing by default, you may want to customize the
        ///    editing behavior..
        /// </summary>
        internal static string PopupEditors_Text1 {
            get {
                return ResourceManager.GetString("PopupEditors_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This example shows how you can use the grid to display
        ///    the data and a custom form to edit the items.
        ///    The custom form is hosted in a C1 MVC &lt;b&gt;Popup&lt;/b&gt;
        ///    control and contains Wijmo input controls..
        /// </summary>
        internal static string PopupEditors_Text2 {
            get {
                return ResourceManager.GetString("PopupEditors_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the pencil glyphs in the row headers to edit
        ///    the item..
        /// </summary>
        internal static string PopupEditors_Text3 {
            get {
                return ResourceManager.GetString("PopupEditors_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country.
        /// </summary>
        internal static string PopupEditors_Text4 {
            get {
                return ResourceManager.GetString("PopupEditors_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sales.
        /// </summary>
        internal static string PopupEditors_Text5 {
            get {
                return ResourceManager.GetString("PopupEditors_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expenses.
        /// </summary>
        internal static string PopupEditors_Text6 {
            get {
                return ResourceManager.GetString("PopupEditors_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popup Editors.
        /// </summary>
        internal static string PopupEditors_Title {
            get {
                return ResourceManager.GetString("PopupEditors_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Item.
        /// </summary>
        internal static string PopupEditors_Title1 {
            get {
                return ResourceManager.GetString("PopupEditors_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Popup control shows arbitrary HTML content next to an
        ///    &quot;owner&quot; element or centered on the screen. It can be used
        ///    to implement drop-downs and dialogs..
        /// </summary>
        internal static string PopupsDialogs_Text1 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, click the buttons below to see a drop-down
        ///    or a dialog:.
        /// </summary>
        internal static string PopupsDialogs_Text2 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a drop-down..
        /// </summary>
        internal static string PopupsDialogs_Text3 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It may contain other controls..
        /// </summary>
        internal static string PopupsDialogs_Text4 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog Header.
        /// </summary>
        internal static string PopupsDialogs_Text5 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a modal dialog..
        /// </summary>
        internal static string PopupsDialogs_Text6 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dialog body may contain any HTML content..
        /// </summary>
        internal static string PopupsDialogs_Text7 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dialog will close when you click the OK or Cancel buttons,
        ///            &lt;br /&gt; or the grey background outside the dialog,
        ///            &lt;br /&gt; or when you press the Escape key..
        /// </summary>
        internal static string PopupsDialogs_Text8 {
            get {
                return ResourceManager.GetString("PopupsDialogs_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popups.
        /// </summary>
        internal static string PopupsDialogs_Title {
            get {
                return ResourceManager.GetString("PopupsDialogs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popups may have owner elements that control their position
        ///    and visibility..
        /// </summary>
        internal static string PopupsOwners_Text1 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hello Popup&lt;br /&gt;
        ///                This is a multi-line message!.
        /// </summary>
        internal static string PopupsOwners_Text10 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter email.
        /// </summary>
        internal static string PopupsOwners_Text11 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the Popover.
        /// </summary>
        internal static string PopupsOwners_Text12 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Popup&apos;s &lt;b&gt;showTrigger&lt;/b&gt; and &lt;b&gt;hideTrigger&lt;/b&gt; properties
        ///    determine whether the Popups should be shown or hidden when the
        ///    owner element is clicked or when the popup loses the focus..
        /// </summary>
        internal static string PopupsOwners_Text2 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In Bootstrap CSS, Popups with owner elements are called &quot;Popovers&quot;..
        /// </summary>
        internal static string PopupsOwners_Text3 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The most common type of Popover is the one with &lt;b&gt;showTrigger&lt;/b&gt;
        ///    set to &apos;Click&apos; and &lt;b&gt;hideTrigger&lt;/b&gt; set to &apos;Blur&apos;..
        /// </summary>
        internal static string PopupsOwners_Text4 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, the owner element is a button. Click the button
        ///    to show the Popover. Click anywhere outside the Popover to take
        ///    the focus away and hide it:.
        /// </summary>
        internal static string PopupsOwners_Text5 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hello Popup&lt;br /&gt;
        ///        This is a multi-line message!
        ///        This is a long line in my popover, which uses Bootstrap&apos;s
        ///        &apos;popover-content&apos; style..
        /// </summary>
        internal static string PopupsOwners_Text6 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set the &lt;b&gt;showTrigger&lt;/b&gt; and &lt;b&gt;hideTrigger&lt;/b&gt;
        ///    to &apos;Click&apos;, the Popover will appear when you click the owner
        ///    element and will remain visible until you click the owner
        ///    element again:.
        /// </summary>
        internal static string PopupsOwners_Text7 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hello Popup&lt;br /&gt;
        ///        This is a multi-line message!
        ///        This is a long line in my popover, which uses Boostrap&apos;s &apos;popover-content&apos; style..
        /// </summary>
        internal static string PopupsOwners_Text8 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you set the &lt;b&gt;showTrigger&lt;/b&gt; to &apos;Click&apos; and
        ///    &lt;b&gt;hideTrigger&lt;/b&gt; to &apos;None&apos;, the Popover will appear
        ///    when you click the owner element and will remain visible
        ///    until you call the &lt;b&gt;hide&lt;/b&gt; method in code or until the
        ///    user presses the Escape key or clicks an element with the
        ///    &apos;wj-hide&apos; class:.
        /// </summary>
        internal static string PopupsOwners_Text9 {
            get {
                return ResourceManager.GetString("PopupsOwners_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popups with Owner Elements.
        /// </summary>
        internal static string PopupsOwners_Title {
            get {
                return ResourceManager.GetString("PopupsOwners_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show on Click, Hide on Blur.
        /// </summary>
        internal static string PopupsOwners_Title1 {
            get {
                return ResourceManager.GetString("PopupsOwners_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        internal static string PopupsOwners_Title2 {
            get {
                return ResourceManager.GetString("PopupsOwners_Title2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show on Click, Hide on Click.
        /// </summary>
        internal static string PopupsOwners_Title3 {
            get {
                return ResourceManager.GetString("PopupsOwners_Title3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show on Click, Hide with Code.
        /// </summary>
        internal static string PopupsOwners_Title5 {
            get {
                return ResourceManager.GetString("PopupsOwners_Title5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSS pseudo-classes are keywords added to selectors that specify
        ///    a special state of the element to be selected. For example,
        ///    &lt;code&gt;:hover&lt;/code&gt; will apply a style when the user hovers
        ///    over the element specified by the selector..
        /// </summary>
        internal static string PseudoClasses_Text1 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pseudo-classes are important in forms because they let you apply
        ///  styles to elements not only in relation to the content of the
        ///  document tree, but also in relation to external factors like whether
        ///  the element has the focus (&lt;code&gt;:focus&lt;/code&gt;) or is in an invalid
        ///  state (&lt;code&gt;:invalid&lt;/code&gt;)..
        /// </summary>
        internal static string PseudoClasses_Text2 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the standard pseudo-classes are limited in their usefulness
        ///    because they apply only to specific elements, and not to the elements
        ///    ancestors. For example, many C1 MVC input controls contain input elements;
        ///    when the input elements have the focus, the inner input element gets
        ///    the &lt;code&gt;:focus&lt;/code&gt; pseudo-class, but the host element that contains
        ///    the control does not..
        /// </summary>
        internal static string PseudoClasses_Text3 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For this reason, C1 MVC adds some pseudo-classes of its own to make
        ///    building effective forms easier:.
        /// </summary>
        internal static string PseudoClasses_Text4 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;wj-state-focused&lt;/b&gt;: Added to control host elements when
        ///        the control &lt;b&gt;contains&lt;/b&gt; the active element (not necessarily
        ///        when the host element &lt;b&gt;is&lt;/b&gt; the active element)..
        /// </summary>
        internal static string PseudoClasses_Text5 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;wj-state-invalid&lt;/b&gt;: Added to control host elements when
        ///        the control contains input elements in an invalid state..
        /// </summary>
        internal static string PseudoClasses_Text6 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;wj-state-empty&lt;/b&gt;: Added to control host elements when the
        ///        control contains an input element with no content (this is different
        ///        from the &lt;code&gt;:empty&lt;/code&gt; pseudo-class which is applied to
        ///        elements that have no children..
        /// </summary>
        internal static string PseudoClasses_Text7 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;wj-state-readonly&lt;/b&gt;: Added to control host elements when
        ///        the control&apos;s &lt;b&gt;isReadOnly&lt;/b&gt; property is set to true..
        /// </summary>
        internal static string PseudoClasses_Text8 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;wj-state-disabled&lt;/b&gt;: Added to control host elements when the
        ///        control&apos;s &lt;b&gt;isDisabled&lt;/b&gt; property is set to true (which
        ///        corresponds to adding a &quot;disabled&quot; attribute to the control&apos;s
        ///        host element)..
        /// </summary>
        internal static string PseudoClasses_Text9 {
            get {
                return ResourceManager.GetString("PseudoClasses_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pseudo Classes.
        /// </summary>
        internal static string PseudoClasses_Title {
            get {
                return ResourceManager.GetString("PseudoClasses_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to the InputNumber control, you can use the
        ///    RadialGauge to input numbers. The RadialGauge control
        ///    is similar in features and behavior to the LinearGauge,
        ///    but with a circular layout..
        /// </summary>
        internal static string RadialGauge_Text1 {
            get {
                return ResourceManager.GetString("RadialGauge_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here is an input range element that can be used
        ///    to enter values between zero and 255:.
        /// </summary>
        internal static string RadialGauge_Text2 {
            get {
                return ResourceManager.GetString("RadialGauge_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here is a RadialGauge control set for the same range.
        ///    The &lt;b&gt;isReadOnly&lt;/b&gt; property is set to false, so you
        ///    can change the gauge value using the mouse or keyboard:.
        /// </summary>
        internal static string RadialGauge_Text3 {
            get {
                return ResourceManager.GetString("RadialGauge_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to And here is another RadialGauge control with some styling
        ///    applied:.
        /// </summary>
        internal static string RadialGauge_Text4 {
            get {
                return ResourceManager.GetString("RadialGauge_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RadialGauge as NumberInput.
        /// </summary>
        internal static string RadialGauge_Title {
            get {
                return ResourceManager.GetString("RadialGauge_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC&apos;s input module includes several controls for entering
        ///    and editing strings:.
        /// </summary>
        internal static string StringObjects_Text1 {
            get {
                return ResourceManager.GetString("StringObjects_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;ComboBox&lt;/b&gt;: Combines an input element with a drop-down
        ///            list and provides as-you-type search, making it quick and
        ///            easy to find items in long lists. Use it to enter strings
        ///            or to select objects from lists..
        /// </summary>
        internal static string StringObjects_Text2 {
            get {
                return ResourceManager.GetString("StringObjects_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, select a country:.
        /// </summary>
        internal static string StringObjects_Text3 {
            get {
                return ResourceManager.GetString("StringObjects_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;AutoComplete&lt;/b&gt;: Extends the ComboBox to provide
        ///            as-you-type async loading of items and a customizable
        ///            search algorithm. Use it to select items from large
        ///            datasets on the server..
        /// </summary>
        internal static string StringObjects_Text4 {
            get {
                return ResourceManager.GetString("StringObjects_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, type &apos;land&apos; or &apos;uni&apos;:.
        /// </summary>
        internal static string StringObjects_Text5 {
            get {
                return ResourceManager.GetString("StringObjects_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country.
        /// </summary>
        internal static string StringObjects_Text6 {
            get {
                return ResourceManager.GetString("StringObjects_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;InputMask&lt;/b&gt;: Provides character-level validation
        ///            by allowing you to specify a mask composed of templates
        ///            that constrain each character typed by the user..
        /// </summary>
        internal static string StringObjects_Text7 {
            get {
                return ResourceManager.GetString("StringObjects_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, type a phone number:.
        /// </summary>
        internal static string StringObjects_Text8 {
            get {
                return ResourceManager.GetString("StringObjects_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String and Objects.
        /// </summary>
        internal static string StringObjects_Title {
            get {
                return ResourceManager.GetString("StringObjects_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Popup control&apos;s &lt;b&gt;fadeIn&lt;/b&gt; and &lt;b&gt;fadeOut&lt;/b&gt; properties
        ///    add simple animations when the &lt;b&gt;Popup&lt;/b&gt; is shown or hidden..
        /// </summary>
        internal static string Transitions_Text1 {
            get {
                return ResourceManager.GetString("Transitions_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can create your own custom CSS-based animations by adding and
        ///    removing classes to the Popup&apos;s host element in response to the
        ///    &lt;b&gt;shown&lt;/b&gt; and &lt;b&gt;hiding&lt;/b&gt; events, and defining CSS rules
        ///    that apply animations based on those classes..
        /// </summary>
        internal static string Transitions_Text2 {
            get {
                return ResourceManager.GetString("Transitions_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CSS Transitions.
        /// </summary>
        internal static string Transitions_Title {
            get {
                return ResourceManager.GetString("Transitions_Title", resourceCulture);
            }
        }
    }
}
