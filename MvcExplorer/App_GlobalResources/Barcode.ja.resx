<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Barcode_Description_Text0" xml:space="preserve">
    <value>このビューは、ASP.NETMVCのバーコードの基本機能を示しています。</value>
    <comment>This view shows basic features of Barcode for ASP.NET MVC.</comment>
  </data>
  <data name="Barcode_Index_Text0" xml:space="preserve">
    <value>バーコード制御</value>
    <comment>Barcode control</comment>
  </data>
  <data name="Barcode_Index_Text1" xml:space="preserve">
    <value>値</value>
    <comment>Value</comment>
  </data>
  <data name="Barcode_Index_Text2" xml:space="preserve">
    <value>結果</value>
    <comment>Result</comment>
  </data>
  <data name="Barcode_Index_Text3" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="Codabar_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Codabar&lt;/b&gt;コントロールを使用すると、&lt;b&gt;Codabar&lt;/b&gt;を表示できます。</value>
    <comment>The Codabar control is used to display Codabar barcodes.</comment>
  </data>
  <data name="Code39_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Code39&lt;/b&gt;コントロールを使用すると、&lt;b&gt;CODE39&lt;/b&gt;を表示できます。</value>
    <comment>The Code39 control is used to display Code39 barcodes.</comment>
  </data>
  <data name="Code128_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Code128&lt;/b&gt;コントロールを使用すると、&lt;b&gt;CODE128&lt;/b&gt;を表示できます。</value>
    <comment>The Code128 control is used to display Code128 barcodes.</comment>
  </data>
  <data name="Ean8_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Ean8&lt;/b&gt;コントロールを使用すると、&lt;b&gt;EAN8&lt;/b&gt;を表示できます。</value>
    <comment>The Ean8 control is used to display EAN-8 barcodes.</comment>
  </data>
  <data name="Ean13_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Ean13&lt;/b&gt;コントロールを使用すると、&lt;b&gt;EAN13&lt;/b&gt;を表示できます。</value>
    <comment>The Ean13 control is used to display EAN-13 barcodes.</comment>
  </data>
  <data name="Gs1_128_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1_128&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1-128&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1_128 control is used to display GS1-128 barcodes.</comment>
  </data>
  <data name="QRCode_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;QrCode&lt;/b&gt;コントロールを使用すると、&lt;b&gt;QRコード&lt;/b&gt;を表示できます。</value>
    <comment>The QrCode control is used to display QR code barcodes.</comment>
  </data>
  <data name="UpcA_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;UpcA&lt;/b&gt;コントロールを使用すると、&lt;b&gt;UPC-A&lt;/b&gt;を表示できます。</value>
    <comment>The UpcA control is used to display UPC-A barcodes.</comment>
  </data>
  <data name="UpcE0_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;UpcE0&lt;/b&gt;コントロールを使用すると、&lt;b&gt;UPC-E0&lt;/b&gt;を表示できます。</value>
    <comment>The UpcE0 control is used to display UPC-E0 barcodes.</comment>
  </data>
  <data name="UpcE1_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;UpcE1&lt;/b&gt;コントロールを使用すると、&lt;b&gt;UPC-E1&lt;/b&gt;を表示できます。</value>
    <comment>The UpcE1 control is used to display UPC-E1 barcodes.</comment>
  </data>
  <data name="Code49_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Code49&lt;/b&gt;コントロールを使用すると、&lt;b&gt;CODE49&lt;/b&gt;を表示できます。</value>
    <comment>The Code49 control is used to display Code49 barcodes.</comment>
  </data>
  <data name="Code93_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Code93&lt;/b&gt;コントロールを使用すると、&lt;b&gt;CODE93&lt;/b&gt;を表示できます。</value>
    <comment>The Code93 control is used to display Code93 barcodes.</comment>
  </data>
  <data name="DataMatrixEcc200_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;DataMatrixEcc200&lt;/b&gt;コントロールを使用すると、&lt;b&gt;Data Matrix ECC 200&lt;/b&gt;を表示できます。</value>
    <comment>The DataMatrixEcc200 control is used to display DataMatrix ECC-200 barcodes.</comment>
  </data>
  <data name="DataMatrixEcc000_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;DataMatrixEcc000&lt;/b&gt;コントロールを使用すると、&lt;b&gt;Data Matrix ECC 000-140&lt;/b&gt;を表示できます。</value>
    <comment>The DataMatrix control is used to display DataMatrix barcodes with specification versions in the range from ECC 000 to ECC 140.</comment>
  </data>
  <data name="Interleaved2of5_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Interleaved2of5&lt;/b&gt;コントロールを使用すると、&lt;b&gt;ITF（Interleaved 2 of 5）&lt;/b&gt;を表示できます。</value>
    <comment>The Interleaved2of5 control is used to display Interleaved 2 of 5 barcodes.</comment>
  </data>
  <data name="Itf14_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Itf14&lt;/b&gt;コントロールを使用すると、&lt;b&gt;ITF-14&lt;/b&gt;を表示できます。</value>
    <comment>The Itf14 control is used to display ITF-14 barcodes.</comment>
  </data>
  <data name="JapanesePostal_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;JapanesePostal&lt;/b&gt;コントロールを使用すると、カスタマバーコードを表示できます。</value>
    <comment>The JapanesePostal control is used to display Japanese Postal barcodes.</comment>
  </data>
  <data name="Gs1DataBarExpanded_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarExpanded&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar Expanded（拡張型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarExpanded control is used to display GS1 DataBar Expanded barcodes.</comment>
  </data>
  <data name="Gs1DataBarExpandedStacked_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarExpandedStacked&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar Expanded Stacked（拡張多層型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarExpandedStacked control is used to display GS1 DataBar Expanded Stacked barcodes.</comment>
  </data>
  <data name="Gs1DataBarLimited_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarLimited&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar Limited（限定型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarLimited control is used to display GS1 DataBar Limited barcodes.</comment>
  </data>
  <data name="Gs1DataBarOmnidirectional_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarOmnidirectional&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar Omnidirectional（標準型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarOmnidirectional control is used to display GS1 DataBar Omnidirectional barcodes.</comment>
  </data>
  <data name="Gs1DataBarStacked_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarStacked&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar Stacked（二層型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarStacked control is used to display GS1 DataBar Stacked barcodes.</comment>
  </data>
  <data name="Gs1DataBarStackedOmnidirectional_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarStackedOmnidirectional&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar StackedOmnidirectional（標準二層型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarStackedOmnidirectional control is used to display GS1 DataBar StackedOmnidirectional barcodes.</comment>
  </data>
  <data name="Gs1DataBarTruncated_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Gs1DataBarTruncated&lt;/b&gt;コントロールを使用すると、&lt;b&gt;GS1 DataBar Truncated（カット型）&lt;/b&gt;を表示できます。</value>
    <comment>The Gs1DataBarTruncated control is used to display GS1 DataBar Truncated barcodes.</comment>
  </data>
  <data name="Pdf417_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;Pdf417&lt;/b&gt;コントロールを使用すると、&lt;b&gt;PDF417&lt;/b&gt;を表示できます。</value>
    <comment>The Pdf417 control is used to display PDF417 barcodes.</comment>
  </data>
  <data name="MicroPdf417_Description_Text0" xml:space="preserve">
    <value>&lt;b&gt;MicroPdf417&lt;/b&gt;コントロールを使用すると、&lt;b&gt;MicroPDF417&lt;/b&gt;を表示できます。</value>
    <comment>The MicroPdf417 control is used to display MicroPDF417 barcodes.</comment>
  </data>
</root>