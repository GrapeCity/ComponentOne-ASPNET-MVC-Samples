@using FinancialChartExplorer.Models

@model List<FinanceData>
@{
    ViewBag.DemoSettings = true;
    ClientSettingsModel demoSettingsModel = ViewBag.DemoSettingsModel;
}


<script type="text/javascript">
    function customChangeLineBreak(control, value) {
        control.options = { lineBreak: { newLineBreaks: +value } };
    }

    function customChangeStroke(control, value) {
        setColor(control, "style", "stroke", value);
    }

    function customChangeAltStroke(control, value) {
        setColor(control, "altStyle", "stroke", value);
    }

    function customChangeFill(control, value) {
        setColor(control, "style", "fill", value);
    }

    function customChangeAltFill(control, value) {
        setColor(control, "altStyle", "fill", value);
    }

    function setColor(control, styleName, attName, value) {
        control.series[0][styleName][attName] = value;
        control.invalidate();
    }
</script>


@(Html.C1().FinancialChart()
.Id(demoSettingsModel.ControlId)
.Bind(Model)
.BindingX("X")
.ChartType(C1.Web.Mvc.Finance.ChartType.LineBreak)
.Options(o => o.LineBreakNewLineBreaks(1))
.Series(sers =>
    {
        sers.Add().Name("BOX").Binding("High,Low,Open,Close").Style(s => s.Stroke("LightBlue").Fill("LightBlue")).AltStyle(s => s.Stroke("LightBlue").Fill("Transparent"));
    })
.Tooltip(t => t.Content("financialTooltip")))

@section Description{
    <p>@Html.Raw(Resources.Home.LineBreak_Text0)</p>
    <p>@Html.Raw(Resources.Home.LineBreak_Text1)</p>
}
@section Summary{
    <p>@Html.Raw(Resources.Home.LineBreak_Text2)</p>
}