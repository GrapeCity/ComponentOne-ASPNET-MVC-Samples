//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Input101.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Input101Res {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Input101Res() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Input101.Localization.Input101Res", typeof(Input101Res).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All others.
        /// </summary>
        public static string All_Others_Text0 {
            get {
                return ResourceManager.GetString("All_Others_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alphanumeric or space..
        /// </summary>
        public static string Alphanumeric_Space_Text0 {
            get {
                return ResourceManager.GetString("Alphanumeric_Space_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alphanumeric..
        /// </summary>
        public static string Alphanumeric_Text0 {
            get {
                return ResourceManager.GetString("Alphanumeric_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AutoComplete control is an auto-complete control that allows you to filter its
        ///            item list as you type, as well as select a value directly from its drop-down list..
        /// </summary>
        public static string AutoComplete_Description_Text0 {
            get {
                return ResourceManager.GetString("AutoComplete_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use the AutoComplete control, you must minimally set the &lt;b&gt;Bind&lt;/b&gt;
        ///            property to an array of data in order to populate its item list. The AutoComplete
        ///            control also offers several other properties to alter its behavior, such as the
        ///            &lt;b&gt;CssMatch&lt;/b&gt; property. The &lt;b&gt;CssMatch&lt;/b&gt; property allows you to specify the CSS
        ///            class that is used to highlight parts of the content that match your search terms..
        /// </summary>
        public static string AutoComplete_Description_Text1 {
            get {
                return ResourceManager.GetString("AutoComplete_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below uses List of strings to populate the AutoComplete control&apos;s
        ///            item list using the &lt;b&gt;Bind&lt;/b&gt; property. To see a list of suggestions, type
        ///            &lt;b&gt;&quot;ab&quot;&lt;/b&gt; or &lt;b&gt;&quot;za&quot;&lt;/b&gt; in the AutoComplete controls below..
        /// </summary>
        public static string AutoComplete_Description_Text2 {
            get {
                return ResourceManager.GetString("AutoComplete_Description_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind Only.
        /// </summary>
        public static string Bind_Only_Text0 {
            get {
                return ResourceManager.GetString("Bind_Only_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound Calendar with Min &amp;amp; Max.
        /// </summary>
        public static string Bound_Calendar_Text0 {
            get {
                return ResourceManager.GetString("Bound_Calendar_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound with min (0), max (10), step, and &quot;c2&quot; format.
        /// </summary>
        public static string Bound_Format_Text0 {
            get {
                return ResourceManager.GetString("Bound_Format_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound InputDate with Min &amp;amp; Max.
        /// </summary>
        public static string Bound_InputDate_Text0 {
            get {
                return ResourceManager.GetString("Bound_InputDate_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound with &quot;n&quot; format.
        /// </summary>
        public static string Bound_N0_Format_Text0 {
            get {
                return ResourceManager.GetString("Bound_N0_Format_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ComboBox control is very similar to the AutoComplete control, but rather than
        ///            providing a list of suggestions as you type, the ComboBox will automatically complete
        ///            and select the entry as you type..
        /// </summary>
        public static string ComboBox_Description_Text0 {
            get {
                return ResourceManager.GetString("ComboBox_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like the AutoComplete control, you must minimally set the ComboBox&apos;s &lt;b&gt;Bind&lt;/b&gt;
        ///            property to an array of data in order to populate its item list. You may also want to
        ///            specify whether the ComboBox is editable via the &lt;b&gt;IsEditable&lt;/b&gt; property. The
        ///            &lt;b&gt;IsEditable&lt;/b&gt; property determines whether or not a user can enter values that do
        ///            not appear in the ComboBox&apos;s item list..
        /// </summary>
        public static string ComboBox_Description_Text1 {
            get {
                return ResourceManager.GetString("ComboBox_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below uses two ComboBoxes bound to the same data source as the AutoComplete
        ///            control above. The first ComboBox&apos;s &lt;b&gt;isEditable&lt;/b&gt; property is set to false, while the
        ///            second ComboBox&apos;s &lt;b&gt;IsEditable&lt;/b&gt; property is set to true..
        /// </summary>
        public static string ComboBox_Description_Text2 {
            get {
                return ResourceManager.GetString("ComboBox_Description_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digit, sign, or space..
        /// </summary>
        public static string Digit_Sign_Space_Text0 {
            get {
                return ResourceManager.GetString("Digit_Sign_Space_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digit or space..
        /// </summary>
        public static string Digit_Space_Text0 {
            get {
                return ResourceManager.GetString("Digit_Space_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digit..
        /// </summary>
        public static string Digit_Text0 {
            get {
                return ResourceManager.GetString("Digit_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables case conversion..
        /// </summary>
        public static string Disables_Case_Conversion_Text {
            get {
                return ResourceManager.GetString("Disables_Case_Conversion_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editable.
        /// </summary>
        public static string Editable_Text0 {
            get {
                return ResourceManager.GetString("Editable_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter an input mask....
        /// </summary>
        public static string Enter_Input_Mask_Placeholder_Text0 {
            get {
                return ResourceManager.GetString("Enter_Input_Mask_Placeholder_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escapes any character, turning it into a literal..
        /// </summary>
        public static string Escapes_Character_Text0 {
            get {
                return ResourceManager.GetString("Escapes_Character_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps for getting started with Input controls in ASP.NET MVC applications:.
        /// </summary>
        public static string Getting_Started_Step_Title_Text0 {
            get {
                return ResourceManager.GetString("Getting_Started_Step_Title_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new MVC project using the C1 ASP.NET MVC application template..
        /// </summary>
        public static string Getting_Started_Step1_Text0 {
            get {
                return ResourceManager.GetString("Getting_Started_Step1_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add controller and corresponding  view to the project..
        /// </summary>
        public static string Getting_Started_Step2_Text0 {
            get {
                return ResourceManager.GetString("Getting_Started_Step2_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialize the input control in view using razor syntax..
        /// </summary>
        public static string Getting_Started_Step3_Text0 {
            get {
                return ResourceManager.GetString("Getting_Started_Step3_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Add some CSS to customize the input control&apos;s appearance..
        /// </summary>
        public static string Getting_Started_Step4_Text0 {
            get {
                return ResourceManager.GetString("Getting_Started_Step4_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Started.
        /// </summary>
        public static string Getting_Started_Text0 {
            get {
                return ResourceManager.GetString("Getting_Started_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDate control allows you to edit and select dates via a drop-down calendar,
        ///            preventing you from entering an incorrect value. The InputDate&apos;s drop-down calendar
        ///            was developed as a separate control and can be used be used independently
        ///            from the InputDate control..
        /// </summary>
        public static string InputDate_Calendar_Description_Text0 {
            get {
                return ResourceManager.GetString("InputDate_Calendar_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below demonstrates how to use each of these properties..
        /// </summary>
        public static string InputDate_Calendar_Description_Text1 {
            get {
                return ResourceManager.GetString("InputDate_Calendar_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Value&lt;/b&gt;: Specifies the date value for the control..
        /// </summary>
        public static string InputDate_Calendar_Property_Text0 {
            get {
                return ResourceManager.GetString("InputDate_Calendar_Property_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Min&lt;/b&gt;: Specifies the minimum date value that can be entered in the control..
        /// </summary>
        public static string InputDate_Calendar_Property_Text1 {
            get {
                return ResourceManager.GetString("InputDate_Calendar_Property_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Max&lt;/b&gt;: Specifies the maximum date value that can be entered in the control..
        /// </summary>
        public static string InputDate_Calendar_Property_Text2 {
            get {
                return ResourceManager.GetString("InputDate_Calendar_Property_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both InputDate and Calendar, specify several properties to alter the controls&apos; behavior.
        ///            The most commonly used properties include:.
        /// </summary>
        public static string InputDate_Calendar_Property_Title_Text0 {
            get {
                return ResourceManager.GetString("InputDate_Calendar_Property_Title_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound InputDate with Min, Max, &amp;amp; Format.
        /// </summary>
        public static string InputDate_Format_Text0 {
            get {
                return ResourceManager.GetString("InputDate_Format_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate with Mask.
        /// </summary>
        public static string InputDate_Mask_Text0 {
            get {
                return ResourceManager.GetString("InputDate_Mask_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Similar to the InputDate control, the InputTime control allows you to modify the time portion of
        ///            a JavaScript date. The InputTime control shares many of the same properties as the InputDate control,
        ///            including &lt;b&gt;Format&lt;/b&gt;, &lt;b&gt;Min&lt;/b&gt;, &lt;b&gt;Max&lt;/b&gt;, and &lt;b&gt;Value&lt;/b&gt;. The InputTime control also offers a
        ///            &lt;b&gt;Step&lt;/b&gt; property that allows you to specify the number of minutes between entries in its drop-down
        ///            list..
        /// </summary>
        public static string InputDateTime_Description_Text0 {
            get {
                return ResourceManager.GetString("InputDateTime_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputDateTime control combines the InputDate and InputTime controls, allowing you to set the date
        ///            and time portions. The InputDateTime control has two drop-downs: a Calendar
        ///            for picking dates, and a list for picking times..
        /// </summary>
        public static string InputDateTime_Description_Text1 {
            get {
                return ResourceManager.GetString("InputDateTime_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below illustrates how to use the InputTime control in conjunction with the InputDate
        ///            control. Notice that these controls work together to edit the same DateTime JavaScript Object
        ///            and only update the part of the DateTime that they are responsible for..
        /// </summary>
        public static string InputDateTime_Description_Text2 {
            get {
                return ResourceManager.GetString("InputDateTime_Description_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example also shows an InputDateTime that updates both the date and time parts..
        /// </summary>
        public static string InputDateTime_Description_Text3 {
            get {
                return ResourceManager.GetString("InputDateTime_Description_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound InputDateTime with Min, Max, TimeMin, TimeMax, Format, &amp;amp; TimeStep.
        /// </summary>
        public static string InputDateTime_Format_Text0 {
            get {
                return ResourceManager.GetString("InputDateTime_Format_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputDate, InputTime and InputDateTim.
        /// </summary>
        public static string InputDateTime_Title_Text0 {
            get {
                return ResourceManager.GetString("InputDateTime_Title_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputMask control allows you to validate and format user input as it is entered, preventing
        ///            invalid data.  The InputMask control can be used without specifying any of its properties; however,
        ///            you will typically set its &lt;b&gt;Value&lt;/b&gt; and &lt;b&gt;Mask&lt;/b&gt; properties.  Like the other MVC input
        ///            controls, the &lt;b&gt;Value&lt;/b&gt; property specifies the value for the InputMask control.  The &lt;b&gt;Mask&lt;/b&gt; property
        ///            specifies the control&apos;s mask and supports a combination of th [rest of string was truncated]&quot;;.
        /// </summary>
        public static string InputMask_Description_Text0 {
            get {
                return ResourceManager.GetString("InputMask_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples below demonstrates how to use the &lt;b&gt;Value&lt;/b&gt; and &lt;b&gt;Mask&lt;/b&gt; properties with the
        ///            InputMask, InputDate, and InputTime controls..
        /// </summary>
        public static string InputMask_Description_Text1 {
            get {
                return ResourceManager.GetString("InputMask_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The InputNumber control allows you to edit numbers, preventing you from entering invalid
        ///            data and optionally formatting the numeric value as it is edited. The InputNumber can be
        ///            used without specifying any of its properties; however, you&apos;ll typically want to bind it
        ///            to some data using the &lt;b&gt;Value&lt;/b&gt; property..
        /// </summary>
        public static string InputNumber_Description_Text0 {
            get {
                return ResourceManager.GetString("InputNumber_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below demonstrates how to use all of these properties..
        /// </summary>
        public static string InputNumber_Description_Text1 {
            get {
                return ResourceManager.GetString("InputNumber_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Min&lt;/b&gt;: Specifies the minimum numeric value that can be entered..
        /// </summary>
        public static string InputNumber_Property_Text0 {
            get {
                return ResourceManager.GetString("InputNumber_Property_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Max&lt;/b&gt;: Specifies the maximum numeric value that can be entered..
        /// </summary>
        public static string InputNumber_Property_Text1 {
            get {
                return ResourceManager.GetString("InputNumber_Property_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Step&lt;/b&gt;: Specifies the amount to add or subtract from the current
        ///                value when the spinner buttons are clicked..
        /// </summary>
        public static string InputNumber_Property_Text2 {
            get {
                return ResourceManager.GetString("InputNumber_Property_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Format&lt;/b&gt;: Specifies the numeric format used to display the number being
        ///                edited. The format property uses a .NET-style
        ///                &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx&quot; target=&quot;_blank&quot;&gt;numeric format string&lt;/a&gt;..
        /// </summary>
        public static string InputNumber_Property_Text3 {
            get {
                return ResourceManager.GetString("InputNumber_Property_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to the &lt;b&gt;value&lt;/b&gt; property, the InputNumber control offers several other
        ///            properties that can be used to alter its behavior, such as:.
        /// </summary>
        public static string InputNumber_Property_Title_Text0 {
            get {
                return ResourceManager.GetString("InputNumber_Property_Title_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound InputTime with Min, Max, &amp;amp; Step.
        /// </summary>
        public static string InputTime_Format_Text0 {
            get {
                return ResourceManager.GetString("InputTime_Format_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputTime with Mask.
        /// </summary>
        public static string InputTime_Mask_Text0 {
            get {
                return ResourceManager.GetString("InputTime_Mask_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Letter or space..
        /// </summary>
        public static string Letter_Space_Text0 {
            get {
                return ResourceManager.GetString("Letter_Space_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Letter..
        /// </summary>
        public static string Letter_Text0 {
            get {
                return ResourceManager.GetString("Letter_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ListBox control displays a list of items and allows you to select items using your
        ///            mouse and keyboard. Like the AutoComplete and ComboBox controls, you must specify the
        ///            ListBox&apos;s &lt;b&gt;Bind&lt;/b&gt; property in order to use the control..
        /// </summary>
        public static string ListBox_Description_Text0 {
            get {
                return ResourceManager.GetString("ListBox_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below allows you to select an item within the ListBox control, and also displays
        ///            the control&apos;s &lt;b&gt;SelectedIndex&lt;/b&gt; and &lt;b&gt;SelectedValue&lt;/b&gt; properties..
        /// </summary>
        public static string ListBox_Description_Text1 {
            get {
                return ResourceManager.GetString("ListBox_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Literals..
        /// </summary>
        public static string Literals_Text0 {
            get {
                return ResourceManager.GetString("Literals_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Localized currency symbol..
        /// </summary>
        public static string Localized_Currency_Symbol_Text0 {
            get {
                return ResourceManager.GetString("Localized_Currency_Symbol_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Localized date separator..
        /// </summary>
        public static string Localized_Date_Separator_Text0 {
            get {
                return ResourceManager.GetString("Localized_Date_Separator_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Localized decimal point..
        /// </summary>
        public static string Localized_Decimal_Point_Text0 {
            get {
                return ResourceManager.GetString("Localized_Decimal_Point_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Localized thousand separator..
        /// </summary>
        public static string Localized_Thousand_Separator_Text0 {
            get {
                return ResourceManager.GetString("Localized_Thousand_Separator_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Localized time separator..
        /// </summary>
        public static string Localized_Time_Separator_Text0 {
            get {
                return ResourceManager.GetString("Localized_Time_Separator_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Menu control allows you to create a simple drop-down list with clickable items. The Menu&apos;s
        ///            items can be defined directly or by using the &lt;b&gt;Bind&lt;/b&gt; property similar to the ComboBox.
        ///            To specify the text displayed on the Menu, you can set the &lt;b&gt;Header&lt;/b&gt; property..
        /// </summary>
        public static string Menu_Description_Text0 {
            get {
                return ResourceManager.GetString("Menu_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example below demonstrates how to use both approaches..
        /// </summary>
        public static string Menu_Description_Text1 {
            get {
                return ResourceManager.GetString("Menu_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;executeCommand(param)&lt;/b&gt;: A method that executes the command..
        /// </summary>
        public static string Menu_Handling_Text0 {
            get {
                return ResourceManager.GetString("Menu_Handling_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;canExecuteCommand(param)&lt;/b&gt;: A method that returns a Boolean value specifying whether or
        ///                not the command can be executed. If the return value is false, the menu item is disabled automatically..
        /// </summary>
        public static string Menu_Handling_Text1 {
            get {
                return ResourceManager.GetString("Menu_Handling_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Menu control offers two ways to handle user selections, specifying a command on each menu item
        ///            and the &lt;b&gt;ItemClicked&lt;/b&gt; event. Unlike the &lt;b&gt;ItemClicked&lt;/b&gt; event, commands are objects that
        ///            implement two methods:.
        /// </summary>
        public static string Menu_Handling_Title_Text0 {
            get {
                return ResourceManager.GetString("Menu_Handling_Title_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-Editable.
        /// </summary>
        public static string Non_Editable_Text0 {
            get {
                return ResourceManager.GetString("Non_Editable_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone Number.
        /// </summary>
        public static string Phone_Number_Text0 {
            get {
                return ResourceManager.GetString("Phone_Number_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASP.NET MVC Input 101.
        /// </summary>
        public static string Project_Name_Text0 {
            get {
                return ResourceManager.GetString("Project_Name_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This page shows how to get started with MVC&apos;s Input controls..
        /// </summary>
        public static string Project_Short_Description_Text0 {
            get {
                return ResourceManager.GetString("Project_Short_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result (live).
        /// </summary>
        public static string Result_Live_Text0 {
            get {
                return ResourceManager.GetString("Result_Live_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Date &amp;amp; Time.
        /// </summary>
        public static string Selected_Date_And_Time_Text0 {
            get {
                return ResourceManager.GetString("Selected_Date_And_Time_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Social Security Number.
        /// </summary>
        public static string Social_Security_Number_Text0 {
            get {
                return ResourceManager.GetString("Social_Security_Number_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts characters that follow to lowercase..
        /// </summary>
        public static string To_Lowercase_Text0 {
            get {
                return ResourceManager.GetString("To_Lowercase_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts characters that follow to uppercase..
        /// </summary>
        public static string To_Uppercase_Text0 {
            get {
                return ResourceManager.GetString("To_Uppercase_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try your input mask....
        /// </summary>
        public static string Try_Your_Input_Mask_Placeholder_Text0 {
            get {
                return ResourceManager.GetString("Try_Your_Input_Mask_Placeholder_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try your own.
        /// </summary>
        public static string Try_Your_Own_Text0 {
            get {
                return ResourceManager.GetString("Try_Your_Own_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbound with &quot;n0&quot; format.
        /// </summary>
        public static string Unbound_N0_Format_Text0 {
            get {
                return ResourceManager.GetString("Unbound_N0_Format_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbound with placeholder and isRequired=&quot;false&quot;.
        /// </summary>
        public static string Unbound_Placeholder_IsRequired_Text0 {
            get {
                return ResourceManager.GetString("Unbound_Placeholder_IsRequired_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid Range:.
        /// </summary>
        public static string Valid_Range_Text0 {
            get {
                return ResourceManager.GetString("Valid_Range_Text0", resourceCulture);
            }
        }
    }
}
