//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OlapExplorer.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class OlapRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OlapRes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OlapExplorer.Localization.OlapRes", typeof(OlapRes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        public static string _ControlsNav_Text0 {
            get {
                return ResourceManager.GetString("_ControlsNav_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ComponentOne.
        /// </summary>
        public static string _Layout_Text0 {
            get {
                return ResourceManager.GetString("_Layout_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MVC Olap Explorer.
        /// </summary>
        public static string _Layout_Text1 {
            get {
                return ResourceManager.GetString("_Layout_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 ASP.NET MVC.
        /// </summary>
        public static string _Layout_Text10 {
            get {
                return ResourceManager.GetString("_Layout_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASP.NET MVC Edition Olap Explorer.
        /// </summary>
        public static string _Layout_Text2 {
            get {
                return ResourceManager.GetString("_Layout_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation.
        /// </summary>
        public static string _Layout_Text3 {
            get {
                return ResourceManager.GetString("_Layout_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GrapeCity, Inc. All Rights Reserved.&lt;br /&gt;
        ///            All product and company names here in may be trademarks of their respective owners..
        /// </summary>
        public static string _Layout_Text4 {
            get {
                return ResourceManager.GetString("_Layout_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample.
        /// </summary>
        public static string _Layout_Text5 {
            get {
                return ResourceManager.GetString("_Layout_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        public static string _Layout_Text6 {
            get {
                return ResourceManager.GetString("_Layout_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string _Layout_Text7 {
            get {
                return ResourceManager.GetString("_Layout_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string _Layout_Text8 {
            get {
                return ResourceManager.GetString("_Layout_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.grapecity.com/en/aspnet-mvc.
        /// </summary>
        public static string _Layout_Text9 {
            get {
                return ResourceManager.GetString("_Layout_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string _SiteNav_Text0 {
            get {
                return ResourceManager.GetString("_SiteNav_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support.
        /// </summary>
        public static string _SiteNav_Text1 {
            get {
                return ResourceManager.GetString("_SiteNav_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pricing.
        /// </summary>
        public static string _SiteNav_Text2 {
            get {
                return ResourceManager.GetString("_SiteNav_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FREE TRIAL.
        /// </summary>
        public static string _SiteNav_Text3 {
            get {
                return ResourceManager.GetString("_SiteNav_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Theme &amp;gt;.
        /// </summary>
        public static string _SiteNav_Text4 {
            get {
                return ResourceManager.GetString("_SiteNav_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.grapecity.com/en/aspnet-mvc.
        /// </summary>
        public static string _SiteNav_Text5 {
            get {
                return ResourceManager.GetString("_SiteNav_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://supportone.componentone.com/login.
        /// </summary>
        public static string _SiteNav_Text6 {
            get {
                return ResourceManager.GetString("_SiteNav_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.grapecity.com/en/pricing.
        /// </summary>
        public static string _SiteNav_Text7 {
            get {
                return ResourceManager.GetString("_SiteNav_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.grapecity.com/en/download/componentone-studio.
        /// </summary>
        public static string _SiteNav_Text8 {
            get {
                return ResourceManager.GetString("_SiteNav_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine support GetAggregateValue function in PivotField to calculate aggregate field for each summary row..
        /// </summary>
        public static string CalculatedAggregates_Text0 {
            get {
                return ResourceManager.GetString("CalculatedAggregates_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PivotField objects have two properties as function that support custom calculations:.
        /// </summary>
        public static string CalculatedAggregates_Text1 {
            get {
                return ResourceManager.GetString("CalculatedAggregates_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GetValue function takes a data item as a parameter and returns a value that is calculated based on other properties of the data item. The function has no access to any aggregate information..
        /// </summary>
        public static string CalculatedAggregates_Text2 {
            get {
                return ResourceManager.GetString("CalculatedAggregates_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The GetAggregateValue function takes a summary row as a parameter and returns a value to be displayed as an aggregate for the field. The function has no access to the individual/raw data items..
        /// </summary>
        public static string CalculatedAggregates_Text3 {
            get {
                return ResourceManager.GetString("CalculatedAggregates_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample uses the GetValue function to calculate a Range field that categorizes raw sales value into three levels: &quot;High&quot;, &quot;Medium&quot;, or &quot;Low&quot;..
        /// </summary>
        public static string CalculatedAggregates_Text4 {
            get {
                return ResourceManager.GetString("CalculatedAggregates_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to And uses GetAggregateValue function to calculate a Conversion field that shows the Sales/Downloads ratio for each summary row..
        /// </summary>
        public static string CalculatedAggregates_Text5 {
            get {
                return ResourceManager.GetString("CalculatedAggregates_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine allows to connect directly to OLAP cubes provided by SSAS servers..
        /// </summary>
        public static string Cube_Text0 {
            get {
                return ResourceManager.GetString("Cube_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the CubeService.&lt;b&gt;Url&lt;/b&gt; and CubeService.&lt;b&gt;Cube&lt;/b&gt; properties that specify how the component should access the service..
        /// </summary>
        public static string Cube_Text1 {
            get {
                return ResourceManager.GetString("Cube_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine component connect directly to OLAP cube provided by SSAS server..
        /// </summary>
        public static string Cube_Text2 {
            get {
                return ResourceManager.GetString("Cube_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component binds to a service. Now only the &lt;b&gt;DataEngine&lt;/b&gt; Web API is supported.&lt;/br&gt;The service-url attribute should be set in this mode.&lt;/br&gt;You can get the details about how to deploy the DataEngine service in the DataEngine Web API &lt;a href=&quot;http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html&quot;&gt;documentation&lt;/a&gt;..
        /// </summary>
        public static string DataEngine_Text0 {
            get {
                return ResourceManager.GetString("DataEngine_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component connects to the DataEngine data.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control, the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;The aggregated data will be obtained from the service.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control show the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DataEngine_Text1 {
            get {
                return ResourceManager.GetString("DataEngine_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the data row count is greater than 10,000, in order to get good performance, we recommend you set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag.&lt;/br&gt;Otherwise, please set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag used in the &lt;a href=&quot;/Olap/Index&quot;&gt;Index&lt;/a&gt; page and the &lt;a href=&quot;/Olap/RemoteBind&quot;&gt;RemoteBind&lt;/a&gt; page..
        /// </summary>
        public static string DataEngine_Text2 {
            get {
                return ResourceManager.GetString("DataEngine_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine component binds to DataEngine Web API and DataEngine data..
        /// </summary>
        public static string DataEngine_Text3 {
            get {
                return ResourceManager.GetString("DataEngine_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component binds to a service. Now only the &lt;b&gt;DataEngine&lt;/b&gt; Web API is supported.&lt;/br&gt;The service-url attribute should be set in this mode.&lt;/br&gt;You can get the details about how to deploy the DataEngine service in the DataEngine Web API &lt;a href=&quot;http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html&quot;&gt;documentation&lt;/a&gt;..
        /// </summary>
        public static string DataSource_Text0 {
            get {
                return ResourceManager.GetString("DataSource_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component connects to the DataEngine data.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control, the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;The aggregated data will be obtained from the service.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control show the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DataSource_Text1 {
            get {
                return ResourceManager.GetString("DataSource_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the data row count is greater than 10,000, in order to get good performance, we recommend you set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag.&lt;/br&gt;Otherwise, please set the source-collection attribute or the read-action-url attribute used in the &lt;c1-items-source /&gt; tag in the &lt;a href=&quot;/Olap/Index&quot;&gt;Index&lt;/a&gt; page and the &lt;a href=&quot;/Olap/RemoteBind&quot;&gt;RemoteBind&lt;/a&gt; page..
        /// </summary>
        public static string DataSource_Text2 {
            get {
                return ResourceManager.GetString("DataSource_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine component binds to a DataEngine Web API and an in-memory data..
        /// </summary>
        public static string DataSource_Text3 {
            get {
                return ResourceManager.GetString("DataSource_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error..
        /// </summary>
        public static string Error_Text0 {
            get {
                return ResourceManager.GetString("Error_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while processing your request..
        /// </summary>
        public static string Error_Text1 {
            get {
                return ResourceManager.GetString("Error_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ~/Content/css/gcicons.css.
        /// </summary>
        public static string GcIconsCssPath {
            get {
                return ResourceManager.GetString("GcIconsCssPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &lt;b&gt;ViewDefinition&lt;/b&gt; property to save and restore view definitions, as shown in the following example:.
        /// </summary>
        public static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use &lt;b&gt;OutlineMode&lt;/b&gt; property of &lt;b&gt;PivotGrid&lt;/b&gt; to compact the amount of white space shown on the screen.&lt;br /&gt;You can also force showing headers of value fields in &lt;b&gt;PivotGrid&lt;/b&gt; by using &lt;b&gt;ShowValueFieldHeaders&lt;/b&gt; property even only one value field available..
        /// </summary>
        public static string Index_Text10 {
            get {
                return ResourceManager.GetString("Index_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;PivotGrid&lt;/b&gt; control extends the &lt;b&gt;FlexGrid&lt;/b&gt; control, so you can export it to any of&lt;/br&gt;the formats supported by the extension modules provided with the &lt;b&gt;FlexGrid&lt;/b&gt;. The&lt;/br&gt;list of the supported formats includes .xlsx, .csv, and .pdf..
        /// </summary>
        public static string Index_Text2 {
            get {
                return ResourceManager.GetString("Index_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For example, clicking the button below creates an Excel file with two sheets: the current view and a transposed version of the current view..
        /// </summary>
        public static string Index_Text3 {
            get {
                return ResourceManager.GetString("Index_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; binds to an IEnumerable object, which provides the data to be aggregated.&lt;/br&gt;All the data will be transferred to the client. The &lt;b&gt;PivotEngine&lt;/b&gt; will calculate the data in the client-side, like Wijmo 5 olap controls.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control and the &lt;b&gt;PivotGrid&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control shows the aggregated data.&lt;/br&gt;You ca [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Index_Text4 {
            get {
                return ResourceManager.GetString("Index_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the data row count is lower than 10,000, you can set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag.&lt;/br&gt;Otherwise, please set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag used in the &lt;a href=&quot;/Olap/DataEngine&quot;&gt;DataEngine&lt;/a&gt; page..
        /// </summary>
        public static string Index_Text5 {
            get {
                return ResourceManager.GetString("Index_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine component binds to an IEnumerable object..
        /// </summary>
        public static string Index_Text6 {
            get {
                return ResourceManager.GetString("Index_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save View.
        /// </summary>
        public static string Index_Text7 {
            get {
                return ResourceManager.GetString("Index_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load View.
        /// </summary>
        public static string Index_Text8 {
            get {
                return ResourceManager.GetString("Index_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export to XLSX.
        /// </summary>
        public static string Index_Text9 {
            get {
                return ResourceManager.GetString("Index_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; binds to an IEnumerable object, which provides the data to be aggregated.&lt;/br&gt;All the data will be transferred to the client. The &lt;b&gt;PivotEngine&lt;/b&gt; will calculate the data in the client-side, like Wijmo 5 olap controls.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control and the &lt;b&gt;PivotGrid&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control shows the aggregated data.&lt;/br&gt;You ca [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RemoteBind_Text0 {
            get {
                return ResourceManager.GetString("RemoteBind_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the data row count is lower than 10,000, you can set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag.&lt;/br&gt;Otherwise, please set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag used in the &lt;a href=&quot;/Olap/DataEngine&quot;&gt;DataEngine&lt;/a&gt; page..
        /// </summary>
        public static string RemoteBind_Text1 {
            get {
                return ResourceManager.GetString("RemoteBind_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine component binds to a remote action url which provides the data..
        /// </summary>
        public static string RemoteBind_Text2 {
            get {
                return ResourceManager.GetString("RemoteBind_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;
        ///        The &lt;b&gt;Slicer&lt;/b&gt; control provides a quick way to edit filters
        ///        applied to &lt;b&gt;PivotField&lt;/b&gt; objects.
        ///    &lt;/p&gt;
        ///    &lt;p&gt;
        ///        It provides buttons the user can click to filter data based on
        ///        values and indicates the current filtering state, which makes
        ///        it easy to understand what is shown in filtered &lt;b&gt;PivotGrid&lt;/b&gt;
        ///        and &lt;b&gt;PivotChart&lt;/b&gt; controls.
        ///    &lt;/p&gt;.
        /// </summary>
        public static string Slicer_Desc {
            get {
                return ResourceManager.GetString("Slicer_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Slicer&lt;/b&gt; control provides a quick way to edit filters
        ///        applied to &lt;b&gt;PivotField&lt;/b&gt; objects..
        /// </summary>
        public static string Slicer_Summary {
            get {
                return ResourceManager.GetString("Slicer_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can customize the &lt;b&gt;Slicer&lt;/b&gt; control to hide or show
        ///    a header, to hide or show checkboxes next to each item, and to allow select multi item or not :.
        /// </summary>
        public static string Slicer_Text0 {
            get {
                return ResourceManager.GetString("Slicer_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Header.
        /// </summary>
        public static string Slicer_Text1 {
            get {
                return ResourceManager.GetString("Slicer_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Checkboxes.
        /// </summary>
        public static string Slicer_Text2 {
            get {
                return ResourceManager.GetString("Slicer_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow multi select.
        /// </summary>
        public static string Slicer_Text3 {
            get {
                return ResourceManager.GetString("Slicer_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select to filter.
        /// </summary>
        public static string Slicer_Text4 {
            get {
                return ResourceManager.GetString("Slicer_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component binds to a service. Now only the &lt;b&gt;DataEngine&lt;/b&gt; Web API is supported.&lt;/br&gt;The service-url attribute should be set in this mode.&lt;/br&gt;You can get the details about how to deploy the DataEngine service in the DataEngine Web API &lt;a href=&quot;http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html&quot;&gt;documentation&lt;/a&gt;..
        /// </summary>
        public static string SSAS_Text0 {
            get {
                return ResourceManager.GetString("SSAS_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component connects to a cube DataEngine data.&lt;/br&gt;The cube DataEngine data is configurated in the Statup file of the application.&lt;/br&gt;If you want to customize the fields for a cube data, you need add &lt;c1-cube-field /&gt; in the &lt;c1-pivot-field-collection /&gt; tag.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;The aggregated data will be obtained from the service.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control show the  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SSAS_Text1 {
            get {
                return ResourceManager.GetString("SSAS_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the data row count is greater than 10,000, in order to get good performance, we recommend you set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag.&lt;/br&gt;Otherwise, please set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag used in the &lt;a href=&quot;/Olap/Index&quot;&gt;Index&lt;/a&gt; page and the &lt;a href=&quot;/Olap/RemoteBind&quot;&gt;RemoteBind&lt;/a&gt; page..
        /// </summary>
        public static string SSAS_Text2 {
            get {
                return ResourceManager.GetString("SSAS_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PivotEngine component binds to a DataEngine Web API and cube data..
        /// </summary>
        public static string SSAS_Text3 {
            get {
                return ResourceManager.GetString("SSAS_Text3", resourceCulture);
            }
        }
    }
}
