@using Sample.Models
@model IEnumerable<Sale>
@{
    List<string> products = ViewBag.Products;
}

@Html.RegisterMultiColumnComboBoxScripts()   

<script type="text/javascript">
    c1.documentReady(function () {
        var grid = wijmo.Control.getControl('#customGridEditorsGrid');
        grid.hostElement.addEventListener('keydown', function (e) {
            if (e.keyCode == 32) {
                e.preventDefault();
            }
        });
    });

    //TFS 433440 Case 1: Update data in dropdown when focusing on MultiColumnComboBox input
    function onFocus(e) {
        e.onTextChanged();
    }
</script>

<script id="edtCountry" type="text/template">   

    @(Html.Custom().MultiColumnComboBox()
                                                                .Id("countryEditor")
                                                                .IsEditable(false)
                                                                .ItemsSourceId("collectionViewService1")
                                                                .CssStyle("width", "100%") // full with the cell
                                                                .TemplateBind("Text", "Country").ToTemplate()
                                                                .DisplayMemberPath("CountryName")
                                                                .OnClientGotFocus("onFocus")
    )
</script>

@(Html.C1().CollectionViewService<Country>()
        .Bind(Url.Action("CountrySearch", "Home"))
        .Id("collectionViewService1")
        .DisableServerRead(false)
        .PageSize(10)
)

@(Html.C1().CollectionViewService<Country>()
        .Bind(Url.Action("CountrySearch", "Home"))
        .Id("collectionViewService2")
        .DisableServerRead(false)
        .PageSize(10)
)
<h4>@Html.Raw(Resources.MultiColumnComboBox.MultiColumnComboBox_Text03)</h4>
<h4>@Html.Raw(Resources.MultiColumnComboBox.MultiColumnComboBox_Text01)</h4>
@(Html.Custom().MultiColumnComboBox()
                                                                .Id("MultiColumnComboBox")
                                                                .IsEditable(false)
                                                                .ItemsSourceId("collectionViewService2")
                                                                .CssStyle("width", "15%")
                                                                .DisplayMemberPath("CountryName")
                                                                .OnClientGotFocus("onFocus")//TFS 433440 Case 1: Update data in dropdown when focusing on MultiColumnComboBox input
)

<h4>@Html.Raw(Resources.MultiColumnComboBox.MultiColumnComboBox_Text02)</h4>
<!-- FlexGrid hosting the custom editors -->
@(Html.C1().FlexGrid<Sale>()
                                .Id("customGridEditorsGrid")
                                .KeyActionTab(C1.Web.Mvc.Grid.KeyAction.Cycle)
                                .AllowAddNew(true).AllowDragging(C1.Web.Mvc.Grid.AllowDragging.Both)
                                .AllowDelete(true)
                                .AutoGenerateColumns(false)
                                .Columns(bl =>
                                {
                                    bl.Add(cb => cb.Binding("ID").Width("0.4*").IsReadOnly(true));
                                    bl.Add(cb => cb.Binding("Start").Header("Date").Width("*").Format("d"));
                                    bl.Add(cb => cb.Binding("End").Header("Time").Width("*").Format("t"));
                                    bl.Add(cb => cb.Binding("Country").Width("1.5*").CellTemplate(ctb => ctb.EditTemplateId("edtCountry")));
                                    bl.Add(cb => cb.Binding("Product").Width("1.5*"));
                                    bl.Add(cb => cb.Binding("Amount").Format("n2"));
                                    bl.Add(cb => cb.Binding("Amount2").Format("n2"));
                                    bl.Add(cb => cb.Binding("Color").Width("1.5*"));
                                    bl.Add(cb => cb.Binding("Active").Width("1.5*"));
                                })
                                .Bind(bl => bl.Update(Url.Action("GridEditorsUpdate"))
                                    .Create(Url.Action("GridEditorsCreate"))
                                    .Delete(Url.Action("GridEditorsDelete"))
                                    .Bind(Model))
                                .CssStyle("height", "500px")
)