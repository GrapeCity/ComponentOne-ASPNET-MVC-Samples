//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Calendar {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Calendar() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Calendar", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MMM d, yyyy.
        /// </summary>
        internal static string Index_DateFormat {
            get {
                return ResourceManager.GetString("Index_DateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;FirstDayOfWeek&lt;/i&gt;: Represents the first day of the week, the one displayed in the first column of the calendar..
        /// </summary>
        internal static string Index_FirstDayOfWeek {
            get {
                return ResourceManager.GetString("Index_FirstDayOfWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;HandleWheel&lt;/i&gt;: Determines whether the user can change the current displayMonth using the mouse wheel..
        /// </summary>
        internal static string Index_HandleWheel {
            get {
                return ResourceManager.GetString("Index_HandleWheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Month Count.
        /// </summary>
        internal static string Index_MonthCount {
            get {
                return ResourceManager.GetString("Index_MonthCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;MonthCount&lt;/i&gt;: The number of months to display within the calendar..
        /// </summary>
        internal static string Index_MonthsCount {
            get {
                return ResourceManager.GetString("Index_MonthsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;MonthView&lt;/i&gt;: Indicating whether the calendar displays a month or a year..
        /// </summary>
        internal static string Index_MonthView {
            get {
                return ResourceManager.GetString("Index_MonthView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;RepeatButtons&lt;/i&gt; = True: the calendar buttons (Previous and Next buttons) should act as repeat buttons, firing repeatedly as the button remains pressed..
        /// </summary>
        internal static string Index_RepeatButtons {
            get {
                return ResourceManager.GetString("Index_RepeatButtons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;ShowHeader&lt;/i&gt;: Indicating whether the control displays the header area with the current month and navigation buttons..
        /// </summary>
        internal static string Index_ShowHeader {
            get {
                return ResourceManager.GetString("Index_ShowHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;ShowYearPicker&lt;/i&gt; = True: the calendar should display a list of years when the user clicks the header element on the year calendar..
        /// </summary>
        internal static string Index_ShowYearPicker {
            get {
                return ResourceManager.GetString("Index_ShowYearPicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows the basic usage of the Calendar control..
        /// </summary>
        internal static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bound Calendar with Min &amp;amp; Max.
        /// </summary>
        internal static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to to.
        /// </summary>
        internal static string Index_To {
            get {
                return ResourceManager.GetString("Index_To", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid Range:.
        /// </summary>
        internal static string Index_ValidRange {
            get {
                return ResourceManager.GetString("Index_ValidRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Week After.
        /// </summary>
        internal static string Index_WeekAfter {
            get {
                return ResourceManager.GetString("Index_WeekAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Week Before.
        /// </summary>
        internal static string Index_WeekBefore {
            get {
                return ResourceManager.GetString("Index_WeekBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;WeekAfter&lt;/i&gt;: The number of weeks to show on the calendar after the current month..
        /// </summary>
        internal static string Index_WeeksAfter {
            get {
                return ResourceManager.GetString("Index_WeeksAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;i&gt;WeekBefore&lt;/i&gt;: The number of weeks to show on the calendar before the current month..
        /// </summary>
        internal static string Index_WeeksBefore {
            get {
                return ResourceManager.GetString("Index_WeeksBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current range is:.
        /// </summary>
        internal static string Ranges_CurrentSelection {
            get {
                return ResourceManager.GetString("Ranges_CurrentSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows how to use DateSelectionMode.Range selection mode that allows users to select date ranges. 
        ///    Selected ranges are defined by the &lt;b&gt;Value&lt;/b&gt; and &lt;b&gt;RangeEnd&lt;/b&gt; properties. 
        ///    You may specify the minimum and maximum valid range lengths with the &lt;b&gt;RangeMin&lt;/b&gt; and &lt;b&gt;RangeMax&lt;/b&gt; properties..
        /// </summary>
        internal static string Ranges_Description {
            get {
                return ResourceManager.GetString("Ranges_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;RangeMin&lt;/b&gt;: The default value for this property is 0, which means there is no minimum value for range lengths..
        /// </summary>
        internal static string Ranges_Description1 {
            get {
                return ResourceManager.GetString("Ranges_Description1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;RangeMax&lt;/b&gt;: The default value for this property is 0, which means there is no maximum value for range lengths..
        /// </summary>
        internal static string Ranges_Description2 {
            get {
                return ResourceManager.GetString("Ranges_Description2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range End.
        /// </summary>
        internal static string Ranges_RangeEnd {
            get {
                return ResourceManager.GetString("Ranges_RangeEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RangeMax.
        /// </summary>
        internal static string Ranges_RangeMax {
            get {
                return ResourceManager.GetString("Ranges_RangeMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RangeMin.
        /// </summary>
        internal static string Ranges_RangeMin {
            get {
                return ResourceManager.GetString("Ranges_RangeMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this &lt;b&gt;Calendar&lt;/b&gt; control to select a date. 
        ///    Notice that you won&apos;t be able to select weekends..
        /// </summary>
        internal static string Validation_Text0 {
            get {
                return ResourceManager.GetString("Validation_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample shows how to use &lt;b&gt;ItemValidator&lt;/b&gt; function to determine whether the dates
        ///    are valid for a selection..
        /// </summary>
        internal static string Validation_Text1 {
            get {
                return ResourceManager.GetString("Validation_Text1", resourceCulture);
            }
        }
    }
}
