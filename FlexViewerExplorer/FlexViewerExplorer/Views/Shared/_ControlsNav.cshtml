@using FlexViewerExplorer.Models
<script type="text/javascript">
    function tvFlexReports_MouseDown(e) {
        var grid = wijmo.Control.getControl('#tvFlexReports');
        tvFlexGrid_MouseDown(grid, e);
    }
    function tvArReports_MouseDown(e) {
        var grid = wijmo.Control.getControl('#tvArReports');
        tvFlexGrid_MouseDown(grid, e);
    }
    function tvSsrsReports_MouseDown(e) {
        var grid = wijmo.Control.getControl('#tvSsrsReports');
        tvFlexGrid_MouseDown(grid, e);
    }
    function tvPdfs_MouseDown(e) {
        var grid = wijmo.Control.getControl('#tvPdfs');
        tvFlexGrid_MouseDown(grid, e);
    }
    function tvFlexGrid_MouseDown(grid, e) {
        if (e.button != 0) {
            return;
        }
        
        var ht = grid.hitTest(e.pageX, e.pageY);
        if (ht.cellType != wijmo.grid.CellType.Cell) {
            return;
        }
        var gr = wijmo.tryCast(grid.rows[ht.row], wijmo.grid.GroupRow);
        if (!gr) {
            return;
        }

        var viewerName = "ReportViewer";
        switch(gr.dataItem["Kind"]) {
            case "FlexReport":
                loadFlexReport(gr.dataItem["FullPath"], gr.dataItem["Name"]);
                break;
            case "ArReport":
                loadArReport(gr.dataItem["FullPath"]);
                break;
            case "SsrsReport":
                loadSsrsReport(gr.dataItem["FullPath"]);
                break;
            case "Pdf":
                viewerName = "PdfViewer";
                loadPdf(gr.dataItem["FullPath"]);
                break;
            default:
                return;
        }
        
        updateTitle(viewerName, gr.dataItem["Title"]);
    }

    c1.documentReady(function () {
        var gridFlexReports = wijmo.Control.getControl('#tvFlexReports');
        gridFlexReports.maxUpdateCount = 1;
        gridFlexReports.updatedView.addHandler(flexGrid_UpdatedView, gridFlexReports);
        gridFlexReports.hostElement.addEventListener('mousedown', tvFlexReports_MouseDown)

        var gridArReports = wijmo.Control.getControl('#tvArReports');
        gridArReports.maxUpdateCount = 1;
        gridArReports.updatedView.addHandler(flexGrid_UpdatedView, gridArReports);
        gridArReports.hostElement.addEventListener('mousedown', tvArReports_MouseDown)

        var gridSsrsReports = wijmo.Control.getControl('#tvSsrsReports');
        gridSsrsReports.maxUpdateCount = 1;
        gridSsrsReports.updatedView.addHandler(flexGrid_UpdatedView, gridSsrsReports);
        gridSsrsReports.hostElement.addEventListener('mousedown', tvSsrsReports_MouseDown)

        var gridPdfs = wijmo.Control.getControl('#tvPdfs');
        gridPdfs.maxUpdateCount = 1;
        gridPdfs.updatedView.addHandler(flexGrid_UpdatedView, gridPdfs);
        gridPdfs.hostElement.addEventListener('mousedown', tvPdfs_MouseDown)
    });
</script>
<div class="aside-title">
    @Html.Raw(Resources.FlexViewer._ControlsNav_Text0)
</div>
@(Html.C1().FlexGrid<DocumentItem>()
    .CssClass("navgrid").TreeIndent(20)
    .Id("tvFlexReports").AutoGenerateColumns(false).IsReadOnly(true)
    .Bind(ReportFiles.Reports)
    .HeadersVisibility(C1.Web.Mvc.Grid.HeadersVisibility.None)
    .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.ListBox)
    .OnClientFormatItem("flexGrid_ItemFormatter")
    .AllowResizing(C1.Web.Mvc.Grid.AllowResizing.None)
    .AllowSorting(false)
    .ChildItemsPath("Children")
    .Columns(bl =>
    {
        bl.Add().Binding("Title").Width("*");
    })
)

<div class="aside-title">
    @Html.Raw(Resources.FlexViewer._ControlsNav_Text1)
</div>
@(Html.C1().FlexGrid<DocumentItem>()
    .CssClass("navgrid").TreeIndent(20)
    .Id("tvArReports").AutoGenerateColumns(false).IsReadOnly(true)
    .Bind(Documents.ArReports.Items)
    .HeadersVisibility(C1.Web.Mvc.Grid.HeadersVisibility.None)
    .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.ListBox)
    .OnClientFormatItem("flexGrid_ItemFormatter")
    .AllowResizing(C1.Web.Mvc.Grid.AllowResizing.None)
    .AllowSorting(false)
    .ChildItemsPath("Children")
    .Columns(bl =>
    {
        bl.Add().Binding("Title").Width("*");
    })
)

<div class="aside-title">
    @Html.Raw(Resources.FlexViewer._ControlsNav_Text2)
</div>
@(Html.C1().FlexGrid<DocumentItem>()
    .CssClass("navgrid").TreeIndent(20)
    .Id("tvSsrsReports").AutoGenerateColumns(false).IsReadOnly(true)
    .Bind(Documents.SsrsReports.Items)
    .HeadersVisibility(C1.Web.Mvc.Grid.HeadersVisibility.None)
    .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.ListBox)
    .OnClientFormatItem("flexGrid_ItemFormatter")
    .AllowResizing(C1.Web.Mvc.Grid.AllowResizing.None)
    .AllowSorting(false)
    .ChildItemsPath("Children")
    .Columns(bl =>
    {
        bl.Add().Binding("Title").Width("*");
    })
)

<div class="aside-title">
    @Html.Raw(Resources.FlexViewer._ControlsNav_Text3)
</div>
@(Html.C1().FlexGrid<DocumentItem>()
    .CssClass("navgrid").TreeIndent(20)
    .Id("tvPdfs").AutoGenerateColumns(false).IsReadOnly(true)
    .Bind(Documents.Pdfs.Items)
    .HeadersVisibility(C1.Web.Mvc.Grid.HeadersVisibility.None)
    .SelectionMode(C1.Web.Mvc.Grid.SelectionMode.ListBox)
    .OnClientFormatItem("flexGrid_ItemFormatter")
    .AllowResizing(C1.Web.Mvc.Grid.AllowResizing.None)
    .AllowSorting(false)
    .ChildItemsPath("Children")
    .Columns(bl =>
    {
        bl.Add().Binding("Title").Width("*");
    })
)