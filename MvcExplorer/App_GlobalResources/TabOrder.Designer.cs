//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TabOrder {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TabOrder() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.TabOrder", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This sample shows how to use TabOrder for controls. The &apos;Default&apos; setting shows the controls without the TabOrder property . The &apos;Customized&apos; setting specifies the TabOrder property for each control, a tab order that follows relationships in the content without following the order of the interactive elements in the code..
        /// </summary>
        internal static string TabOrder_Description_Text0 {
            get {
                return ResourceManager.GetString("TabOrder_Description_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;b&gt;TabIndex&lt;/b&gt; attribute value can be defined statically for a Wijmo control by specifying it on the control&apos;s host HTML element. But this value can&apos;t be changed later during application lifecycle, because Wijmo controls have complex structure, and the control may need to propagate this attribute value to its internal element to work properly..
        /// </summary>
        internal static string TabOrder_Description_Text1 {
            get {
                return ResourceManager.GetString("TabOrder_Description_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Because of this, to read or change control&apos;s tabindex dynamically, you should do it using &lt;b&gt;TabOrder&lt;/b&gt; property..
        /// </summary>
        internal static string TabOrder_Description_Text2 {
            get {
                return ResourceManager.GetString("TabOrder_Description_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This view shows how to use TabOrder..
        /// </summary>
        internal static string TabOrder_Text0 {
            get {
                return ResourceManager.GetString("TabOrder_Text0", resourceCulture);
            }
        }
    }
}
