<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GroupCollection_Text0" xml:space="preserve">
    <value>このビューは、グループ化データを TreeMap チャートと組み合わせて使用する方法を示します。</value>
  <comment>The view shows how to use the TreeMap chart with grouped data.</comment></data>
  <data name="Index_Text0" xml:space="preserve">
    <value>このビューは、TreeMap の基本機能を示します。これは、チャートをデータモデルに連結します。</value>
  <comment>This view shows the basic features of TreeMap. It binds the chart to a data model.</comment></data>
  <data name="Index_Text1" xml:space="preserve">
    <value>マウスをチャート要素の上に移動すると、そのデータポイントの詳細を示すツールチップが表示されます。</value>
  <comment>If you move the mouse over a chart element, a tooltip will appear showing details about the data point.</comment></data>
  <data name="Index_Text2" xml:space="preserve">
    <value>TreeMap チャートコントロールでは、Type 属性を使用して、レイアウトと外観をカスタマイズすることができます。</value>
  <comment>The TreeMap chart control allows you to customize its layout and appearance by using the Type attribute.</comment></data>
  <data name="MaxDepth_Text0" xml:space="preserve">
    <value>TreeMap チャートコントロールでは、&lt;b&gt;max-depth&lt;/b&gt; 属性を使用して、現在のビューに表示する最大ノードレベル数を設定できます。</value>
  <comment>The TreeMap chart control allows you to set the maximum number of node levels to show in the current view by using the &lt;b&gt;max-depth&lt;/b&gt; attribute.</comment></data>
  <data name="Theming_Text0" xml:space="preserve">
    <value>TreeMap チャートコントロールでは、&lt;b&gt;palette&lt;/b&gt; 属性を使用して外観をカスタマイズすることができます。</value>
  <comment>The TreeMap chart control allows you to customize the appearance by using the &lt;b&gt;palette&lt;/b&gt; attribute.</comment></data>
  <data name="Theming_Text1" xml:space="preserve">
    <value>このプロパティにはコレクションを設定できます。コレクション項目タイプは、&lt;b&gt;System.String&lt;/b&gt; または &lt;b&gt;C1.Web.Mvc.TreeMapItemStyle&lt;/b&gt; です。</value>
  <comment>You can set a collection to this property. The collection item type could be &lt;b&gt;System.String&lt;/b&gt; or &lt;b&gt;C1.Web.Mvc.TreeMapItemStyle&lt;/b&gt;.</comment></data>
  <data name="MaxDepth_Root" xml:space="preserve">
    <value>ルート</value>
    <comment>Root</comment>
  </data>
</root>