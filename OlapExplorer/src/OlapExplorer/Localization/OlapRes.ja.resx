<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cube_Text0" xml:space="preserve">
    <value>PivotEngineは、SSASサーバーから提供されるOLAPキューブに直接接続できます。</value>
    <comment>The PivotEngine allows to connect directly to OLAP cubes provided by SSAS servers.</comment>
  </data>
  <data name="Cube_Text1" xml:space="preserve">
    <value>CubeService.&lt;b&gt;Url&lt;/b&gt;プロパティとCubeService.&lt;b&gt;Cube&lt;/b&gt;プロパティを設定して、コンポーネントがサービスにアクセスする方法を指定します。</value>
    <comment>Set the CubeService.&lt;b&gt;Url&lt;/b&gt; and CubeService.&lt;b&gt;Cube&lt;/b&gt; properties that specify how the component should access the service.</comment>
  </data>
  <data name="Cube_Text2" xml:space="preserve">
    <value>PivotEngineコンポーネントをSSASサーバーから提供されるOLAPキューブに直接接続します。</value>
    <comment>The PivotEngine component connect directly to OLAP cube provided by SSAS server.</comment>
  </data>
  <data name="DataEngine_Text0" xml:space="preserve">
    <value>このサンプルでは、&lt;b&gt;PivotEngine&lt;/b&gt;コンポーネントをサービスに連結します。現在、&lt;b&gt;DataEngine&lt;/b&gt; Web APIだけがサポートされています。&lt;/br&gt;このモードでは、service-url属性を設定する必要があります。&lt;/br&gt;DataEngineサービスの展開方法の詳細については、DataEngine Web API&lt;a href="http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html"&gt;ドキュメント&lt;/a&gt;を参照してください。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component binds to a service. Now only the &lt;b&gt;DataEngine&lt;/b&gt; Web API is supported.&lt;/br&gt;The service-url attribute should be set in this mode.&lt;/br&gt;You can get the details about how to deploy the DataEngine service in the DataEngine Web API &lt;a href="http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html"&gt;documentation&lt;/a&gt;.</comment>
  </data>
  <data name="DataEngine_Text1" xml:space="preserve">
    <value>このサンプルでは、&lt;b&gt;PivotEngine&lt;/b&gt;コンポーネントをDataEngineデータに接続します。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロール、&lt;b&gt;PivotGrid&lt;/b&gt;コントロール、および&lt;b&gt;PivotChart&lt;/b&gt;コントロールは&lt;b&gt;PivotEngine&lt;/b&gt;に連結されます。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールでビュー定義を変更できます。&lt;/br&gt;集計データは、サービスから取得されます。&lt;/br&gt;その結果、&lt;b&gt;PivotGrid&lt;/b&gt;コントロールと&lt;b&gt;PivotChart&lt;/b&gt;コントロールに集計データが表示されます。&lt;/br&gt;&lt;b&gt;PivotGrid&lt;/b&gt;コントロール内のセルをダブルクリックすると、詳細な生データがグリッドに表示されます。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component connects to the DataEngine data.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control, the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;The aggregated data will be obtained from the service.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control show the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double-clicking a cell in the &lt;b&gt;PivotGrid&lt;/b&gt; control.</comment>
  </data>
  <data name="DataEngine_Text2" xml:space="preserve">
    <value>データ行数が10,000を超える場合は、パフォーマンスを向上させるために、&lt;c1-pivot-engine /&gt;タグのservice-url属性を設定することをお勧めします。&lt;/br&gt;それ以外の場合は、&lt;a href="/Olap/Index"&gt;Index&lt;/a&gt;ページと&lt;a href="/Olap/RemoteBind"&gt;RemoteBind&lt;/a&gt;ページで使用される&lt;c1-items-source /&gt;タグのsource-collection属性またはread-action-url属性を設定してください。</value>
    <comment>When the data row count is greater than 10,000, in order to get good performance, we recommend you set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag.&lt;/br&gt;Otherwise, please set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag used in the &lt;a href="/Olap/Index"&gt;Index&lt;/a&gt; page and the &lt;a href="/Olap/RemoteBind"&gt;RemoteBind&lt;/a&gt; page.</comment>
  </data>
  <data name="DataEngine_Text3" xml:space="preserve">
    <value>PivotEngineコンポーネントをDataEngine Web APIとDataEngineデータに連結します。</value>
    <comment>The PivotEngine component binds to DataEngine Web API and DataEngine data.</comment>
  </data>
  <data name="DataSource_Text0" xml:space="preserve">
    <value>このサンプルでは、&lt;b&gt;PivotEngine&lt;/b&gt;コンポーネントをサービスに連結します。現在、&lt;b&gt;DataEngine&lt;/b&gt; Web APIだけがサポートされています。&lt;/br&gt;このモードでは、service-url属性を設定する必要があります。&lt;/br&gt;DataEngineサービスの展開方法の詳細については、DataEngine Web API&lt;a href="http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html"&gt;ドキュメント&lt;/a&gt;を参照してください。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component binds to a service. Now only the &lt;b&gt;DataEngine&lt;/b&gt; Web API is supported.&lt;/br&gt;The service-url attribute should be set in this mode.&lt;/br&gt;You can get the details about how to deploy the DataEngine service in the DataEngine Web API &lt;a href="http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html"&gt;documentation&lt;/a&gt;.</comment>
  </data>
  <data name="DataSource_Text1" xml:space="preserve">
    <value>このサンプルでは、&lt;b&gt;PivotEngine&lt;/b&gt;コンポーネントをDataEngineデータに接続します。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロール、&lt;b&gt;PivotGrid&lt;/b&gt;コントロール、および&lt;b&gt;PivotChart&lt;/b&gt;コントロールは&lt;b&gt;PivotEngine&lt;/b&gt;に連結されます。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールでビュー定義を変更できます。&lt;/br&gt;集計データは、サービスから取得されます。&lt;/br&gt;その結果、&lt;b&gt;PivotGrid&lt;/b&gt;コントロールと&lt;b&gt;PivotChart&lt;/b&gt;コントロールに集計データが表示されます。&lt;/br&gt;&lt;b&gt;PivotGrid&lt;/b&gt;コントロール内のセルをダブルクリックすると、詳細な生データがグリッドに表示されます。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component connects to the DataEngine data.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control, the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;The aggregated data will be obtained from the service.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control show the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double-clicking a cell in the &lt;b&gt;PivotGrid&lt;/b&gt; control.</comment>
  </data>
  <data name="DataSource_Text2" xml:space="preserve">
    <value>データ行数が10,000を超える場合は、パフォーマンスを向上させるために、&lt;c1-pivot-engine /&gt;タグのservice-url属性を設定することをお勧めします。&lt;/br&gt;それ以外の場合は、&lt;a href="/Olap/Index"&gt;Index&lt;/a&gt;ページと&lt;a href="/Olap/RemoteBind"&gt;RemoteBind&lt;/a&gt;ページで使用される&lt;c1-items-source /&gt;タグのsource-collection属性またはread-action-url属性を設定してください。</value>
    <comment>When the data row count is greater than 10,000, in order to get good performance, we recommend you set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag.&lt;/br&gt;Otherwise, please set the source-collection attribute or the read-action-url attribute used in the &lt;c1-items-source /&gt; tag in the &lt;a href="/Olap/Index"&gt;Index&lt;/a&gt; page and the &lt;a href="/Olap/RemoteBind"&gt;RemoteBind&lt;/a&gt; page.</comment>
  </data>
  <data name="DataSource_Text3" xml:space="preserve">
    <value>PivotEngineコンポーネントをDataEngine Web APIとインメモリデータに連結します。</value>
    <comment>The PivotEngine component binds to a DataEngine Web API and an in-memory data.</comment>
  </data>
  <data name="Error_Text0" xml:space="preserve">
    <value>エラー。</value>
    <comment>Error.</comment>
  </data>
  <data name="Error_Text1" xml:space="preserve">
    <value>要求の処理中にエラーが発生しました。</value>
    <comment>An error occurred while processing your request.</comment>
  </data>
  <data name="GcIconsCssPath" xml:space="preserve">
    <value>~/Content/css/gcicons.ja.css</value>
    <comment>~/Content/css/gcicons.css</comment>
  </data>
  <data name="Index_Text0" xml:space="preserve">
    <value>ビュー定義を保存または復元するには、&lt;b&gt;viewDefinition&lt;/b&gt;プロパティを使用できます。次に例を示します。</value>
    <comment>You can use the &lt;b&gt;viewDefinition&lt;/b&gt; property to save and restore view definitions, as shown in the following example:</comment>
  </data>
  <data name="Index_Text2" xml:space="preserve">
    <value>&lt;b&gt;PivotGrid&lt;/b&gt;コントロールは、&lt;b&gt;FlexGrid&lt;/b&gt;コントロールの拡張です。したがって、&lt;/br&gt;&lt;b&gt;FlexGrid&lt;/b&gt;に付属する拡張モジュールでサポートされている形式であれば、どの形式にもエクスポートできます。&lt;/br&gt;サポートされている形式には、.xlsx、.csv、.pdfなどがあります。</value>
    <comment>The &lt;b&gt;PivotGrid&lt;/b&gt; control extends the &lt;b&gt;FlexGrid&lt;/b&gt; control, so you can export it to any of&lt;/br&gt;the formats supported by the extension modules provided with the &lt;b&gt;FlexGrid&lt;/b&gt;. The&lt;/br&gt;list of the supported formats includes .xlsx, .csv, and .pdf.</comment>
  </data>
  <data name="Index_Text3" xml:space="preserve">
    <value>たとえば、次のボタンをクリックすると、現在のビューと現在のビューを転置したバージョンの2つのシートを含むExcelファイルが作成されます。</value>
    <comment>For example, clicking the button below creates an Excel file with two sheets: the current view and a transposed version of the current view.</comment>
  </data>
  <data name="Index_Text4" xml:space="preserve">
    <value>このサンプルでは、集計するデータを提供するIEnumerableオブジェクトに&lt;b&gt;PivotEngine&lt;/b&gt;を連結します。&lt;/br&gt;すべてのデータがクライアントに転送されます。&lt;b&gt;PivotEngine&lt;/b&gt;は、Wijmo 5 OLAPコントロールなどのクライアント側にあるデータを計算します。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールと&lt;b&gt;PivotGrid&lt;/b&gt;コントロールは&lt;b&gt;PivotEngine&lt;/b&gt;に連結されます。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールでビュー定義を変更できます。&lt;/br&gt;その結果、&lt;b&gt;PivotGrid&lt;/b&gt;コントロールに集計データが表示されます。&lt;/br&gt;&lt;b&gt;PivotGrid&lt;/b&gt;コントロール内のセルをダブルクリックすると、詳細な生データがグリッドに表示されます。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; binds to an IEnumerable object, which provides the data to be aggregated.&lt;/br&gt;All the data will be transferred to the client. The &lt;b&gt;PivotEngine&lt;/b&gt; will calculate the data in the client-side, like Wijmo 5 olap controls.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control and the &lt;b&gt;PivotGrid&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control shows the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double-clicking a cell in the &lt;b&gt;PivotGrid&lt;/b&gt; control.</comment>
  </data>
  <data name="Index_Text5" xml:space="preserve">
    <value>データ行数が10,000より少ない場合は、&lt;c1-items-source /&gt;タグのsource-collection属性またはread-action-url属性を設定できます。&lt;/br&gt;そうでない場合は、&lt;a href="/Olap/DataEngine"&gt;DataEngine&lt;/a&gt;ページで使用される&lt;c1-pivot-engine /&gt;タグのservice-url属性を設定してください。</value>
    <comment>When the data row count is lower than 10,000, you can set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag.&lt;/br&gt;Otherwise, please set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag used in the &lt;a href="/Olap/DataEngine"&gt;DataEngine&lt;/a&gt; page.</comment>
  </data>
  <data name="Index_Text6" xml:space="preserve">
    <value>PivotEngineコンポーネントをIEnumerableオブジェクトに連結できます。</value>
    <comment>The PivotEngine component binds to an IEnumerable object.</comment>
  </data>
  <data name="Index_Text7" xml:space="preserve">
    <value>ビューの保存</value>
    <comment>Save View</comment>
  </data>
  <data name="Index_Text8" xml:space="preserve">
    <value>ビューのロード</value>
    <comment>Load View</comment>
  </data>
  <data name="Index_Text9" xml:space="preserve">
    <value>XLSXへのエクスポート</value>
    <comment>Export to XLSX</comment>
  </data>
  <data name="RemoteBind_Text0" xml:space="preserve">
    <value>このサンプルでは、集計するデータを提供するIEnumerableオブジェクトに&lt;b&gt;PivotEngine&lt;/b&gt;を連結します。&lt;/br&gt;すべてのデータがクライアントに転送されます。&lt;b&gt;PivotEngine&lt;/b&gt;は、Wijmo 5 OLAPコントロールなどのクライアント側にあるデータを計算します。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールと&lt;b&gt;PivotGrid&lt;/b&gt;コントロールは&lt;b&gt;PivotEngine&lt;/b&gt;に連結されます。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールでビュー定義を変更できます。&lt;/br&gt;その結果、&lt;b&gt;PivotGrid&lt;/b&gt;コントロールに集計データが表示されます。&lt;/br&gt;&lt;b&gt;PivotGrid&lt;/b&gt;コントロール内のセルをダブルクリックすると、詳細な生データがグリッドに表示されます。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; binds to an IEnumerable object, which provides the data to be aggregated.&lt;/br&gt;All the data will be transferred to the client. The &lt;b&gt;PivotEngine&lt;/b&gt; will calculate the data in the client-side, like Wijmo 5 olap controls.&lt;/br&gt;The &lt;b&gt;PivotPanel&lt;/b&gt; control and the &lt;b&gt;PivotGrid&lt;/b&gt; control are bound to the &lt;b&gt;PivotEngine&lt;/b&gt;.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control shows the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double-clicking a cell in the &lt;b&gt;PivotGrid&lt;/b&gt; control.</comment>
  </data>
  <data name="RemoteBind_Text1" xml:space="preserve">
    <value>データ行数が10,000より少ない場合は、&lt;c1-items-source /&gt;タグのsource-collection属性またはread-action-url属性を設定できます。&lt;/br&gt;そうでない場合は、&lt;a href="/Olap/DataEngine"&gt;DataEngine&lt;/a&gt;ページで使用される&lt;c1-pivot-engine /&gt;タグのservice-url属性を設定してください。</value>
    <comment>When the data row count is lower than 10,000, you can set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag.&lt;/br&gt;Otherwise, please set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag used in the &lt;a href="/Olap/DataEngine"&gt;DataEngine&lt;/a&gt; page.</comment>
  </data>
  <data name="RemoteBind_Text2" xml:space="preserve">
    <value>データを提供するリモートアクションURLにPivotEngineコンポーネントを連結します。</value>
    <comment>The PivotEngine component binds to a remote action url which provides the data.</comment>
  </data>
  <data name="Slicer_Desc" xml:space="preserve">
    <value>&lt;p&gt;
        &lt;b&gt;スライサー&lt;/b&gt; コントロールを使用すると、
        &lt;b&gt;PivotField&lt;/b&gt; オブジェクトに適用されているフィルタを簡単に編集できます。
    &lt;/p&gt;

    &lt;p&gt;
        ユーザーがクリックして値に基づいてデータをフィルター処理できるボタンを提供し、現在のフィルター処理状態を示します。
        これにより、フィルター処理された&lt;b&gt;PivotGrid&lt;/b&gt; コントロールおよび&lt;b&gt;PivotChart&lt;/b&gt; コントロールに表示される内容を理解しやすくなります。
    &lt;/p&gt;</value>
    <comment>&lt;p&gt;
        The &lt;b&gt;Slicer&lt;/b&gt; control provides a quick way to edit filters
        applied to &lt;b&gt;PivotField&lt;/b&gt; objects.
    &lt;/p&gt;
    &lt;p&gt;
        It provides buttons the user can click to filter data based on
        values and indicates the current filtering state, which makes
        it easy to understand what is shown in filtered &lt;b&gt;PivotGrid&lt;/b&gt;
        and &lt;b&gt;PivotChart&lt;/b&gt; controls.
    &lt;/p&gt;</comment>
  </data>
  <data name="Slicer_Summary" xml:space="preserve">
    <value>&lt;b&gt;スライサー&lt;/b&gt; コントロールを使用すると、
        &lt;b&gt;PivotField&lt;/b&gt; オブジェクトに適用されているフィルタを簡単に編集できます。</value>
    <comment>The &lt;b&gt;Slicer&lt;/b&gt; control provides a quick way to edit filters
        applied to &lt;b&gt;PivotField&lt;/b&gt; objects.</comment>
  </data>
  <data name="Slicer_Text0" xml:space="preserve">
    <value>&lt;b&gt;スライサー&lt;/b&gt; コントロールをカスタマイズして、ヘッダの表示/非表示、
    各項目の横にあるチェックボックスの表示/非表示、および複数項目の選択を許可するかどうかを指定できます。</value>
    <comment>You can customize the &lt;b&gt;Slicer&lt;/b&gt; control to hide or show
    a header, to hide or show checkboxes next to each item, and to allow select multi item or not :</comment>
  </data>
  <data name="Slicer_Text1" xml:space="preserve">
    <value>ヘッダーを表示</value>
    <comment>Show Header</comment>
  </data>
  <data name="Slicer_Text2" xml:space="preserve">
    <value>チェックボックスを表示</value>
    <comment>Show Checkboxes</comment>
  </data>
  <data name="Slicer_Text3" xml:space="preserve">
    <value>複数選択を許可</value>
    <comment>Allow multi select</comment>
  </data>
  <data name="Slicer_Text4" xml:space="preserve">
    <value>フィルタリングする</value>
    <comment>Select to filter</comment>
  </data>
  <data name="SSAS_Text0" xml:space="preserve">
    <value>このサンプルでは、&lt;b&gt;PivotEngine&lt;/b&gt;コンポーネントをサービスに連結します。現在、&lt;b&gt;DataEngine&lt;/b&gt; Web APIだけがサポートされています。&lt;/br&gt;このモードでは、service-url属性を設定する必要があります。&lt;/br&gt;DataEngineサービスの展開方法の詳細については、DataEngine Web API&lt;a href="http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html"&gt;ドキュメント&lt;/a&gt;を参照してください。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component binds to a service. Now only the &lt;b&gt;DataEngine&lt;/b&gt; Web API is supported.&lt;/br&gt;The service-url attribute should be set in this mode.&lt;/br&gt;You can get the details about how to deploy the DataEngine service in the DataEngine Web API &lt;a href="http://help.grapecity.com/componentone/NetHelp/c1webapi/webframe.html#DataEngine.html"&gt;documentation&lt;/a&gt;.</comment>
  </data>
  <data name="SSAS_Text1" xml:space="preserve">
    <value>このサンプルでは、&lt;b&gt;PivotEngine&lt;/b&gt;コンポーネントをキューブDataEngineデータに接続します。&lt;/br&gt;キューブDataEngineデータは、アプリケーションのStatupファイルで設定されます。&lt;/br&gt;キューブデータのフィールドをカスタマイズする場合は、&lt;c1-pivot-field-collection /&gt;タグに&lt;c1-cube-field /&gt;フィールドを追加する必要があります。&lt;/br&gt;&lt;b&gt;PivotPanel&lt;/b&gt;コントロールでビュー定義を変更できます。&lt;/br&gt;集計データは、サービスから取得されます。&lt;/br&gt;その結果、&lt;b&gt;PivotGrid&lt;/b&gt;コントロールと&lt;b&gt;PivotChart&lt;/b&gt;コントロールに集計データが表示されます。&lt;/br&gt;&lt;b&gt;PivotGrid&lt;/b&gt;コントロール内のセルをダブルクリックすると、詳細な生データがグリッドに表示されます。</value>
    <comment>In this sample, the &lt;b&gt;PivotEngine&lt;/b&gt; component connects to a cube DataEngine data.&lt;/br&gt;The cube DataEngine data is configurated in the Statup file of the application.&lt;/br&gt;If you want to customize the fields for a cube data, you need add &lt;c1-cube-field /&gt; in the &lt;c1-pivot-field-collection /&gt; tag.&lt;/br&gt;You can change the view definition in the &lt;b&gt;PivotPanel&lt;/b&gt; control.&lt;/br&gt;The aggregated data will be obtained from the service.&lt;/br&gt;Then the &lt;b&gt;PivotGrid&lt;/b&gt; control and the &lt;b&gt;PivotChart&lt;/b&gt; control show the aggregated data.&lt;/br&gt;You can find the detailed raw data shown in a grid by double-clicking a cell in the &lt;b&gt;PivotGrid&lt;/b&gt; control.</comment>
  </data>
  <data name="SSAS_Text2" xml:space="preserve">
    <value>データ行数が10,000を超える場合は、パフォーマンスを向上させるために、&lt;c1-pivot-engine /&gt;タグのservice-url属性を設定することをお勧めします。&lt;/br&gt;それ以外の場合は、&lt;a href="/Olap/Index"&gt;Index&lt;/a&gt;ページと&lt;a href="/Olap/RemoteBind"&gt;RemoteBind&lt;/a&gt;ページで使用される&lt;c1-items-source /&gt;タグのsource-collection属性またはread-action-url属性を設定してください。</value>
    <comment>When the data row count is greater than 10,000, in order to get good performance, we recommend you set the service-url attribute in the &lt;c1-pivot-engine /&gt; tag.&lt;/br&gt;Otherwise, please set the source-collection attribute or the read-action-url attribute in the &lt;c1-items-source /&gt; tag used in the &lt;a href="/Olap/Index"&gt;Index&lt;/a&gt; page and the &lt;a href="/Olap/RemoteBind"&gt;RemoteBind&lt;/a&gt; page.</comment>
  </data>
  <data name="SSAS_Text3" xml:space="preserve">
    <value>PivotEngineコンポーネントをDataEngine Web APIとキューブデータに連結します。</value>
    <comment>The PivotEngine component binds to a DataEngine Web API and cube data.</comment>
  </data>
  <data name="_ControlsNav_Text0" xml:space="preserve">
    <value>機能</value>
    <comment>Features</comment>
  </data>
  <data name="_Layout_Text0" xml:space="preserve">
    <value>ComponentOne</value>
    <comment>ComponentOne</comment>
  </data>
  <data name="_Layout_Text1" xml:space="preserve">
    <value>MVC OLAPエクスプローラー</value>
    <comment>MVC Olap Explorer</comment>
  </data>
  <data name="_Layout_Text10" xml:space="preserve">
    <value>ComponentOne for ASP.NET MVC</value>
    <comment>C1 ASP.NET MVC</comment>
  </data>
  <data name="_Layout_Text2" xml:space="preserve">
    <value>ASP.NET MVC Edition Olapエクスプローラー</value>
    <comment>ASP.NET MVC Edition Olap Explorer</comment>
  </data>
  <data name="_Layout_Text3" xml:space="preserve">
    <value>マニュアル</value>
    <comment>Documentation</comment>
  </data>
  <data name="_Layout_Text4" xml:space="preserve">
    <value>GrapeCity, Inc. All Rights Reserved.&lt;br /&gt;
            ここで示されているすべての製品および会社名は、それぞれの所有者の商標である場合があります。</value>
    <comment>GrapeCity, Inc. All Rights Reserved.&lt;br /&gt;
            All product and company names here in may be trademarks of their respective owners.</comment>
  </data>
  <data name="_Layout_Text5" xml:space="preserve">
    <value>サンプル</value>
    <comment>Sample</comment>
  </data>
  <data name="_Layout_Text6" xml:space="preserve">
    <value>ソース</value>
    <comment>Source</comment>
  </data>
  <data name="_Layout_Text7" xml:space="preserve">
    <value>設定</value>
    <comment>Settings</comment>
  </data>
  <data name="_Layout_Text8" xml:space="preserve">
    <value>説明</value>
    <comment>Description</comment>
  </data>
  <data name="_Layout_Text9" xml:space="preserve">
    <value>https://www.grapecity.co.jp/developer/componentone/aspnet-mvc</value>
    <comment>https://www.grapecity.com/en/aspnet-mvc</comment>
  </data>
  <data name="_SiteNav_Text0" xml:space="preserve">
    <value>製品情報</value>
    <comment>About</comment>
  </data>
  <data name="_SiteNav_Text1" xml:space="preserve">
    <value>サポート</value>
    <comment>Support</comment>
  </data>
  <data name="_SiteNav_Text2" xml:space="preserve">
    <value>ご購入</value>
    <comment>Pricing</comment>
  </data>
  <data name="_SiteNav_Text3" xml:space="preserve">
    <value>トライアル版</value>
    <comment>FREE TRIAL</comment>
  </data>
  <data name="_SiteNav_Text4" xml:space="preserve">
    <value>テーマの編集 &amp;gt;</value>
    <comment>Edit Theme &amp;gt;</comment>
  </data>
  <data name="_SiteNav_Text5" xml:space="preserve">
    <value>https://www.grapecity.co.jp/developer/componentone/aspnet-mvc</value>
    <comment>https://www.grapecity.com/en/aspnet-mvc</comment>
  </data>
  <data name="_SiteNav_Text6" xml:space="preserve">
    <value>https://www.grapecity.co.jp/developer/support</value>
    <comment>http://supportone.componentone.com/login</comment>
  </data>
  <data name="_SiteNav_Text7" xml:space="preserve">
    <value>https://www.grapecity.co.jp/developer/purchase</value>
    <comment>https://www.grapecity.com/en/pricing</comment>
  </data>
  <data name="_SiteNav_Text8" xml:space="preserve">
    <value>https://www.grapecity.co.jp/developer/download</value>
    <comment>https://www.grapecity.com/en/download/componentone-studio</comment>
  </data>
  <data name="Index_Text10" xml:space="preserve">
    <value>&lt;b&gt;PivotGrid&lt;/b&gt;の&lt;b&gt;OutlineMode&lt;/b&gt;プロパティを使用すると、画面に表示される余白を小さくすることができます。&lt;br /&gt;1つの値フィールドしか使用できない場合でも、&lt;b&gt;showValueFieldHeaders&lt;/b&gt;プロパティを使用して、&lt;b&gt;PivotGrid&lt;/b&gt;に値フィールドのヘッダーを強制的に表示することもできます。</value>
    <comment>You can use &lt;b&gt;OutlineMode&lt;/b&gt; property of &lt;b&gt;PivotGrid&lt;/b&gt; to compact the amount of white space shown on the screen.&lt;br /&gt;You can also force showing headers of value fields in &lt;b&gt;PivotGrid&lt;/b&gt; by using &lt;b&gt;showValueFieldHeaders&lt;/b&gt; property even only one value field available.</comment>
  </data>
</root>