@{
    var today = DateTime.Now.Date;
    var minDate = new DateTime(today.Year - 1, 1, 1);
    var maxDate = new DateTime(today.Year, 12, 31);
    var format = CalendarRes.Index_DateFormat;

    ClientSettingsModel settings = ViewBag.DemoSettingsModel;
}

<div>
    <label>Bound Calendar with min &amp; max</label>
    <c1-calendar id="@settings.ControlId" value="@today" min="@minDate" max="@maxDate" month-view="true" width="300px">
    </c1-calendar>
</div>
<p><b>@Html.Raw(CalendarRes.Index_ValidRange) <span>@minDate.ToString(format)</span> @Html.Raw(CalendarRes.Index_To) <span>@maxDate.ToString(format)</span></b></p>

<ul>
    <li>@Html.Raw(CalendarRes.Index_FirstDayOfWeek)</li>
    <li>@Html.Raw(CalendarRes.Index_ShowHeader)</li>
    <li>@Html.Raw(CalendarRes.Index_MonthView)</li>
    <li>@Html.Raw(CalendarRes.Index_RepeatButtons)</li>
    <li>@Html.Raw(CalendarRes.Index_ShowYearPicker)</li>
    <li>@Html.Raw(CalendarRes.Index_MonthsCount)</li>
    <li>@Html.Raw(CalendarRes.Index_WeeksBefore)</li>
    <li>@Html.Raw(CalendarRes.Index_WeeksAfter)</li>
</ul>

@section Settings{
    <div style="padding: 4px 8px">
        <label style="font-weight:700; display:inline-block; width: 100px">@Html.Raw(CalendarRes.Index_MonthCount)</></label>
        <c1-input-number width="150px" min="1" max="10" step="1" value="1" format="n0" value-changed="monthCountChange">
        </c1-input-number>
    </div>

    <div style="padding: 4px 8px">
        <label style="font-weight:700; display:inline-block; width: 100px"> @Html.Raw(CalendarRes.Index_WeekBefore)</></label>
        <c1-input-number width="150px" min="0" max="10" step="1" value="0" format="n0" value-changed="weekBeforeChanged">
        </c1-input-number>
    </div>

    <div style="padding: 4px 8px">
        <label style="font-weight:700; display:inline-block; width: 100px">@Html.Raw(CalendarRes.Index_WeekAfter)</></label>
        <c1-input-number width="150px" min="0" max="10" step="1" value="0" format="n0" value-changed="weekAfterChanged">
        </c1-input-number>
    </div>
}

@section Scripts{
    <script>
        function monthCountChange(sender, args) {

            var calenderControl = wijmo.Control.getControl('#DemoControl');
            if (calenderControl != null) {
                calenderControl.monthCount = sender.value;
                calenderControl.invalidate();
                if (sender.value === 1) {
                    document.querySelector('#DemoControl').style.width = "315px";
                } else {
                    document.querySelector('#DemoControl').style.width = "100%";
                }
            }
        }

        function weekBeforeChanged(sender, args) {

            var calenderControl = wijmo.Control.getControl('#DemoControl');
            if (calenderControl != null) {
                calenderControl.weeksBefore = sender.value;
                calenderControl.invalidate();
            }
        }

        function weekAfterChanged(sender, args) {

            var calenderControl = wijmo.Control.getControl('#DemoControl');
            if (calenderControl != null) {
                calenderControl.weeksAfter = sender.value;
                calenderControl.invalidate();
            }
        }
    </script>
}

@section Description{
    @Html.Raw(CalendarRes.Index_Text0)
}
