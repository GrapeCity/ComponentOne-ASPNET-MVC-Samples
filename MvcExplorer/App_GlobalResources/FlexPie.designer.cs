//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FlexPie {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FlexPie() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.FlexPie", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AnimationMode.
        /// </summary>
        internal static string ChartAnimation_AnimationMode {
            get {
                return ResourceManager.GetString("ChartAnimation_AnimationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duration.
        /// </summary>
        internal static string ChartAnimation_Duration {
            get {
                return ResourceManager.GetString("ChartAnimation_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easing.
        /// </summary>
        internal static string ChartAnimation_Easing {
            get {
                return ResourceManager.GetString("ChartAnimation_Easing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InnerRadius.
        /// </summary>
        internal static string ChartAnimation_InnerRadius {
            get {
                return ResourceManager.GetString("ChartAnimation_InnerRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows ChartAnimation for &lt;b&gt;FlexPie&lt;/b&gt;..
        /// </summary>
        internal static string ChartAnimation_Text0 {
            get {
                return ResourceManager.GetString("ChartAnimation_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use different animation modes for FlexPie by setting the &lt;b&gt;AnimationMode&lt;/b&gt; property of ChartAnimation..
        /// </summary>
        internal static string ChartAnimation_Text1 {
            get {
                return ResourceManager.GetString("ChartAnimation_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ChartAnimation class has a &lt;b&gt;Duration&lt;/b&gt; property that allows you to set the length of animation in milliseconds..
        /// </summary>
        internal static string ChartAnimation_Text2 {
            get {
                return ResourceManager.GetString("ChartAnimation_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows the FlexPie&apos;s basic features. It binds the chart to a data model..
        /// </summary>
        internal static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you move the mouse over a chart element, a tooltip will appear showing details about the data point..
        /// </summary>
        internal static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you select &lt;b&gt;InnerRadius&lt;/b&gt; greater than 0 then the &lt;b&gt;InnerText&lt;/b&gt; will appears inside center of the pie instead of Header text at the top and it&apos;s styled by &lt;b&gt;InnerTextStyle&lt;/b&gt;..
        /// </summary>
        internal static string Index_Text2 {
            get {
                return ResourceManager.GetString("Index_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows the FlexPie&apos;s labels created using ItemFormatter..
        /// </summary>
        internal static string ItemFormatter_Text0 {
            get {
                return ResourceManager.GetString("ItemFormatter_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sample shows how to create multiple pie charts based on the same data source. To create multiple pie charts, just specify several comma-separated properties in Binding..
        /// </summary>
        internal static string Multiple_Text0 {
            get {
                return ResourceManager.GetString("Multiple_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Charts Per Line.
        /// </summary>
        internal static string Multiple_Text1 {
            get {
                return ResourceManager.GetString("Multiple_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows how to bind FlexPie to a remote data..
        /// </summary>
        internal static string RemoteBind_Text0 {
            get {
                return ResourceManager.GetString("RemoteBind_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This view shows the FlexPie&apos;s selection feature..
        /// </summary>
        internal static string Selection_Text0 {
            get {
                return ResourceManager.GetString("Selection_Text0", resourceCulture);
            }
        }
    }
}
