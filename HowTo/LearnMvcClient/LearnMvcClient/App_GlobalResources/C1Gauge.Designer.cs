//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class C1Gauge {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal C1Gauge() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.C1Gauge", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hierarchy of gauge classes is as follows:.
        /// </summary>
        internal static string Architecture_Text1 {
            get {
                return ResourceManager.GetString("Architecture_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;face&lt;/b&gt;:
        ///        Represents the gauge background. The &quot;min&quot; and &quot;max&quot; properties
        ///        of the face range correspond to the &quot;min&quot; and &quot;max&quot; properties
        ///        of the gauge, and limit the values that the gauge can display..
        /// </summary>
        internal static string Architecture_Text10 {
            get {
                return ResourceManager.GetString("Architecture_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;pointer&lt;/b&gt;:
        ///        Indicates the gauge&apos;s current value. The &quot;max&quot; property of
        ///        the pointer range corresponds to the &quot;value&quot; property of
        ///        the gauge..
        /// </summary>
        internal static string Architecture_Text11 {
            get {
                return ResourceManager.GetString("Architecture_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to these two special ranges, gauges may have any number
        ///    of additional ranges added to their &quot;ranges&quot; collection..
        /// </summary>
        internal static string Architecture_Text12 {
            get {
                return ResourceManager.GetString("Architecture_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Gauge&lt;/b&gt;: Abstract base class..
        /// </summary>
        internal static string Architecture_Text2 {
            get {
                return ResourceManager.GetString("Architecture_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;RadialGauge&lt;/b&gt;: Displays values along a circular scale..
        /// </summary>
        internal static string Architecture_Text3 {
            get {
                return ResourceManager.GetString("Architecture_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;LinearGauge&lt;/b&gt;: Displays values along a linear scale..
        /// </summary>
        internal static string Architecture_Text4 {
            get {
                return ResourceManager.GetString("Architecture_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;BulletGraph&lt;/b&gt;: Displays actual and target values
        ///                        along a linear scale..
        /// </summary>
        internal static string Architecture_Text5 {
            get {
                return ResourceManager.GetString("Architecture_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The root Gauge class provides basic elements shares by all
        ///    Gauge classes:.
        /// </summary>
        internal static string Architecture_Text6 {
            get {
                return ResourceManager.GetString("Architecture_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An SVG-based control template with customizable parts..
        /// </summary>
        internal static string Architecture_Text7 {
            get {
                return ResourceManager.GetString("Architecture_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A common set of properties, events and methods including
        ///        &quot;min&quot;, &quot;max&quot;, &quot;value&quot;, and &quot;ranges&quot;..
        /// </summary>
        internal static string Architecture_Text8 {
            get {
                return ResourceManager.GetString("Architecture_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC gauges are composed of &lt;b&gt;Range&lt;/b&gt; objects.
        ///    Every gauge has at least two ranges: the &quot;face&quot; and
        ///    the &quot;pointer&quot;:.
        /// </summary>
        internal static string Architecture_Text9 {
            get {
                return ResourceManager.GetString("Architecture_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Architecture.
        /// </summary>
        internal static string Architecture_Title {
            get {
                return ResourceManager.GetString("Architecture_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Ranges.
        /// </summary>
        internal static string Architecture_Title1 {
            get {
                return ResourceManager.GetString("Architecture_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The main properties common to all C1 MVC gauge classes are:.
        /// </summary>
        internal static string BasicProperties_Text1 {
            get {
                return ResourceManager.GetString("BasicProperties_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isReadOnly.
        /// </summary>
        internal static string BasicProperties_Text10 {
            get {
                return ResourceManager.GetString("BasicProperties_Text10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to step.
        /// </summary>
        internal static string BasicProperties_Text11 {
            get {
                return ResourceManager.GetString("BasicProperties_Text11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to isAnimated.
        /// </summary>
        internal static string BasicProperties_Text12 {
            get {
                return ResourceManager.GetString("BasicProperties_Text12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;dt&gt;min&lt;/dt&gt;
        ///    &lt;dd&gt;The smallest value that can be displayed on the gauge.&lt;/dd&gt;
        ///    &lt;dt&gt;max&lt;/dt&gt;
        ///    &lt;dd&gt;The largest value that can be displayed on the gauge.&lt;/dd&gt;
        ///    &lt;dt&gt;value&lt;/dt&gt;
        ///    &lt;dd&gt;The current value displayed on the gauge.&lt;/dd&gt;
        ///    &lt;dt&gt;showText&lt;/dt&gt;
        ///    &lt;dd&gt;Whether to show the min/max/value properties as text on the gauge.&lt;/dd&gt;.
        /// </summary>
        internal static string BasicProperties_Text2 {
            get {
                return ResourceManager.GetString("BasicProperties_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC gauges can be used as value editors. The editing features
        ///    are controlled by these properties:.
        /// </summary>
        internal static string BasicProperties_Text3 {
            get {
                return ResourceManager.GetString("BasicProperties_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;dt&gt;isReadOnly&lt;/dt&gt;
        ///    &lt;dd&gt;Whether users can change the gauge value.&lt;/dd&gt;
        ///    &lt;dt&gt;step&lt;/dt&gt;
        ///    &lt;dd&gt;The step to use then changing the gauge value.&lt;/dd&gt;
        ///    &lt;dt&gt;isAnimated&lt;/dt&gt;
        ///    &lt;dd&gt;Whether to use animations to display value changes.&lt;/dd&gt;.
        /// </summary>
        internal static string BasicProperties_Text4 {
            get {
                return ResourceManager.GetString("BasicProperties_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the panel below to see the effect of each of these properties
        ///    on different types of Gauge:.
        /// </summary>
        internal static string BasicProperties_Text5 {
            get {
                return ResourceManager.GetString("BasicProperties_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min.
        /// </summary>
        internal static string BasicProperties_Text6 {
            get {
                return ResourceManager.GetString("BasicProperties_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max.
        /// </summary>
        internal static string BasicProperties_Text7 {
            get {
                return ResourceManager.GetString("BasicProperties_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to value.
        /// </summary>
        internal static string BasicProperties_Text8 {
            get {
                return ResourceManager.GetString("BasicProperties_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to showText.
        /// </summary>
        internal static string BasicProperties_Text9 {
            get {
                return ResourceManager.GetString("BasicProperties_Text9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Basics.
        /// </summary>
        internal static string BasicProperties_Title {
            get {
                return ResourceManager.GetString("BasicProperties_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BulletGraph is a type of linear gauge designed specifically
        ///    for use in dashboards. It displays a single key measure along
        ///    with a comparative measure and qualitative ranges to instantly
        ///    signal whether the measure is good, bad, or in some other state..
        /// </summary>
        internal static string BulletGraphs_Text1 {
            get {
                return ResourceManager.GetString("BulletGraphs_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet Graphs were created and popularized by dashboard design
        ///    expert Stephen Few..
        /// </summary>
        internal static string BulletGraphs_Text2 {
            get {
                return ResourceManager.GetString("BulletGraphs_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet Graphs.
        /// </summary>
        internal static string BulletGraphs_Title {
            get {
                return ResourceManager.GetString("BulletGraphs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;face&quot; is a range that represents the gauge background.
        ///    The &quot;min&quot; and &quot;max&quot; properties of the face range correspond
        ///    to the &quot;min&quot; and &quot;max&quot; properties of the gauge control, and
        ///    limit the values that the gauge can display..
        /// </summary>
        internal static string ElementsFace_Text1 {
            get {
                return ResourceManager.GetString("ElementsFace_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        internal static string ElementsFace_Text2 {
            get {
                return ResourceManager.GetString("ElementsFace_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thickness.
        /// </summary>
        internal static string ElementsFace_Text3 {
            get {
                return ResourceManager.GetString("ElementsFace_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Face Element.
        /// </summary>
        internal static string ElementsFace_Title {
            get {
                return ResourceManager.GetString("ElementsFace_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;pointer&quot; is a range that indicates the gauge&apos;s current
        ///    value. The &quot;max&quot; property of the pointer range corresponds
        ///    to the &quot;value&quot; property of the gauge..
        /// </summary>
        internal static string ElementsPointer_Text1 {
            get {
                return ResourceManager.GetString("ElementsPointer_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        internal static string ElementsPointer_Text2 {
            get {
                return ResourceManager.GetString("ElementsPointer_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thickness.
        /// </summary>
        internal static string ElementsPointer_Text3 {
            get {
                return ResourceManager.GetString("ElementsPointer_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointer Element.
        /// </summary>
        internal static string ElementsPointer_Title {
            get {
                return ResourceManager.GetString("ElementsPointer_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to the &quot;face&quot; and &quot;pointer&quot; ranges, gauges may
        ///    contain additional ranges that show zones within the gauge
        ///    (like &apos;bad&apos;, &apos;average&apos;, and &apos;good&apos;)..
        /// </summary>
        internal static string ElementsRanges_Text1 {
            get {
                return ResourceManager.GetString("ElementsRanges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Depending on the setting of the &apos;showRanges&apos; property, these
        ///    additional ranges may be shown at all times or used to determine
        ///    the color of the &apos;pointer&apos; range based on the current gauge
        ///    value..
        /// </summary>
        internal static string ElementsRanges_Text2 {
            get {
                return ResourceManager.GetString("ElementsRanges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Ranges.
        /// </summary>
        internal static string ElementsRanges_Text3 {
            get {
                return ResourceManager.GetString("ElementsRanges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ranges.
        /// </summary>
        internal static string ElementsRanges_Text4 {
            get {
                return ResourceManager.GetString("ElementsRanges_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ranges.
        /// </summary>
        internal static string ElementsRanges_Title {
            get {
                return ResourceManager.GetString("ElementsRanges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC gauges have three properties that affect text display:.
        /// </summary>
        internal static string ElementsTextValues_Text1 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;showText&lt;/b&gt;:
        ///        Determines whether the gauge should show min, max, and/or
        ///        current values as text elements,.
        /// </summary>
        internal static string ElementsTextValues_Text2 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;format&lt;/b&gt;:
        ///        Gets or sets the format string used to convert numeric values
        ///        into strings, and.
        /// </summary>
        internal static string ElementsTextValues_Text3 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;getText&lt;/b&gt;:
        ///        A callback function used to provide custom strings to display
        ///        the values..
        /// </summary>
        internal static string ElementsTextValues_Text4 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Text.
        /// </summary>
        internal static string ElementsTextValues_Text5 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format.
        /// </summary>
        internal static string ElementsTextValues_Text6 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Text.
        /// </summary>
        internal static string ElementsTextValues_Text7 {
            get {
                return ResourceManager.GetString("ElementsTextValues_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Values.
        /// </summary>
        internal static string ElementsTextValues_Title {
            get {
                return ResourceManager.GetString("ElementsTextValues_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The thumb is a circle shown at the end of the &apos;pointer&apos; range.
        ///    Use the &apos;thumbSize&apos; property to set the size of the thumb
        ///    element..
        /// </summary>
        internal static string ElementsThumb_Text1 {
            get {
                return ResourceManager.GetString("ElementsThumb_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear gauges use the thumb to show the current value as text.
        ///    In these cases, the minimum size of the thumb is determined
        ///    by the size of the text element it contains..
        /// </summary>
        internal static string ElementsThumb_Text2 {
            get {
                return ResourceManager.GetString("ElementsThumb_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the thumb color is determined by the &quot;pointer&quot;
        ///    color, but you can override that using CSS..
        /// </summary>
        internal static string ElementsThumb_Text3 {
            get {
                return ResourceManager.GetString("ElementsThumb_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        internal static string ElementsThumb_Text4 {
            get {
                return ResourceManager.GetString("ElementsThumb_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumb Size.
        /// </summary>
        internal static string ElementsThumb_Text5 {
            get {
                return ResourceManager.GetString("ElementsThumb_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thumb Element.
        /// </summary>
        internal static string ElementsThumb_Title {
            get {
                return ResourceManager.GetString("ElementsThumb_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tickmarks may be shown along the face to help users read the
        ///    gauge. Their visibility and position are controlled by the
        ///    &apos;showTicks&apos;, &apos;tickSpacing&apos;, and &apos;step&apos; properties..
        /// </summary>
        internal static string ElementsTickmarks_Text1 {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tickmark color and width can be defined in CSS or in
        ///    code..
        /// </summary>
        internal static string ElementsTickmarks_Text2 {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tickmarks.
        /// </summary>
        internal static string ElementsTickmarks_Text3 {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spacing.
        /// </summary>
        internal static string ElementsTickmarks_Text4 {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width.
        /// </summary>
        internal static string ElementsTickmarks_Text5 {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        internal static string ElementsTickmarks_Text6 {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tickmarks.
        /// </summary>
        internal static string ElementsTickmarks_Title {
            get {
                return ResourceManager.GetString("ElementsTickmarks_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every C1 MVC gauge is composed of the following elements,
        ///    defined in the control template:.
        /// </summary>
        internal static string GaugeElements_Text1 {
            get {
                return ResourceManager.GetString("GaugeElements_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Face&lt;/b&gt;:
        ///        The &quot;face&quot; is a range that represents the gauge background.
        ///        The &quot;min&quot; and &quot;max&quot; properties of the face range correspond
        ///        to the &quot;min&quot; and &quot;max&quot; properties of the gauge control, and
        ///        limit the values that the gauge can display..
        /// </summary>
        internal static string GaugeElements_Text2 {
            get {
                return ResourceManager.GetString("GaugeElements_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Pointer&lt;/b&gt;:
        ///        The &quot;pointer&quot; is a range that indicates the gauge&apos;s current
        ///        value. The &quot;max&quot; property of the pointer range corresponds
        ///        to the &quot;value&quot; property of the gauge..
        /// </summary>
        internal static string GaugeElements_Text3 {
            get {
                return ResourceManager.GetString("GaugeElements_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Ranges&lt;/b&gt;:
        ///        In addition to the &quot;face&quot; and &quot;pointer&quot; ranges, gauges may
        ///        contain additional ranges that show zones within the gauge
        ///        (like &apos;bad&apos;, &apos;average&apos;, and &apos;good&apos;). Depending on the setting
        ///        of the &apos;showRanges&apos; property, these additional ranges may be
        ///        shown at all times or used to determine the color of the
        ///        &apos;pointer&apos; based on the current gauge value..
        /// </summary>
        internal static string GaugeElements_Text4 {
            get {
                return ResourceManager.GetString("GaugeElements_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Thumb&lt;/b&gt;:
        ///        The thumb is a circle shown at the end of the &apos;pointer&apos; range.
        ///        Use the &apos;thumbSize&apos; property to set the size of the thumb
        ///        element..
        /// </summary>
        internal static string GaugeElements_Text5 {
            get {
                return ResourceManager.GetString("GaugeElements_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Tickmarks&lt;/b&gt;:
        ///        Tickmarks may be shown along the face to help users read the
        ///        gauge. Their visibility and position are controlled by the
        ///        &apos;showTicks&apos;, &apos;tickSpacing&apos;, and &apos;step&apos; properties..
        /// </summary>
        internal static string GaugeElements_Text6 {
            get {
                return ResourceManager.GetString("GaugeElements_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Text Values&lt;/b&gt;:
        ///        Gauges may show the value of their &apos;min&apos;, &apos;max&apos;, and &apos;value&apos;
        ///        properties as text. Use the &apos;showText&apos; property to determine
        ///        which values should be displayed. Use the &apos;getText&apos; property
        ///        to customize the text displayed on the gauge..
        /// </summary>
        internal static string GaugeElements_Text7 {
            get {
                return ResourceManager.GetString("GaugeElements_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move the mouse over the gauge to highlight each element:.
        /// </summary>
        internal static string GaugeElements_Text8 {
            get {
                return ResourceManager.GetString("GaugeElements_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Elements.
        /// </summary>
        internal static string GaugeElements_Title {
            get {
                return ResourceManager.GetString("GaugeElements_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC includes three types of gauge: &lt;b&gt;RadialGauge&lt;/b&gt;,
        ///    &lt;b&gt;LinearGauge&lt;/b&gt;, and &lt;b&gt;BulletGraph&lt;/b&gt;:.
        /// </summary>
        internal static string GaugeTypes_Text1 {
            get {
                return ResourceManager.GetString("GaugeTypes_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A radial gauge displays a metric as a percentage of the length
        ///    of a circular scale, like a pie or donut chart with a single
        ///    slice. By default, the radial scale displays a 180-degree arc.
        ///    You can change that by adjusting its start and sweep angles..
        /// </summary>
        internal static string GaugeTypes_Text2 {
            get {
                return ResourceManager.GetString("GaugeTypes_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear gauges are characterized by a linear scale which can be
        ///    horizontal or vertical..
        /// </summary>
        internal static string GaugeTypes_Text3 {
            get {
                return ResourceManager.GetString("GaugeTypes_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet graphs are a variation on linear gauges that displays actual
        ///    and target values. It may also show ranges that identify whether
        ///    the actual or current value is good or bad..
        /// </summary>
        internal static string GaugeTypes_Text4 {
            get {
                return ResourceManager.GetString("GaugeTypes_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet graphs convey information in a compact space, making them ideal
        ///    for dashboards that need to display groups of single-valued metrics
        ///    such as the current year-to-date sales revenue..
        /// </summary>
        internal static string GaugeTypes_Text5 {
            get {
                return ResourceManager.GetString("GaugeTypes_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Types.
        /// </summary>
        internal static string GaugeTypes_Title {
            get {
                return ResourceManager.GetString("GaugeTypes_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radial Gauges.
        /// </summary>
        internal static string GaugeTypes_Title1 {
            get {
                return ResourceManager.GetString("GaugeTypes_Title1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear Gauges.
        /// </summary>
        internal static string GaugeTypes_Title2 {
            get {
                return ResourceManager.GetString("GaugeTypes_Title2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet Graphs.
        /// </summary>
        internal static string GaugeTypes_Title3 {
            get {
                return ResourceManager.GetString("GaugeTypes_Title3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauges are used to display single values. They are often used
        ///    in dashboards, and use segmenting and color coding to present
        ///    values in a clear and easy to read way..
        /// </summary>
        internal static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC gauges are streamlined. They were designed to be easy to
        ///    use and to read, especially on small-screen devices..
        /// </summary>
        internal static string Index_Text2 {
            get {
                return ResourceManager.GetString("Index_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC gauges can also be used as input controls. If you set
        ///    their &quot;isReadOnly&quot; property to false, users will be able to
        ///    change the value using the mouse, keyboard, or touch..
        /// </summary>
        internal static string Index_Text3 {
            get {
                return ResourceManager.GetString("Index_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC includes three types of gauge: &lt;b&gt;RadialGauge&lt;/b&gt;,
        ///    &lt;b&gt;LinearGauge&lt;/b&gt;, and &lt;b&gt;BulletGraph&lt;/b&gt;..
        /// </summary>
        internal static string Index_Text4 {
            get {
                return ResourceManager.GetString("Index_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A radial gauge displays a metric as a percentage of the length
        ///    of a circular scale, like a pie or donut chart with a single
        ///    slice. By default, the radial scale displays a 180-degree arc.
        ///    You can change that by adjusting its start and sweep angles..
        /// </summary>
        internal static string Index_Text5 {
            get {
                return ResourceManager.GetString("Index_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear gauges are characterized by a linear scale which can be
        ///    horizontal or vertical..
        /// </summary>
        internal static string Index_Text6 {
            get {
                return ResourceManager.GetString("Index_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet graphs are a variation on linear gauges that displays actual
        ///    and target values. It may also show ranges that identify whether
        ///    the actual or current value is good or bad..
        /// </summary>
        internal static string Index_Text7 {
            get {
                return ResourceManager.GetString("Index_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bullet graphs convey information in a compact space, making them ideal
        ///    for dashboards that need to display groups of single-valued metrics
        ///    such as the current year-to-date sales revenue..
        /// </summary>
        internal static string Index_Text8 {
            get {
                return ResourceManager.GetString("Index_Text8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC Gauges.
        /// </summary>
        internal static string Index_Title {
            get {
                return ResourceManager.GetString("Index_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear gauges display a metric as a percentage of the length
        ///    of a linear scale.
        ///    They can be horizontal or vertical, depending on the setting
        ///    of the &quot;direction&quot; property..
        /// </summary>
        internal static string LinearGauges_Text1 {
            get {
                return ResourceManager.GetString("LinearGauges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the controls below to see the effect of the main
        ///    LinearGauge properties:.
        /// </summary>
        internal static string LinearGauges_Text2 {
            get {
                return ResourceManager.GetString("LinearGauges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to value.
        /// </summary>
        internal static string LinearGauges_Text3 {
            get {
                return ResourceManager.GetString("LinearGauges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to direction.
        /// </summary>
        internal static string LinearGauges_Text4 {
            get {
                return ResourceManager.GetString("LinearGauges_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear Gauges.
        /// </summary>
        internal static string LinearGauges_Title {
            get {
                return ResourceManager.GetString("LinearGauges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radial gauges display a metric as a percentage of the length
        ///    of a circular scale, like a pie or donut chart with a single
        ///    slice..
        /// </summary>
        internal static string RadialGauges_Text1 {
            get {
                return ResourceManager.GetString("RadialGauges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, the radial scale displays a 180-degree arc.
        ///    You can change that by adjusting its start and sweep angles.
        ///    If the &quot;autoScale&quot; property is set to true, the control
        ///    will automatically scale the gauge to fill the host element
        ///    taking onto account the &quot;startAngle&quot; and &quot;sweepAngle&quot;
        ///    properties..
        /// </summary>
        internal static string RadialGauges_Text2 {
            get {
                return ResourceManager.GetString("RadialGauges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the controls below to see the effect of the main RadialGauge
        ///    properties:.
        /// </summary>
        internal static string RadialGauges_Text3 {
            get {
                return ResourceManager.GetString("RadialGauges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to value.
        /// </summary>
        internal static string RadialGauges_Text4 {
            get {
                return ResourceManager.GetString("RadialGauges_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to startAngle.
        /// </summary>
        internal static string RadialGauges_Text5 {
            get {
                return ResourceManager.GetString("RadialGauges_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sweepAngle.
        /// </summary>
        internal static string RadialGauges_Text6 {
            get {
                return ResourceManager.GetString("RadialGauges_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to autoScale.
        /// </summary>
        internal static string RadialGauges_Text7 {
            get {
                return ResourceManager.GetString("RadialGauges_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Radial Gauges.
        /// </summary>
        internal static string RadialGauges_Title {
            get {
                return ResourceManager.GetString("RadialGauges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC gauges are composed of &lt;b&gt;Range&lt;/b&gt; objects.
        ///    Range objects have &quot;min&quot; and &quot;max&quot; properties the define
        ///    the extent of the range, as well as &quot;thickness&quot; and &quot;color&quot;
        ///    properties that define the appearance of the range..
        /// </summary>
        internal static string Ranges_Text1 {
            get {
                return ResourceManager.GetString("Ranges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every gauge has at least two ranges, the &quot;face&quot; and
        ///  the &quot;pointer&quot;:.
        /// </summary>
        internal static string Ranges_Text2 {
            get {
                return ResourceManager.GetString("Ranges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;face&lt;/b&gt;:
        ///        Represents the gauge background. The &quot;min&quot; and &quot;max&quot; properties
        ///        of the face range correspond to the &quot;min&quot; and &quot;max&quot; properties
        ///        of the gauge, and limit the values that the gauge can display..
        /// </summary>
        internal static string Ranges_Text3 {
            get {
                return ResourceManager.GetString("Ranges_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;pointer&lt;/b&gt;:
        ///        Indicates the gauge&apos;s current value. The &quot;max&quot; property of
        ///        the pointer range corresponds to the &quot;value&quot; property of
        ///        the gauge..
        /// </summary>
        internal static string Ranges_Text4 {
            get {
                return ResourceManager.GetString("Ranges_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In addition to these two special ranges, gauges may have any number
        ///    of additional ranges added to their &quot;ranges&quot; collection. These
        ///    additional ranges can be used in two ways:.
        /// </summary>
        internal static string Ranges_Text5 {
            get {
                return ResourceManager.GetString("Ranges_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, extra ranges appear as part of the gauge background.
        ///    This way you can show &apos;zones&apos; within the gauge, like &apos;good&apos;,
        ///    &apos;average&apos;, and &apos;bad&apos; for example.
        ///    If you set the gauge&apos;s &quot;showRanges&quot; property to false, the
        ///    additional ranges are not shown. Instead, they are used to
        ///    automatically set the color of the &quot;pointer&quot; based on the
        ///    current gauge value:.
        /// </summary>
        internal static string Ranges_Text6 {
            get {
                return ResourceManager.GetString("Ranges_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to showRanges.
        /// </summary>
        internal static string Ranges_Text7 {
            get {
                return ResourceManager.GetString("Ranges_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ranges.
        /// </summary>
        internal static string Ranges_Title {
            get {
                return ResourceManager.GetString("Ranges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the &quot;wj-state-focused&quot; pseudo-class to add special
        ///    effects to gauges when they contain the focus..
        /// </summary>
        internal static string StylingFocus_Text1 {
            get {
                return ResourceManager.GetString("StylingFocus_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, we customized the appearance of the thumb
        ///    when the gauges have focus:.
        /// </summary>
        internal static string StylingFocus_Text2 {
            get {
                return ResourceManager.GetString("StylingFocus_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Focus Styling.
        /// </summary>
        internal static string StylingFocus_Title {
            get {
                return ResourceManager.GetString("StylingFocus_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the standard &quot;:hover&quot; pseudo-class to add special
        ///    effects to gauges when the mouse moves over them..
        /// </summary>
        internal static string StylingHover_Text1 {
            get {
                return ResourceManager.GetString("StylingHover_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, we customized the pointer and the thumb
        ///    when the mouse mover over the gauges:.
        /// </summary>
        internal static string StylingHover_Text2 {
            get {
                return ResourceManager.GetString("StylingHover_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Hover Styling.
        /// </summary>
        internal static string StylingHover_Title {
            get {
                return ResourceManager.GetString("StylingHover_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The color and position of the ranges is primarily defined
        ///    by the value of the &apos;showRanges&apos; and &apos;ranges&apos; properties..
        /// </summary>
        internal static string StylingRanges_Text1 {
            get {
                return ResourceManager.GetString("StylingRanges_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In this example, we also used the &apos;:focus&apos; pseudo-class to
        ///    change the opacity of the ranges when the mouse hovers over
        ///    the gauges:.
        /// </summary>
        internal static string StylingRanges_Text2 {
            get {
                return ResourceManager.GetString("StylingRanges_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Styling Ranges.
        /// </summary>
        internal static string StylingRanges_Title {
            get {
                return ResourceManager.GetString("StylingRanges_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The gauges in C1Studio for Silverlight offered more
        ///    formatting options than the gauges in C1 MVC, but
        ///    it is possible to achieve similar results with both
        ///    using the properties available in the C1 MVC gauges..
        /// </summary>
        internal static string StylingSilverlight_Text1 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result is often clearer and easier to read gauges
        ///    that work better on mobile devices..
        /// </summary>
        internal static string StylingSilverlight_Text2 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The table below shows a comparison. The Silverlight
        ///    gauges in the table are static images; the C1 MVC gauges
        ///    are actual controls:.
        /// </summary>
        internal static string StylingSilverlight_Text3 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Tickmarks.
        /// </summary>
        internal static string StylingSilverlight_Text4 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animate.
        /// </summary>
        internal static string StylingSilverlight_Text5 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silverlight.
        /// </summary>
        internal static string StylingSilverlight_Text6 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C1 MVC.
        /// </summary>
        internal static string StylingSilverlight_Text7 {
            get {
                return ResourceManager.GetString("StylingSilverlight_Text7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silverlight vs C1 MVC Gauges.
        /// </summary>
        internal static string StylingSilverlight_Title {
            get {
                return ResourceManager.GetString("StylingSilverlight_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The appearance of the gauge controls is primarily defined in CSS.
        ///    To customize it, copy the CSS rules from the default theme to a new
        ///    CSS file and modify them as needed..
        /// </summary>
        internal static string Styling_Text1 {
            get {
                return ResourceManager.GetString("Styling_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the gauges to edit the color of the panel:.
        /// </summary>
        internal static string Styling_Text2 {
            get {
                return ResourceManager.GetString("Styling_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gauge Styling.
        /// </summary>
        internal static string Styling_Title {
            get {
                return ResourceManager.GetString("Styling_Title", resourceCulture);
            }
        }
    }
}
