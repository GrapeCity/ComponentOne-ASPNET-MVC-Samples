//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcExplorer.Localization {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MultiAutoCompleteRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal MultiAutoCompleteRes() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MvcExplorer.Localization.MultiAutoCompleteRes", typeof(MultiAutoCompleteRes).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Type in a system color name. Try to type in &quot;red&quot;..
        /// </summary>
        public static string ComplexType_Text0 {
            get {
                return ResourceManager.GetString("ComplexType_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bind to a list of complex type.
        /// </summary>
        public static string ComplexType_Text1 {
            get {
                return ResourceManager.GetString("ComplexType_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This sample shows how to bind to a list of complex type using &quot;DisplayMemberPath&quot; and &quot;SelectedValuePath&quot;..
        /// </summary>
        public static string ComplexType_Text2 {
            get {
                return ResourceManager.GetString("ComplexType_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom action.
        /// </summary>
        public static string CustomAction_CustomAction {
            get {
                return ResourceManager.GetString("CustomAction_CustomAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom action with MaxItems.
        /// </summary>
        public static string CustomAction_CustomActionWithMaxItems {
            get {
                return ResourceManager.GetString("CustomAction_CustomActionWithMaxItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Search for types in mscorlib:.
        /// </summary>
        public static string CustomAction_Text0 {
            get {
                return ResourceManager.GetString("CustomAction_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This sample shows how to provide incremental search by using custom action as data source for MultiAutoComplete control..
        /// </summary>
        public static string CustomAction_Text1 {
            get {
                return ResourceManager.GetString("CustomAction_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Type in a country name.
        /// </summary>
        public static string Index_Text0 {
            get {
                return ResourceManager.GetString("Index_Text0", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &lt;b&gt;MultiAutoComplete&lt;/b&gt; control allows users to pick items from lists
        ///        that contain custom objects or simple strings..
        /// </summary>
        public static string Index_Text1 {
            get {
                return ResourceManager.GetString("Index_Text1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to In this sample, the &lt;b&gt;MultiAutoComplete&lt;/b&gt; control uses a string array as its ItemsSource.
        ///        The maximum number of token fields is set to 4..
        /// </summary>
        public static string Index_Text2 {
            get {
                return ResourceManager.GetString("Index_Text2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This sample shows the basic usage of the MultiAutoComplete control..
        /// </summary>
        public static string Index_Text3 {
            get {
                return ResourceManager.GetString("Index_Text3", resourceCulture);
            }
        }
    }
}
